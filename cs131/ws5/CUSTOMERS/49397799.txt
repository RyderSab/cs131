US	49397799	R21YBC5L2H6L00	1930110898	202093238	Jess in Action: Java Rule-Based Systems (In Action series)	Books	4	9	10	N	N	Waited a long time, and my patience was rewarded	I see two ways to avoid writing a hard-to-use book about a complex product: one, write a book you wish existed when needed it. Or, if you've brought something new to the world, write about it so that anyone could understand what it does and how it works. I think Friedman-Hill has managed exactly that.<br />It's not easy for an expert to discuss the fundamentals of a creation as if it was altogether new, but Friedman-Hill manages this with good humor, a light touch, and most importantly a natural ability to describe how using rules-based engines can provide real power to the program designer.<br />As both guide and reference, this book has helped me apply Jess and reinforce my understanding of other ways to take advantage of it. When I first came across the website for Jess years ago, there wasn't enough context there for me to figure out where to start. With this book in hand I wrote some prototypes, learned how the engine worked, and started looking for effective ways to incorporate this tool into other tasks.<br />This book is best used by a self-starting, proficient programmer who is looking for powerful ways to tackle complex problems. For those who might need more motivation to invest their time, you'll just have to work a little harder. This is the only book available on the subject, and while the explanations run smoothly, feeling comfortable with Jess will take some time. That said, you should do it; you'll (eventually) be glad you did.<br />This is a fine book; I rate it 4 stars because it's the only book available on the subject. It's clear, well-written, informative, and entertaining -- for a nerd, anyway -- but I like to believe there's room to improve on it, and maybe even room for a &quot;best&quot; book. Nonetheless, your money will certainly be well-spent right here.	2003-11-24
US	49397799	R3JNX7AR0MS1RL	1930110405	65748615	LDAP Programming, Management, and Integration	Books	3	14	15	N	N	Good information, annoying format	I'm waiting for a book on LDAP and directory services that believes the importance of these tools is not self-evident. When a book on this subject that persuades the reader to learn about it comes around, I'll buy two copies.<br />Clayton Donley, who details his involvement and contributions to the field in the introduction, is an expert; he might even be *the* expert. Certainly he's been called upon over time to promote these technologies and so has refined his understanding on many subtle issues. Thus the book has a comfortable way of introducing new terms and explains individual points well. The code examples are concise and clean. There are several instances, however, where the author assumes a point is self-explanatory when it isn't. Often the material doesn't seem to hold together for want of a short sidebar.<br />Some chapters seem stitched together from a collection of such notes and lack flow as well. The outline form of the chapters seems contrived, sometimes overwhelming the content. There are a fair number of forward references too, which I found very distracting. I had to use the index or google often enough that I got annoyed. A comprehensive glossary would have been really helpful.<br />With so many short, excerpt-like elements making up a chapter, I found it hard to focus. I wouldn't call it a promising reference either. While it is still one of the better books on LDAP I've come across, the weaknesses of make me think I won't consult it very often.	2003-08-27
US	49397799	R3JS9QPQR9UJWI	1590591046	76318275	In Search of Stupidity: Over 20 Years of High-Tech Marketing Disasters	Books	5	6	8	N	N	As informative as it is entertaining	Chapman writes in a style that is difficult to pull off. When you deride the mistakes of others, it's easy to come off as an overbearing, better-than-thou observer who hasn't done anything splashy but likes criticizing those who have. It's also easy to appear mean-spirited by taking easy shots at people who, however much they might deserve, have already lost big and don't really need anyone to tell them that.<br />Chapman has been in the business and studied his trade closely. His cautionary tales are mildly laced with armchair quarterbacking. They are heavily dosed, however, with common sense: don't sell two products with the same name, you'll confuse your audience; greedy and litigious people make lousy business partners; intellect is a limited resource, so if a company can make fewer stupid mistakes than the competition and capitalize on their mistakes, it should do well.<br />What's also obvious is how easily some high-tech developers and their management fall into the traps of hubris, control mania, and management by force of personality. The results, as Chapman paints them, are sometimes amusing, sometimes sad. Sometimes they don't seem so dumb if you consider how prolonged stress can fool with anyone's judgment. But Chapman reminds the reader that all these cases demonstrate how a company took its eye off the ball and refused to put it back, and ended up a shadow of its former self, if that.<br />Since Microsoft is the computing market, statistically speaking, Chapman has a lot to say about what this company has (and hasn't done) to stay on top. The analysis is pragmatic and credible. Some of Chapman's other historical discussions felt at odds with the timelines as I remember them, but then again I didn't research them.<br />The lessons Chapman presents as he goes, in particular through his interview with Joel Spolsky, are real gems. Anyone who wants to understand high-tech markets will learn something from this book, and have more than a few smiles along the way.	2003-08-11
US	49397799	RSMDOLVTW423X	1930110588	131046448	Java Development with Ant	Books	4	5	7	N	N	Far-ranging book covers a bit of everything	The developers of Ant exude an energy similar to avid Perl users, a belief in one tool that can do anything and everything. Ant is an integration tool that supports building and testing Java code,  and deploying web applications, all through the use of XML-driven scripts.<br />On the way to discussing those topics, the authors cover quite a lot more territory. A few other web-development tools that work well with Ant are described, as are some best practices towards good code design and good maintenance and testing techniques.<br />And life-giving Ant is in the middle of all of it! Actually I suppose that's a good thing, but I'd rather be led there and given something to understand, not just given a set of XML tags to plug in and prosper with.<br />It seems a bit wild to focus on such a subtle point in such a well-received book, but more and more my job is getting to reduced to mastering the grammar of yet another DTD, and it sucks the fun out of what I'm doing. What I like about the short books on make is that there are things left to the reader to work out for himself, and that leads to a better understanding of the tool. Here we have a guide that seems to leave nothing to the imagination; perfect for drones.<br />I'd prefer it if the authors spent a little more time elaborating on the standard Ant documentation; it could use some highlighting here and there. It's informative on the dry side, but judging by other comments that's what everyone wanted from this book.	2003-02-09
US	49397799	R1MGJBKS9FW4RM	0130449164	87108683	Sun Certified Enterprise Architecture for J2EE Technology Study Guide	Books	5	15	15	N	N	A brief, helpful tool for test preparation	I carry around far too many books in business travel, so I appreciate the short ones: Fowler's UML Distilled comes to mind, as does Clark's Designing Storage Area Networks, Brooks's The Mythical Man Month, and Bloch's Effective Java.<br />Cade and Roberts have reduced their guide's content to the essential elements for test preparation; I appreciate that good work. Plenty of books try to boot-strap the reader into their topic in the name of reaching a broader audience. Trust me, you'll appreciate this effort less as the overlap in your book collection grows. You'll appreciate it even less still when you have to box them all up for a move.<br />If you've been working with web designs for a few years and have used a practical, higher-level language to describe new systems to other people, and you've been through J2EE systems a few times, you're probably ready to certify. All you need is some focus and an idea what to expect to build your confidence; this little study guide, complemented perhaps by studying with other test candidates, will take you the rest of the way.	2003-02-09
US	49397799	R3NBGSZXMFAQ97	0130648841	444052728	Core J2EE Patterns: Best Practices and Design Strategies	Books	4	5	6	N	N	A Good Source on Practices and Tactics	I found this book a solid and useful resource on many points. For me however it was not as solid on points I care most about.<br />One Patterns community goal is to establish a vocabulary for designers and architects that makes it easier to communicate. Instead of using source code to give those expressions form, we would rather use visual diagrams to capture compile-time and run-time relationships among the roles, or &quot;object participants,' in a design.<br />In my opnion, few of the J2EE patterns described benefit from this methodology; some class diagrams merely restate a GoF pattern in a J2EE tier context. Some are so trivial (DAO comes to mind right away) they aren't worth diagramming at all. Clearly some things labelled patterns are really just refactorings or idioms. The authors don't deny this odr defend the use of patterns where there really isn't one, but still, blurring the terms is a disservice.<br />The use of the word &quot;strategy&quot; in the catalog bothers me too: another reviewer here suggested calling them &quot;implementation variations.&quot; I favor &quot;tactic,&quot; or choosing an approach to a more general directive by taking into account lower-level tensions in a problem domain. One example that might influence a tactic without changing a strategy: &quot;We may not develop new tag libraries,&quot; or &quot;we must remain open to migrating to declarative security.&quot; The book uses the term strategy consistently, and that may be an implied defense of it, but someone with expectations about what &quot;patterns&quot; are supposed to be has a right to feel a bit miffed.<br />That said, this book has several fine lists of bad practices and refactorings to bring existing code into a best practice. I think the book is best used by someone who has identified these problems in an implementation that didn't quite get the intent of J2EE architecture. This book will help clean up fuzzy or naive implementations, as well as help institute better practices for future development.<br />The authors do a fine job of reducing each of their design solutions to short problem statements most people can memorize. And that's the idea: when a designer hears a customer say, &quot;our logging and auditing code is written across all of our web apps,&quot; the idea of a Front Controller or perhaps Intercepting Filter should come immediately to mind. As the designer learns more about strategies employed in the existing architecture, the tactics that best fit with their practice should come to mind, and so on. This is the power of conveying ideas quickly and clearly that we're all looking for.practices for future development.<br />The authors do a fine job of reducing each of their design solutions to short problem statements most people can memorize. And that's the idea: when a designer hears a customer say, &quot;our logging and auditing code is written across all of our web apps,&quot; the idea of a Front Controller or perhaps Intercepting Filter should come immediately to mind. As the designer learns more about strategies employed in the existing architecture, the tactics that best fit with their practice should come to mind, and so on. This is the power of conveying ideas quickly and clearly that we're all looking for.	2003-02-08
US	49397799	R3MSEUA7GS4WN9	1861007736	387364447	Professional Apache Tomcat	Books	5	2	2	N	N	Broad, Solid, Practical Coverage	I was quite surprised by this book when I read it-- the topical coverage goes from fundamentals of a web server's role in J2EE development, to installing one, to adding various connector tools , and finally to testing web apps for load. That's going from start to finish for a service administrator, all in a tidy 500+ pages.<br />Many guides try to cover all the details of a tool and get lost in explaining too much. This guide remains practical, and might even frustrate someone who does want every detail. For those who want to get something done and need reliable information, this book is an ideal desktop reference.<br />If you want to learn some J2EE stuff by example and using a tool, this book will prepare you well for further reading on J2EE design. I also like the coverage on Ant and Log4J -- more books should explain how such tools integrate into a larger environment.<br />This book will help anyone who feels confident with a web server to build and extend Apache/Tomcat on their own. I recommend it to anyone who supports the product or wants an aid to experimenting with it.	2003-02-08
US	49397799	R2CX0I1JSM0EFB	0782140777	150078690	Complete Java 2 Certification Study Guide (3rd Edition)	Books	2	4	4	N	N	Steadily losing ground to the competition	This used to be such a good book! But there are two things it couldn't get right in the second edition and now the third. One, the 'new' edition, mostly the old material, came out with an embarrassing slate of errors; two, the book fails to address the best features of its competition and improve on them.<br />Instead, the lead author seems content with adding as little as possible (even then, not quite keeping up with the exam objectives), and warming over old content. This book has made the authors a fortune; how about giving something back instead of resting on the great job they did 3+ years ago?<br />Certification is not a topic like data structures or algorithms. The exams change a little, yes. More importantly, though, the people who need certification have changed. Consider how certification used to set a person apart a few years ago; now it's a requirement to getting a job! This book seems to maintain an academic tone of certification for the elite. Get real! This is an industry exam. Address the practical needs of a job-seeking audience, and leave the classroom tone to professors.<br />One way the authors could have rewarded the public for such success is by adding some info on SCWCD; instead, Heller wrote a whole new book, and seems to have learned nothing from the mistakes of this book's edition changes. That book is a mess. Add to that the Exam Notes title, the Virtual Trainer CDROM, and you have to ask how many ways he wants to sell the same old thing.<br />Save your money for a product with a little more integrity.	2002-10-22
US	49397799	R7PQ2L65HPXSX	0782140912	140392760	Java 2 Web Developer Certification Study Guide with CD-ROM	Books	1	3	3	N	N	Is it that hard to be accurate?	A recent look at Sybex's errata page shows that they are tracking the errors as they come in. I think it would make sense to publish this book in soft copy. Some readers are happy to provide corrections if they don't have to pay first to do it.<br />Where certification is concerned, mistakes just raise anxiety. I want to know what's correct, not what the author thinks might be correct and would verify if only there was time to check the facts. I hope Sybex is good on refunds.	2002-08-02
US	49397799	R31HHQWX5Z3O1O	0782129285	64752175	SOAP Programming with Java	Books	2	3	3	N	N	Not many insights. Dry and tedious to read.	It's a struggle to penetrate this book. I got halfway through a few times and forgot what SOAP was, or forgot why I wanted to know; that's dull stuff. The book suffers from poor editorial direction, uninspired technical writing and a catch-all approach to content.<br />For starters, the title is misleading. There's enough coverage of supporting, overlapping, and competing technologies -- including a whole chapter on .NET's &quot;position&quot; in the market -- that the book primarily feels like a technology overview. I counted about 40 XML/SOAP listings (&quot;snooped sessions&quot;) in the main text. Some of them are 1-2 pages long; I'm supposed to want to read them? No line numbers, no boldface: what am I supposed to learn? How does this relate to programming SOAP? The author often doesn't say.<br />I also counted 80 or so hyperlinks in the main text. Some are duplicates, but most send you off to the site for some spec or a tool or a SOAP-crazy vendor. It feels pointless to read the book without a browser open and waiting. In particular, the section on deploying a SOAP-ready server gives links to instructions when it should explain; if you aren't sure how to set up a server, these instructions won't help, because each only tells you how to set up one piece of the puzzle.<br />The author doesn't seem engaged with the subject, which makes some chapters tough reading. He's going through the motions, even diligently, but why? Sme of his client-server protocol transcripts aren't inherently meaningful but he leaves them that way. Then there are pages of term definitions for XML and SOAP; did he try to digest anything for the reader's benefit? The Java stuff doesn't even start until p. 81.<br />SOAP is formative and there's too much going on to track it all; ok. It's the author's to maintain interest and focus, and avoid regurgitating information. The author probably shouldn't say that SOAP isn't likely to replace anything else. Why, then, would we buy this book? For the XML anatomy lesson?<br />There's a CD-ROM in the back, but I couldn't get myself to bother playing with it.XML anatomy lesson?<br />There's a CD-ROM in the back, but I couldn't get myself to bother playing with it.	2002-03-17
US	49397799	R1JSU3YGDNZ3O1	0130935387	110929528	Applied Java Patterns	Books	4	13	15	N	N	For Java programmers who need patterns, look no further	A number of my instructor colleagues have commented for years that someone should write a Java patterns book. None of us took up that challenge, obviously. Stephen and Olav did; their book finally brings to new and intermediate programmers a gentle but stimulating introduction to the subject. If your programs compile and run, but you have a feeling there are better, more sophisticated ways to compose Java, you're right: read this book and find out about them.<br />The patterns catalog in this book walks through the feature development of a Personal Information Management (PIM) program. Patterns are used to impose a general problem domain to each feature described (e.g., conference scheduling). The authors then show how the classic pattern might be modelled and implemented in Java. If you've never gone from a problem statement to a language-neutral design solution to code-writing before, this process can be slow going the first few times. The authors address this by separating features so you don't have to read the catalog in order.<br />There's no CD-ROM, so the source code is printed in full in the back of the book. Bad publisher, no biscuit. Just give me the CD, alright? Yes you can download the code by ftp, but my network life is controlled by firewall [people]. I need an HTTP tunnel, please.<br />I take the complaints that professional methodologists will have with this book with a grain of salt. This book was not written for their review and consensus; it's written for people who want to learn this subject and who allow the view that methodology is an art, not science and certainly not rooted in absolutes. That said, you may some day disagree with a design interpretation or two in this book, but you'll see them nonetheless applied thoughtfully to practical examples.<br />Another nice touch: the authors point out several examples in the JDK where these patterns have been applied, so if you want pointers to real-world examples using 'production' source code, there's no better place to look than the JDK. It's some of the most intensely scrutinized code ever.e's no better place to look than the JDK. It's some of the most intensely scrutinized code ever.	2002-02-28
US	49397799	R2GZPWWG1M5LFG	0201310058	321346029	Effective Java: Programming Language Guide (Java Series)	Books	5	27	29	N	Y	Says what it does, does what it says.	I like books that underpromise in their titles and overdeliver in their contents. This book has 57 items of programming advice that are not only well-chosen, but also reveal a clear, deep grasp of the language. Each one is justified with practical illustrations of what can happen if you only apply do-it-yourself intuition or, more likely, the most direct path to a solution.<br />Joshua Bloch is cited by several sources as a math prodigy and an accomplished researcher. None of that high-octane stuff affects this book. The prose style is simple and practical. The author never strains to detail a complex or abstract tangent. For example, his piece on random number generation (under Item 30, &quot;Know and Use the Libraries&quot;), raises a whole slew of &quot;interesting&quot; questions, but he stays on point (trust the library to do work you don't know needs doing). He avoids proving his assertions when a demonstration will suffice, so the book stays short and focussed.<br />Many of these points were review material for me, but I gained from Bloch's discussions nonetheless. As often as not, I preferred his reasoning over ones I have relied on; Bloch's just feels better rooted. And, in a world of high-stress schedules and moving-target projects, it's refreshing to hear someone with heavy concerns of his own preach the Good Word on better programming.<br />This book will strengthen your understanding of Java. It will confirm the things you've been doing right all along, and politely show you how you could do better. It might also give you a way to move people who wouldn't listen to broken-record you, but would listen to a smart stranger who says the same thing. ;)	2002-02-10
US	49397799	R3BYWWFT3E6ACI	0130418021	127536407	Java Event Handling	Books	3	8	8	N	N	Came in with high hopes, left disappointed.	Believe it or not, we really do need a book on event handling in Java. Events are a pervasive form throughout the SDK classes, not just to AWT and Swing. They inform the structure of JavaBeans, Java Messaging Service (JMS), and are important to EJB, Jini, and Jiro. An OO methodologist may say events are \\"just\\" an expression of the Observer design pattern, but from that simple pattern spring at least four major variants used in Java, each one worth careful study. Once you understand event-handling in Java, the structure of many classes become quite clear.<br />But 590 pages? Why so many? Oh...it's a reference book, another API treatment that re-documents some classes, and adds some light code examples. I'd estimate 460-70 pages of the book do that and only that. The opening text tells the reader it will reveal the power of event handling -- which to me is like learning a meal will be best when it's hot -- but then concludes that learning by doing is the only way, and delegates many important side-trips to other sources.<br />There's little graphic relief, and no visual modelling at all. Discounting the lists of class methods, there are 2-3 class hierarchy diagrams in the book, and one screen shot. The latter is located somewhere after the bulky reference section -- bad placement, in my opinion.<br />There is no mention of how events drive JavaBeans, nor any satisfying description of local versus remote event-handling. That's not a crime, but that's what I wanted in place of another javadoc rewrite. The Jini overview is only two pages; and it's now somehow been covered? Even the Jini code samples themselves are borrowed from Core Jini. The reader is referred to that book for an explanation; it's unreasonable to think the reader can make that leap easily.<br />An example using RMI would be simpler and more appropriate. Remote event-handling has been covered for years in the periodicals. Why not cross the tee on those discussions with a full-length treatment here?<br />This book feels like it lost its way through the tedious business of describing classes. The event handling book I hope for is suggested in these pages, but doesn't materialize. I think the real work got left off until the end, when there was no time to think and the deadline was in sight.<br />If events were \\"new,\\" this book might have reason to be an API reference. But they aren't new, and certainly not mysterious. To write API treatments, you need an eager, information-deprived audience, and it's essential in my opinion that the author show a reading of the source behind the API in order to comment with authority. javadoc is not completely helpful, sure, but the shortcomings aren't so egregious we need to publish every \\"better\\" set of class definitions either.This book feels like it lost its way through the tedious business of describing classes. The event handling book I hope for is suggested in these pages, but doesn't materialize. I think the real work got left off until the end, when there was no time to think and the deadline was in sight.<br />If events were \\"new,\\" this book might have reason to be an API reference. But they aren't new, and certainly not mysterious. To write API treatments, you need an eager, information-deprived audience, and it's essential in my opinion that the author show a reading of the source behind the API in order to comment with authority. javadoc is not completely helpful, sure, but the shortcomings aren't so egregious we need to publish every \\"better\\" set of class definitions either.	2001-12-25
US	49397799	R11JGIK6HRDETV	0201633612	141950023	Design Patterns: Elements of Reusable Object-Oriented Software	Books	4	9	12	N	N	Articulates class relationships -- a seminal book.	I had to read through this book a few times to get the full measure of what's going on. I learned later that the GoF book, as it's known, arrived at a time when articulate information on generalized object-oriented design wasn't widely available.<br />Design Patterns touts itself as a catalog of time-tested formulae for creating simple, powerful class relationships. That's really being a bit modest. It's become the de facto methodology for documenting new, more complex patterns for several OO periodicals I've covered. It's also being used in academia to teach the design aspects of writing maintainable and reusable code.<br />As something to read straight through, however, add some caffieine to this book to make it. The prose favors a dry and technical style which, in my view, it didn't need. The examples were obscure for me, too. I couldn't relate to issues around coding a word processor, but I suppose it's still better than contrived or &quot;Hello World&quot; code.<br />I don't think any book deserves five stars for being the first of its kind; if you're filling a gaping hole, people are going to buy it because it's necessary. If it's also very good, well then score one for advancing civilization! This book is still The Book in its field, however, and well-written. You need a copy.	2001-12-13
US	49397799	RTXSTDFMUA4Z6	0201728974	473582878	The Jiro(TM) Technology Programmer's Guide and Federated Management Architecture	Books	3	2	2	N	N	A technology guide, yes, but not really for programmers.	Jiro is Sun's implementation of the Federated Management Architecture (FMA). FMA is one of several specs out there that define a generalized management interface for storage products, including disks, tape drives, volume manager software, controller-based arrays, and one expects, NAS/SAN environments too.<br />This guide begins as a high-level justification for Jiro. It's not actually aimed at API programmers, but rather those people who are considering the technologies their groups or companies will invest in over the next few years. That's important because storage management has been and will be evolving rapidly for some time. The goal in all this is simple: people want hands-off (&quot;policy-based&quot;), standards-driven techniques for maintaining their storage 7x24.<br />Specifications like Web Based Enterprise Management (WBEM) and the Common Information Model (CIM) already have broad acceptance, so creating a niche for Jiro requires not a little persuasive effort; that's where this book seems best suited. Monday &amp; Connor paint a picture in which Jiro supplements these models and provides the ease of writing in Java and Jini's very powerful support for distributed programming.<br />Jiro can be nonetheless interesting in its own right. For one, its developers have written an extended RMI (ERMI). Accordingly, Jiro uses a proxy in contrast to RMI's stub, and adds aspects, such as remote object instantiation, that I found stimulating to think about. Still, there wasn't enough of this type of material to call this book a &quot;programmer's guide.&quot;<br />If you're already reading about policy-based storage management, this book covers the major issues well. But it's not a casual reader's guide. Technology officers and architects working with diverse storage environments are the primary audience; I would consider some background in storage management necessary to taking full advantage of this book.	2001-12-13
US	49397799	R1T347YUF0JANI	0201700433	509985306	java(TM).rmi: The Remote Method Invocation Guide	Books	5	6	8	N	Y	More code samples, and I'd rate it 6 stars.	This book is a well-written guide on fundamental RMI. It is concise and thorough, and treats advanced aspects of the subject with a very relaxed but diligent air.<br />RMI programming can be simple if one avoids the pitfalls and doesn't venture out very far. When you need to know the subtleties of object serialization or mobile code deployment, however, the specifications aren't always complete and accurate, and most tutorials seem only to warm over areas the spec has covered, or show &quot;one way that it definitely works.&quot;<br />This guide sets out to &quot;re-document&quot; RMI and raise awareness of its important (often subtle) aspects. In some cases the book even corrects Sun's papers, effectively (and diplomatically). It's invaluable as a refresher or reference. If it contained example code to verify its assertions, it would be hands-down the only RMI book to bother purchasing.	2001-12-13
US	49397799	R1AN72505W9ALI	0201523744	143552490	Writing UNIX Device Drivers	Books	5	2	2	N	Y	Plain English, thoughtful flow of topics	What I'm appreciating about this book is the simplicity and the vigor of the writing. It's *really* easy to make this topic sound really complicated. Pajari's approach lays out as few issues at one time as possible, then adds gradually to the mix. The early parts are not taxing, but the pace does pick up.<br />In teaching the subject, I often find it difficult to slow students down, and get them to confine their questions to one problem domain at a time. Device drivers have to fit into the kernel subsystem and communicate with a device through interrupts; there are LOTS of side questions people can dream up.<br />This book gave me a few insights into containing the discussions and forestall all that anxiety. Well worth the wait to get the book.	2001-10-04
US	49397799	R23GF8GFI5M8KM	0201596148	673307257	A Programmer's Guide to Java (tm) Certification	Books	4	4	5	N	N	Comprehensive and challenging; also dry and academic.	[This review was updated in its entirety on Aug 8 2009 for the third edition]<br /><br />This edition is indeed a thorough review of topics one needs to master for the SCJP exam. Each chapter maps a set of exam objectives to the text. The tour is detailed and often supported by UML diagrams and code samples as well as review questions. It surely lives up to the subtitle, \\"A Comprehensive Primer.\\" Since I have been out of daily practice with the language, I was pleased to find a few details on exploiting newer features. I also noticed several code samples illustrating techniques that have come in vogue since developments in other languages have come to influence the way Java is perceived and applied.<br /><br />At 1000+ pages end to end, however, this book is a serious investment of time and energy. It has a weight and breadth of coverage that is suited to a semester or more of intense study. I think a working programmer who wants to adopt Java and achieve certification will find this book much more than necessary to prepare for the exam, if not dry and tedious. It seems better suited as an academic text than a study guide, a soup-to-nuts approach in which certification is the goal immediately following a couple semesters of study.<br /><br />For the sake of full discloure, I co-authored The Complete Java 2 Certification Study Guide, so I am well-attuned to the challenges there are in writing a book that suits an audience of wide interests and goals. The K&R approach has proven more popular over time -- and kudos to them! -- but I personally believe 1) less is more, and 2) certifying in Java without any actual *working* experience misses the original intent of the exam. If I wanted to know how well you have *learned* Java, I'd ask for your transcript. And in general I prefer smaller books, each focussed on its area, than one catch-all volume on a subject. (I should also mention that the CJ2CSG wasn't thin or tightly focussed, either, as it covered both SCJP and SCJD.)<br /><br />In any event, I think ths book screams out \\"college text.\\" I heartily disagree that anyone is going to teach themselves, say, generics, by reading the chapter from this book, answering the review questions, then writing some test code. You're going to need the guidance of an instructor or mentor with a book like this one, unless of course you already have a good idea of what you're doing, you don't mind carrying around all the details of everything in your guide, and you're happy even if you only learn a few new things.nk ths book screams out \\"college text.\\" I heartily disagree that anyone is going to teach themselves, say, generics, by reading the chapter from this book, answering the review questions, then writing some test code. You're going to need the guidance of an instructor or mentor with a book like this one, unless of course you already have a good idea of what you're doing, you don't mind carrying around all the details of everything in your guide, and you're happy even if you only learn a few new things.	2001-09-06
US	49397799	R129IOF4DVC4TO	0130224960	748161865	Solaris¿ Internals (Vol 1)	Books	5	2	2	N	N	Well conceived, well written -- a fine reference.	Compared to the other books in this territory -- Vihalia's, John Graham's, Cockroft's, Cox &amp; Goodheart, all of which I consider valuable reading -- this one is simply a pleasure to read.<br />Mauro and McDougall just seem to know when to breathe in their writing. Very few sentences seem rushed, dense or ornately detailed. They write with a &quot;big picture&quot; feel, and yet all the details I wonder about as I read seem to crop up in the next paragraph. They know how to keep the reader thinking in a direction they can address. It's a very calming and informative ride.<br />I really wish they had waited to base the book on Solaris 8, but there's not much you can do about such things. Hats off to the authors for producing a Sun book that will stay dust-free on my shelf for a long time.	2001-09-05
US	49397799	R2LQ320EP5E6GW	0131774298	526642957	Expert C Programming: Deep C Secrets	Books	5	3	4	N	N	Instructive, entertaining, and masterful.	Peter van der Linden is a rare creature in the high-tech world. He's talented, knowledgeable, a master of his subject, and utterly confident in his abilities, yet he manages to stay tirelessly good-natured. You get a lease on all those qualities when you read this book.<br />Some writers bring pinpoint clarity to an obscure topic; others gracefully disentangle complex subjects with an ease that make the rest of us wonder why we ever had to struggle with them. PvdL does both, and then adds two more wonderful insights to his writing: one, he equates expertise with subtle understanding, not exhaustive knowledge; two, he doesn't demonstrate anything you can easily test for yourself. This book is for the active reader who will test the ideas, but a browsing reader can still enjoy the humor and flow of the text.<br />Throughout the book you get the sense of a busy but amiable mentor who always seems to have time for a confused colleague. He's been through the same confusion himself, and he's come out of it a better programmer who's more than willing to share what he's learned.<br />The perfect desktop for this book would have space for a monitor/keyboard and sketchpad. Any time you stop nodding along with the text (or smiling -- there was a lot of that for me), prop the book open, and challenge what you just read. This book is ideal for that.<br />I've been teaching some C courses this year, as the Java training market has been quite depressed. I've often found myself parroting and recommending this book throughout. Partly that's because I share some tech opinions with the author, but he's also got a mountain of high-caliber experience to back his views up. The &quot;Sun halo&quot; certainly augments his credibility.<br />If you think you understand the C language well, buy a copy of this book; it will give you the most entertaining assessment you'll ever take. If you're worried that becoming a C expert means you have to grow a beard or attend Star Trek conventions to make friends, buy two.e friends, buy two.	2001-07-22
US	49397799	R2U1L859Y4RXRT	0201563177	673455254	Advanced Programming in the UNIX(R) Environment (Addison-Wesley Professional Computing Series)	Books	4	6	7	N	N	Helpful writing style; not for &quot;smart beginners&quot;	I've discovered through this volume just how popular Stevens' work really is: you can find his examples, even his discussions, reprinted verbatim in more than one professional course on systems interface programming. I won't name names here. :-)<br />Stevens' writing style is relaxed but focussed. It's easy to  follow his points, which is not a short list. The book is 740 pages, the font size is modest, the margins thin. The coverage is comprehensive, making it a useful reference. What I appreciate though is that Stevens didn't slide on too many topics, something references do when the reader is likely to spot-read. It's a well-organized book, full of many well-thought out descriptions and examples.<br />The reader must bring some C programming and Unix systems experience to appreciate this book; it doesn't complement intuition or mere absorption very well. Intelligent systems programming starts with someone who needs things the operating system can provide, and needs to know how asking for resources changes application and OS behavior. Without some foundation, this book is just a very thick list of some special function calls.<br />Buy this book only after you're comfortable with your compiler. Otherwise it'll get buried under a mound of installation and release notes, and put back on the shelf when your time runs out. A book like this deserves 2-3 days of study that is unbroken by tracking down tangents you're not familiar with; save your $60 until you have that kind of time and preparation.	2001-07-22
US	49397799	R1WSINODLT0AC7	1559502061	612507362	Sex, Drugs, and the Twinkie Murders	Books	5	5	6	N	N	A tour de force of Underground reportage	Paul Krassner's reporting style is part Gonzo, part radical/hippie sensibilities, part grinning wiseass. He gets into his stories by becoming part of them; sometimes, by veering into the center of the action; other times, by perching.<br />I find Krassner's reportorial meddling in proportion to the sanity of the story's surroundings. When he's forced to perch (the Patty Hearst trial, the Moscone-Milk murders or Jonestown), he's still meddling with the players, but the events themselves are so mired in political agenda, shoddy lawyering, power freaks gone mad, and (of course) Krassner's own paranoia, that making  sense of the facts becomes a struggle against sheer exhaustion.<br />His style in his California social landscape pieces keep good company with Joan Didion's work in Slouching towards Bethlehem. Unlike Didion, who is practically pH-neutral in her reporting, Krassner is hip to his scenes. In this collection he covers New Age guru Terence McKenna and a Swinger's Convention. Like Didion, though, he can participate without losing his role as a reporter to us. He reserves comment in places where I suspected he might well have interjected an insight, but you might also say he just lets his subjects speak for themselves.<br />Of particular note: Krassner's collation of facts around Patty Hearst's kidnapping and trial for bank robbery show how exhaustion can beat the reporter down. The center cannot hold in those stories, and Krassner doesn't try to manufacture a stable one. The Hearst pieces best reflect Krassner's conviction that people with power have no use for reason unless it suits their purpose. That's a harsh world, one that's as difficult to deny as it is to accept.	2001-07-13
US	49397799	R2ZMUBJKKHIAFQ	0131493868	157799246	PANIC! UNIX System Crash Dump Analysis Handbook (Bk/CD-ROM)	Books	4	5	5	N	N	A Book This Good Should Be Kept Up-To-Date	What the other reviewers have said in consensus, I'll just stipulate: this book is a gentle but comprehensive introduction to core file analysis; it's also an excellent reference on kernel architecture. For its clarity of technical writing, it deserve some kind of award, considering how deathly-dull the subject matter can be. I couldn't stay awake through one pass of the assembly code illustrations, but I don't think the writers could have helped that. This book is a nonetheless a triumph, albeit a dated one.<br />Now, c'mon, Prentice-Hall, help the audience out! This book was written in 1995. It uses Solaris 2.3 and sun4d architecture as its latest and greatest. Solaris (2.)8 has been out for a while and 9 is on the way; sparcv9/64-bit architecture is here; mdb, the modular debugger, is going to replace adb; the book *must* be updated. It would be a crime to let it die now -- there's still no competitive title on the market.<br />The book is non-technical enough that I couldn't make all the changes needed to get the older examples to work. If I ever do, though, maybe I'll be good enough to write a competitive title myself...<br />That said, even if the next edition were to out in three months, I'd still buy this one now to get started; it's that good.	2001-07-03
US	49397799	R1JPGMCJXNP8KW	0596000472	354999520	mod_perl Pocket Reference: Extending Apache (Pocket Reference (O'Reilly))	Books	4	3	3	N	N	Useful for a dilettante Perl programmer	Unlike the PHP pocket reference, this one indexes the contents, and takes more care in describing the function calls that it covers.<br />I know enough Perl to lift good, reusable code. So the front end of this book, which is concise and thoughfully written, refreshes my grasp of the details as I dig through. That's nice.<br />It would be a better book if it would lay flat on any page.	2001-05-21
US	49397799	R29UC70T5HDUS7	1565927699	576889740	PHP Pocket Reference (Pocket Reference (O'Reilly))	Books	3	4	6	N	N	Not a good format for a scripting tool reference.	I disagree with the reviewer who said this book is lacking an index. This book *is* an index, and not a terribly helpful one.<br />A Nutshell-type book makes more sense for a robust scripting tool. PHP is not a trivial or admin-oriented language; if you want to sell *any* reader on its virtues, you have to show what the language can do.<br />As a co-author of the The Java 2 Certification Study Guide, I can tell you exactly what readers think of a list of calls in print -- we used to have 200+ pages of that in the back of our book. Anyone who had anything to say about it called it filler, and they were right.<br />Make a PHP Nutshell book, and get someone like Flanagan to write it. Believe me, we'll buy it. Admittedly,I wasn't expecting a whole lot more than I got for the price of this book. But when an info-holic has a book he won't crack twice on a long plane ride, something's wrong with the book. :-)	2001-05-21
US	49397799	ROK75LH5PV4IH	1565927060	549616025	Apache Pocket Ref	Books	4	2	2	N	N	Good info, good price, ok binding.	For material that's mostly already online, this book is a good investment. I get really tired of window-switching references, and sometimes I like to sit away from the computer while I'm looking up stuff on directive syntax or whatever. For that, this book is worth the price.<br />I'd still like a more suitable binding for a small book with a font chosen for density. Lord, won't you make me said book so it will lay flat? That would make this dealie a five-star pick for me.	2001-05-21
US	49397799	R2Z3QVSWU2CX23	1565920007	745989432	lex & yacc	Books	4	4	5	N	N	5 stars for being in print, 3 for staying the same	lex &amp; yacc used to feed a starving market; people who really needed to know how to write a parser generator and possibly wanted a more general and automatable way to write a lexical analyzer. As one reviewer already noted, those readers were able to work through two or three times and let the information sink in.<br /> The book's been very, very successful. It also hasn't sought to repay the market by refining itself and becoming more accessible to readers. Forget that the principles behind these tools haven't changed; there are or could be fresh examples -- who needs help writing a curses-based, menu-driven interface anymore? The SQL parser example is a loooong source dump; a shorter example would help to focus on principles, and allow room for more liberal commenting.<br /> I far prefer this book over man pages, but the title could stand a refresh.	2001-02-01
US	49397799	R1MXN2T1L3WUVX	1861003552	841348483	Professional Jini (Programmer to Programmer)	Books	4	2	3	N	N	Very readable for practitioners	This one of the few tech books I've been able to read easily on an airplane. It's thick (886 pp), but readable. I like the way the source code is broken into greyed boxes, with comments on each section between. Duh! Why read comment code if you don't have to? Thank you. All the pages feel clean and light.<br /> The language is disarmingly simple and straightforward without being mired in pure fact. That's harder than it looks. This book is also the most natural walk-up to discussing Jini that I've read. The author's treatment of dynamic stub downloading, in particular, doesn't worry if the reader can hold the mental process in his head; it explains the concept once, then provides a checklist for putting the sample code in motion. Repetition is the mother of learning.<br /> Take the title seriously; it's for &quot;professional&quot; readers, but take that to mean practitioners of the language and distributed computing. The &quot;aha's&quot; in this book will escape anyone who thinks typing in the code will reveal all. It definitely helps to bring some background to the party.<br /> The typos per page grow as you go, but they're not too distracting. The usual is a missing &quot;the&quot; or &quot;is,&quot; but I didn't see one that sacrificed meaning. I hate to concede this point entirely to the reality of whiz-bang technical publishing; I think proofreaders just ain't what they used to be.	2001-01-31
US	49397799	RONMETDZ3VK41	0201360659	25162905	Java(tm) in Practice: Design Styles and Idioms for Effective Java	Books	3	10	12	N	N	Your (reading) mileage will vary	I've been learning, teaching, and writing about Java since JDK 1.0., but I'm not formally trained in programming. I feel my way to certain programming ideas. So if a book articulates the thoughts that float around in my own murky brain, it's a treasure.<br /> This book does some of that. It's a useful discussion of some common OOP idioms in Java. There's enough UML to illustrate the difference between a design concept and a Java implementation. The book is also brief, and doesn't try to justify its starting point; I like that. Keeping a book short takes courage.<br /> On the whole, however, I was done with what this book had to offer in about five hours. There wasn't much in it to make me think I'd read it again, either. Several discussions didn't quite conclude. And there were one or two points where a continued discussion was promised and didn't appear. Instead of brevity by way of elegance, I felt that probably the publisher's deadline was looming large, and they had to cut bowstrings.<br /> So I had pretty high hopes, and I got a decent experience out of the book. I've been at this for five years, so I'm probably looking for someone to state things in a bold, new way, and perhaps that's unreasonable to expect. For the price, this book's OK.	2000-12-22
US	49397799	RI1XFP7744ESF	013014469X	6582697	Core JINI	Books	4	3	4	N	Y	Clear and informative but almost 800 pages.	Core Jini is straightforward, and clear; I found the text-to-code ratio  comfortable. It seems to me the target audience would include experienced  programmers first, and veteran systems administrators second. To read it,  you need to be an experienced Java programmer only if you plan to implement  Jini on your own. Otherwise, the book is a useful reference on Jini's  architecture and processes.<br /> It's also way thick. I'm thinking I should  exclude from my five-star list any book over 500 pages that is a) not  called a reference on the cover, and b) has the word &quot;Core&quot; in  the title. Stop the madness!<br /> I didn't think the author had to  problematize the issues of distributed programming to the degree he did.  For me, this added to the bloat. To the author's credit, those discussions  make many parts of the book accessible to a wider audience than Java  programmers.	2000-08-07
US	49397799	RB90Z5875M1RR	0130130559	19556811	The Holy Grail of Data Storage Management	Books	4	5	5	N	N	Very Good for Project Managers and Resellers	Toigo's grasp of the storage industry's current players and technology is strong and thoughtful. He walks up from techniques in managing disks to strategic initiatives by major vendors, which is not something many people  can do well enough to write it all down. Nice job.<br /> I was put off by the  title. I suspect many readers like me wanted some killer techniques. I  didn't like the thin &quot;techniques&quot; section that came down to, for  example, a single high-level diagram per problem domain, and a checklist of  generic questions.<br /> The impressive bibliographies that end each chapter  suggest what the book is really about. The author has steeped himself in  the industry literature, conducted a variety of interviews, and taken some  useful field trips into data centers. He's learned from the work, and a lot  of that learning makes it to print with credible insight and analysis.<br />  Still, this book only establishes the boundaries of managing data storage.  It sometimes offers a thorough outline in place of a penetrating answer.  For people starting in this area, this book is a fine one-stop resource.  For people who have heard Project Managers authoritatively get all sorts of  &quot;trivial&quot; details wrong in technical sales meetings, this book  will sound familiar.	2000-07-30
US	49397799	R2QF5NRWFZ8PJJ	0133499529	121975233	Configuration and Capacity Planning for Solaris Servers	Books	5	5	6	N	N	Still the Alpha reference for Solaris systems	The references to the Solaris OS and SPARC machines are of course out of date. Even so, Wong's methodology, analysis of performance factors, and depth of treatment are outstanding. As an Sun-certified educator,  consultant, and field engineer, I use this book all the time.  I have read  it through six or seven times by now, and I still find (or recover)  valuable information packed away in the corners. It's indispensable as a  methodology reference for scoping systems, although it really should be  read cover to cover at least once.  Wong's breadth of coverage is  absolutely impressive. When I want to show other techs a strategic way to  approach system planning, I hand them a copy of this book, first thing.  Read this book if you have anything to do with installing or maintaining  Sun systems; then ask Brian Wong to please write the update!	2000-06-27
US	49397799	R11ENLKZ7FHKNG	0130163066	859608246	Guide to High Availability: Configuring boot/root/swap	Books	2	0	0	N	N	First book I've ever returned	This book is 100 pages end to end, and still full of air. There are screen shots and command-line invocations in boxes all over it, and it feels like padding. There are *no* explanations of the practical design ideas given, other than a comment such as \\"this solution will scale.\\" Most solutions will scale if you use two disks arrays. Given the configuration in the book, the scaling bootable disk system is a mere [$$$] away. Nice.<br />\\"If you want to do it the way we do it, here's how...\\" is the entire conceptual approach to the title. The text does say it's a \\"cookbook\\" in its intro, but [$$$] is a lot to ask for that. I expect anyone who wants to make money on their field notes will offer more than \\"consult the documentation for more\\" advice on realted subjects. The author doesn't even offer an overview for the tools or hardware shown. You might as well print a list of hyperlinks and ask [$$$]for it.<br />I'd like to see Sun encourage all their employees to follow the likes of Brian Wong or Adrian Cockroft or Peter van der Linden, and write treatments with real depth if they're going to write them at all. Leave the hacking to others. Anyone can publish rough-draft field notes -- why put Sun's name on that?	2000-06-08
