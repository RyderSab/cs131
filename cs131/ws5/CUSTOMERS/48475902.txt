US	48475902	RJULVC3I3J4RB	1904811000	373100315	Building Websites with the ASP.NET Community Starter Kit: A comprehensive guide to understanding, implementing, and extending the powerful and freely available application from Microsoft.	Books	4	3	4	N	N	Outstanding read...get up and running with the CSK quickly	I previously discovered Packt Publishing Company after a random search for ASP.NET books. I was very happy I did, having now found a source of great, no-nonsense, quick-read compendiums of rock-solid technical information. <br /> <br />\\"Building Websites with the ASP.NET Community Starter Kit\\" is chock-full of practical, easy-to-use samples that go beyond just \\"Hello world!\\", each accompanied by a helpful screen shot and poignant code.  The book's 11 chapters together make 211 pages, which is a good size, and won't have you reading more and stressing less.  In my experience, the CSK, while intended to aide developers and streamline work, can be confusing if not approached properly.  This is a book that makes sure you get the most out of the CSK.  <br /> <br />As far as writing style, the authors are quick and to the point.  K. Scott Allen and Cristian Darie don't bore you with exhaustive explanations of the core technical concepts of ASP.NET or the CSK - they talk a little about the foundations and then get right into making it work for you.  In my experience, this is the voice with which most developers prefer their tech books by written.  It therefore requires a bit of experience with ASP.NET programming already, but can be tackled by even novice devs.  <br /> <br />All the major topics dealing with CSK programming are dealt with - administration, themes, skinning, core architecture, configuration, databases, modules, custom controls, and much more.  I particularly enjoyed the chapters on publishing RSS 2.0 feeds and deployment; especially the latter's considerations for the differences between the Windows 2000 and Windows 2003 servers.  <br /> <br />I also appreciate the book's physical properties.  Packt's design is for the serious developer, using heavy paper that should be able to withstand a developer's stressful punishment - repeated opens, spine-breaking stretches, constant page-turning.  This book is made to last.  <br /> <br />Now in criticism, I will saythat the book's arrangement of the chapters isn't exactly intuitive.  I would have preferred that the chapters on configuration come first, then aesthetics with skinning and themes, then the database, and lastly coding the modules.  I would guess that many ASP.NET developers would feel the same.  Also, I enjoy when books use a chapter-independent approach to writing, not forcing the reader to have to refer to previous sections for reference.  I found myself skipping around somewhat and not able to use each chapter as a standalone guide if I needed insight on a particular topic.   <br /> <br />But the good far outweighs the bad.  It's a very helpful, very educational, very entertaining look at using the optional set of controls, modules and pre-fabricated tools from Microsoft to build great, quick, secure, community-centric web applications.	2005-09-17
US	48475902	RN4FT70MWLX68	1590594797	234116512	Beginning J2ME: From Novice to Professional	Books	4	1	3	N	N	Great overview of MMS/SMS, BlueTooth and other embedded concepts	This book is extremely well-written and laid out, with the ordering of the book's 18 short chapters very logically laid out.  The title describes how Java 2 Micro Edition can be used to create robust applications across a variety of platforms and vendor devices, and is a great quick read that gets the major points across without dedicating too much of your time.   <br /> <br /> <br /> <br />The MIDP API reference in the book's sole appendix is helpful, although I would have also liked to see a glossary of mobile and embedded development terms.  In particular, I found very helpful the chapters on BlueTooth, SMS/MMS (the Wireless Messaging API), persistent data storage by way of the PIM API, and using multimedia.   <br /> <br /> <br /> <br />While the book's obvious primary concern is development with J2ME, the major concepts of wireless development are discussed, which is most appreciated.  The chapters themselves are short and to the point, and as such don't exhaustively contain the full APIs or lengthy code.  The theoretical examples are brief and aren't examined in great detail, but the code examples are quite helpful, showing a componentized, servlet-based architecture using best-practices object-oriented programming and patterns. <br /> <br /> <br /> <br />The book isn't a step-by-step guide to aide newbie Java developers through the process of coding, deploying and maintaining an app, so this book is best enjoyed by a sophisticated, experienced Java dev.  And since the book is more geared to concepts you put into practice, not a handholding guide, you're still best accompanied by having Sun's official JDocs at your side. <br /> <br /> <br /> <br />But there's something all of us can learn in this book, so if you're serious about getting into embedded Java programming, check it out. <br />	2005-07-27
US	48475902	R3CC9SBBETTKH9	1590593413	31982343	Beginning J2EE 1.4: From Novice to Professional (Apress Beginner Series)	Books	4	9	9	N	N	Excellent review of major J2EE concepts	Being a .NET developer, I had a good idea about system architecture overall coming into this book, but admittedly little in terms of concept that were specific to Java. I feel confident about developing dynamic apps with J2EE now after reading this work. It does a great job of introducing the major concepts within Java 2 Enterprise Edition (JavaServer Pages, Enterprise <br />JavaBeans, servlets, XML, web services, using a variety of appServers, etc.). <br /> <br />The introductory chapters talk about installing J2EE, relating it to J2SE, and setting the all-important environment path variables. The examples are complete, with step-by-step instructions on coding, compiling, deploying and executing examples for console, desktop and web environments. It's not one of those books that is heavy on theory and light on pragmatic examples - the concepts are backed by real-world apps. Each example is also presented for execution in both the default documentation appServer for J2EE, as well as Tomcat. It's a nice mix that isn't married to one specific platform. <br /> <br />The authors enforce a strict usage tiered system design, and demonstrate how to move from simple 3-tier applications to MVC- and pattern-based n-tier architectures using complex components. On this note, I particularly enjoyed the chapters on developing EJBs, which were very healthy. <br /> <br />However, I thought the last two chapters on web services with Java, while helpful, were incomplete, specifically in the areas of developing multi-platform clients to access SOAP messages through JAX-RMI. I would have liked to see Swing/AWT utilities and JSP-based clients call not only Java web services, but also HTTP-SOAP services using .NET and other vendor platforms to reinforce the main advantage of decoupled distributed systems. <br /> <br />But nonetheless, I found this book to be a great help in my quest to get myself up to speed with modern-day Java development.  I'm a better programmer for having read it, and I recommend you do, too.	2005-07-21
US	48475902	R2TX8LCVN42Z44	1590594460	707018189	ASP.NET 1.1 Solutions Toolkit	Books	4	1	3	N	N	Great, practical, timely examples of several real-world apps	Book review: \\"ASP.NET 1.1 Solutions Toolkit\\" <br /> <br />APress has done it again.  I really enjoyed the theme and focus of this book, as it deals directly with custom control development and function-centric tools built with ASP.NET.  The utilities presented are practical, timely, and those that any modern-day web programmer will need or has considered at some point. <br /> <br />I'm didn't find the title to properly connote the content within, but it's certainly a great read. <br /> <br />My favorite examples are the RSS Reader, Globalizable Page, and Reviewing Control, being new, up-to-date features most web sites need these days.  And the Chart, Straw Poll and Search Engine examples show new takes on old standards.  Many of the examples deal with pattern-based programming, which is helpful. <br /> <br />The only two major detractions I think the book exhibits are the tight-knit binding to Visual Basic .NET for code examples and marriage to Visual Studio .NET.   <br /> <br />All in all, this is a great read that even experience ASP.NET devs should go through.	2005-04-13
US	48475902	R1IJCVCMM0ZBGB	1590593456	499495788	Pro .NET 1.1 Network Programming, Second Edition	Books	5	10	11	N	N	Must-have read for working with protocols in .NET	I was really surprised at the ease of reading with this book offered.  As it seems to be one of the last remaining books left over from the old Wrox days, the &#34;Pro&#34; in the title would denote a very high level of material, often assuming a great deal of talent on the part of the reader and skipping the necessary introductory concepts and giving piecemeal code samples.  This totally isn't that way at all.  The book's back cover lists it as &#34;Beginner/Intermediate&#34; and it delivers on its promise.  &#60;br/&#62;&#60;br/&#62; <br /> <br />Put it this way - I'm a lifelong web dev who's been doing more and more client/server work, and I got a ton of useful information for my projects in this work.  Even as the book starts to get into material for which there is no easy way of describing, the authors don't deviate from using simple English and practical, plainclothes, repetitive examples to ensure the readers gets it before progressing to more in-depth topics. &#60;br/&#62;&#60;br/&#62; <br /> <br />Principal author Christian Nagel (whose writing I've long appreciated) starts out with a very thorough rundown of basic networking concept, the OSI model and the TCP/IP protocol stack, that any IT professional should peruse as a primer.  He then presents the particulars of network programming in .NET, such as working with streams and sockets, and then drills down into individual protocols, devoting a chapter each to the major forms of network communication.  The major protocols for communicating over networks and the Internet are all examined and expanded upon - SNMP, TCP, UDP, SMTP, HTTP, with helpful code samples.  The book also briefs the reader on the importance of .NET Remoting on more than one occasion. &#60;br/&#62;&#60;br/&#62; <br /> <br />The book isn't one that's filled to the brim with code snippets you can instantly plug into your applications, but there are several very nice demonstrations and couple good sample apps (an FTP client, a multicast chatapp, a simple e-mail utility, a picture viewer, etc.) that demonstrate the high-level concepts in the book's latter chapters. &#60;br/&#62;&#60;br/&#62; <br /> <br />In criticism, I found Chapter 5 - &#34;Raw Socket Programming&#34; was obviously written by a different author and uses a slightly different coding convention.  While it's not an incriminating factor that should detract one from buying this book, it is something I would hope the editors would look to change for the next version, as the difference between the book's majority voicing and this one chapter - namely in its use of grammar and syntactical layout is a little too painfully obvious.  &#60;br/&#62;&#60;br/&#62; <br /> <br />I also enjoyed the chapter introducing the reader to working with IPv6, although I thought it might have been better suited for placement further into the book or as an appendix, and not in Chapter 6.  Additionally, I would have wished for more samples featuring using peer-to-peer networking architecture (there was one, I think), and a bit more meat to the discussion of .NET Remoting, perhaps in its own chapter. &#60;br/&#62;&#60;br/&#62; <br /> <br />But semantics notwithstanding, this is an outstanding title, being well-written and covering all the major considerations of .NET network programming with. This is easily a 5/5 work. <br />	2004-11-08
US	48475902	R3L50W7HX2B9O5	1590590457	316903074	User Interfaces in C#: Windows Forms and Custom Controls	Books	5	2	4	N	N	Outstanding overview of WinForms development in general	I've &#34;grown up&#34; in programming working exclusively with the Web, and recently moved into the very unfamiliar world of desktop development.  This is a fantastic piece of work that gives you a very high-level view of the major concepts and considerations you'll need when attempting to conquer the world of Windows Forms.&#60;br/&#62;&#60;br/&#62; <br /> <br />The book starts out with a brief discussion of some of the more visual aspects of great UI design, which, as author Matthew MacDonald describes, is as much technical as aesthetic.  It then dives right into the major concepts of WinForms - forms and controls, and many of the secrets and tips on using them to create familiar, effective UIs for your apps.  Examples are alternate ways of achieving drag-and-drop functionality for on-form controls, creating floating toolbars for and maintaining synchronicity in MDI apps. &#60;br/&#62;&#60;br/&#62; <br /> <br />It's very real, very practical, and very easy to grasp. &#60;br/&#62;&#60;br/&#62; <br /> <br />I was found MacDonald only mentioning certain class members for each of the controls, and the &#34;members&#34; tables listed in the book don't explicitly break the members down into properties, methods and events, which clouds a newbie's learning of a new set of classes and their functionality for the first time.  That's about the only criticism I have with the title. &#60;br/&#62;&#60;br/&#62; <br /> <br />The book's finest moment is evident in what has got to be one of the best written chapters on the often-complex topic of working with data and databinding in WinForms.  It's thorough, yet easy on the brain in terms of laying out how to work with binding in simple and complex environments. &#60;br/&#62;&#60;br/&#62; <br /> <br />The book isn't a primer on C# or on programming in general, so the code snippets are largely piecemeal, abstracted modules of much larger Windows Forms and components.  But this isn't necessarily a bad thing. <br />	2004-10-28
US	48475902	RES67299XWSFX	0321205618	486277462	Seeing Data: Designing User Interfaces for Database Systems Using .NET	Books	5	13	13	N	N	Fantastic discussion of UI development for WinForms projects	The one quality that makes this book a clear winner is the quality of the content and clarity of author Rebecca Riordan's writing.  She uses a friendly, humorous, often bitingly sarcastic voice that eases the normal tension accompanying such a complex topic as UI design for Windows applications with .NET technologies.  You'll appreciate this tone as Riordan takes you through some very challenging scenarios in developing winning desktop apps. <br /> <br />The main focus is on presentation tier technologies and techniques used to create great programs that customers will really enjoy using.  The book starts out with five phenomenally-written chapters on GDI+, typography, color, and image programming that every developer working with .NET should read, whether they're examining UI design for desktop applications, or otherwise.  It also includes a helpful glossary of development terms mentioned throughout the text that you'll enjoy and refer to often. <br /> <br />Riordan also attempts to demystify the many complexities of .NET databinding within Windows Forms.  as do most Addison-Wesley texts, the book's physical properties are to be appreciated, using sturdy binding and thick paper, making the book close and sit easily after a session open on your lap (and who hasn't wrecked at least book doing so?). <br /> <br />The only downside to this book (and a minor one at that) is the exclusive presentation of code in Visual Basic .NET, which would make the book largely one-dimensional to programmers working with that language (or liberal minded C# readers).  But programming language semantics aside, this is a real gem, and one you'll want to pickup for your WinForms team projects.	2004-10-11
US	48475902	RUIBE7SLT06R7	1590594266	454457449	Best Kept Secrets in .NET	Books	3	9	10	N	N	No exactly a collection of .NET "secrets", but good writing	Although I'm giving this book high marks for thoroughness of content, I did feel slightly dejected after expecting it, based on its title, to be a cornucopia of gems of little-known facts that .NET developers of varying levels could use.  And while it certainly contains a lot of good remarks about how to work faster and/or more efficiently with have better performing code, it's not exactly a collection of \\"secrets\\". <br /> <br />I'm a somewhat experienced programmer, and a lot of what I read I found to be best practices that most introductory books on a variety of subjects will feature.  The book's magic is that the tips are consolidated to within a single bound title, relieving the reader of needing to buy and read multiple titles to acquire such knowledge. <br /> <br />The book's finer points are evident in the many code samples being featured in both Visual Basic .NET and C#, and the book's succinct nature.  Author Deborah Kurata doesn't spend hours poring over concepts; she just gets right to the point and lets you know how you can use a certain trick in your .NET programming.  On that point, there's also a nice discussion of using regular expressions and operator overloading, and a good preview of refactoring in Visual Studio 2005 (at the time of this writing still in early beta).   <br /> <br />However, I was disappointed in the fact that there wasn't a chapter on such secrets for web development with ASP.NET, and leans heavily towards those programming for Windows Forms (there are faint mentions of using web.config for web projects, but that's about it).  This makes the book more applicable to desktop developers, and unfairly denies the browser crowd of using this book for their work.  <br /> <br />Still, I came away with a couple of morsels that I'll take with me, such as the ability to use VB .NET's IsNumeric function in C# by referencing Microsoft.VisualBasic.dll.  As with most APress titles, it's made the stand the test of time, with heavy paper and sturdy binding, so it's great as a desktop reference. <br /> <br />Overall it makes for a nice, quick read - priced pretty decently.	2004-10-09
US	48475902	RARR8JYXD14N3	1590592549	994709556	Beginning ASP.NET 1.1 E-Commerce: From Novice to Professional	Books	4	12	12	N	N	The "Search" chapter is a must-read for ANY ASP.NET dev	Despite the monumental rise and gradual decline in the electronic commerce model, the lessons that one can learn from developing such applications are vast, timeless and applicable in so many more theaters than just payment processing or shopping carts.  Cristian Darie empowers you with the tools and talents you'll need to enable your web applications with simple shopping and fulfillment options.   <br /> <br />The book's primary audience is the beginning to intermediate level ASP.NET developer who has the basics of ASP.NET and Visual Basic .NET programming under their belt.  It reaches out to the low-to-no-budget client who's looking for a high-impact solution without needing to spend huge amounts of capital. <br /> <br />The book's single application is a practical online storefront with payment processing examples given through both the popular PayPal and via a roll-your-own model.  All the major considerations for running an online store are included, such as the general model for customer fulfillment, developing a custom shopping basket and working with the order pipeline. <br /> <br />The featured app's main driver for presentation is a single WebForm that dynamically loads user controls based on the page's post back state and/or query string values.  I'm personally not crazy about this model of web development, preferring templated independent .ASPX files without so much reliance on the URL and embedded values therein, but that's just me.  Nonetheless, the book leverages such a structural design, and does it well.  And, the tiered nature of the app makes changing the UI easy without breaking the more critical components.  It's a nice variation on a theme. <br /> <br />The main blessing I found in this title (and at the same time the source of its greatest fault) is it's inseparable fit to Visual Studio .NET.  If you're of the crowd who live and die by Microsoft's prime .NET IDE it's great, but for those preferring to painstakingly hand-code their apps or usean alternative setup like ASP.NET Web Matrix and manually compiling assemblies, you're left with no alternative; it's a bit of a stretch to immediately understand the relationships between WebForms and business classes. <br /> <br />Thankfully the book is a tad more forgiving when it comes to the database server, frequently mentioning the differences between SQL Server and it's more laid back cousin, MSDE. <br /> <br />And further, the web storefront's architecture is beautiful, consistent and easy to read.  You'll benefit from the nicely-laid out 3-tier model used throughout, and while the code isn't explained verbatim, the book emphasizes good object-oriented programming and the use of stored procedures and user-defined functions.  There's especially some really clever ADO.NET and T-SQL syntax even a guru will smile at and save for later use. <br /> <br />On that note, the book at times doesn't use what many first-generation ASP.NET developers might consider best industry practices and does present a couple of programming tricks which might be up for lively debate, (e.g., passing DataReaders between application tiers), but it does introduce some interesting ways to get things done, albeit in so doing swimming against the generally accepted stream. <br /> <br />But beyond all the good tidbits and tips the book offers, the one shining moment that distinguishes it from most other texts in its genre is evident in the \\"Searching the Catalog\\" chapter.  The authors discuss the considerations, concepts and code required to built a (somewhat) scalable, quick and timely internal search utility.  This is one chapter and topic that no ASP.NET developer should go without reading, and the book is well worth the \\"price of admission\\" if you will, based on this chapter alone.  If you buy the book for any one reason - e-commerce or otherwise - it would be this chapter. <br /> <br />However, the only downside I cited to the book's search discussion was the fact that it mentioned using Microsoft SQL Server Full-Text Indexing in principle only, and doesn't exhibit how to build a search tool using FTI. <br /> <br />In short, this book definitively shows how to get a commerce-empowered site up and running quickly and easily with very few enterprise-level tools.  The search chapter is a must-read, and you'll learn much from a structured, methodic approach to ASP.NET development.	2004-09-29
US	48475902	R3LNSOHO6F9V7P	1590593197	830786679	Beginning .NET Game Programming in C#	Books	4	21	25	N	N	I'm not a games dev at all, and I got a lot out of this book	The first program I ever wrote was in 1984, being a text-based, command-driven NBA basketball game on an Apple IIe in BASIC.  My how games have progressed since.  Having said that, I'm strictly a web developer, and from behind the comfortable confines of the web browser is about where my programming acumen begins and ends these days.  But like most people my age (I'm 30) I grew up playing Nintendo and have long been a fan of video games.   <br /> <br />Being a user and not a creator, I'd long wondered how such things were brought to life, and this book does a great job of showing just that for the newbie.   <br /> <br />The code and concepts, despite the title, are fairly advanced, and not at all tutorial-driven, so not every line is described ad nauseum.  So an open mind is needed to let it sink in.  That having been said, the object-oriented nature and accessibility requirements for device hardware for modern video games is adequately described, with some very relevant games used as practical examples.  The purpose of, need for, and uses with, Managed DirectX 9 is very nicely done. <br /> <br />The authors use a very friendly voice, and cite several well-known games as exhibits of the fundamentals they describe throughout the text.  For example, a Tetris offshoot is described in the book's initial chapter, demonstrating how such a simple game is likely a lot more complex in its design that you might realize, but simultaneously not as laborious as one might think. <br /> <br />This book defines the major areas of concern for creating a great game, being that all elements within a good video game must exhibit some sort of (1) artificial intelligence, (2) spatial awareness, and (3) reactionary behavior in the event of collisions.  I also now know I'll probably never be a good games developer, as one should be very patient, be really, really, really good at math, and use some pretty advanced OOP/OOD concepts to create a good game.   <br /> <br />Now being aware of thenumber of skills needed, algorithms with which to be familiar, and areas that are more deeply covered in other specialized books, this book won't allow you to create the next Quake, Grand Theft Auto 3 or Super Mario World right off the bat - but it will get you started.  <br />	2004-09-13
US	48475902	R2CV9R5KSUHWM	1590593693	849439235	Beginning ASP.NET 1.1 Databases: From Novice to Professional	Books	3	3	4	N	N	Good enough - but leaves out some critical areas	One of the first books I bought as a classic ASP developer was the former Wrox's \\"Beginning ASP Databases\\", which greatly helped me understand the role, relationship and relevance of database systems in modern web applications.  I attacked that title with reckless abandon and limited foundation, acquiring a ton of knowledge.  It was with this same fervor that I launched into APress' \\"Beginning ASP.NET 1.1 Databases\\" - perhaps my over-exuberance, coupled with the fact that I know a lot more now than I did then, led to slight disappointment with this title. <br /> <br />Don't get me wrong, overall this is a great piece of work, and what it does cover it covers very well.  But it did leave out some critical areas that one should know as an ASP.NET developer. <br /> <br />I give high marks for the book's breadth of examples with a variety of data stores, such as MSDE, Access, and MySQL, as well as Excel spreadsheets and CSV files.  Curiously though, Microsoft SQL Server, Oracle and XML data sources were left out - I assume because MSDE so closely resembles SQL Server such would be redundant; and arguably describing XML is too tough to succinctly crunch into three paragraphs and then provide a working example.   <br /> <br />The scaled choice of database platforms, highlighted by the fact that ASP.NET Web Matrix is featured exclusively as the IDE of choice, leads me to believe that the book's intended audience would be the migratory developer or the first-time ASP.NET coder without access to enterprise-level resources.  This is cool, and necessary in today's market, as too many books these days assume a Visual Studio .NET/SQL Server/Windows 2000 Server setup, which obfuscates the hobbyist.  The only caveat is that the book's code samples are so married to Web Matrix that the newbie programmer will be lost without it.  <br /> <br />The book's case studies are greatly appreciated, and best practices in single-page coding and application design are enforced throughout.  Theauthors make great use of Five Normal Forms (FNF) in the sample projects.  The chapter on stored procedures is likewise great, as is the discussion on error handling, and introductory devs will also much from the samples dealing with transactions. <br /> <br />Unfortunately, the phrase \\"...will not be covered further in this book...\\" is uttered on too many occasions for topics this I feel are critical knowledge for an ASP.NET developer of any level.  Examples of these are largely skipping many of the important members within the System.Data.SqlCommand class (notably the ExecuteXmlReader() method), and only mentioning the SQL GROUP BY and HAVING clauses, without an exhibition of their use in a query.  These clauses are critical learning for database programming, and certainly warrant at least a brief example.  Tragically, they were mentioned only and then discarded without exhibiting what they do.  This was disappointing. <br /> <br />I also didn't see anything about using the SqlCommandBuilder within the text, which is a great topic for beginners, since it's one of the \\"ignorance is bliss\\" features of ADO.NET, doing all the work for you behind the scenes, and is a great way to learn SQL syntax.  It's therefore the perfect candidate for this book's target audience.  I felt this to be an odd omission, given the fact that the DataSet.Update() method was mentioned.  For the same reasons, I was offset by the fact that concurrency was left out (in the .NET world, a topic of debatable complexity - some see it as critical learning, others think it's too far advanced for a beginning book).   <br /> <br />Nonetheless, the authors both speak clear and concise about the subject matter, all samples feature code that's simple, consistent and non-intimidating, and the use of graphics and illustrations effectively reinforces the concepts.  This book makes a great learning tool for a classroom environment, if not a helpful guide for a professional web shop.  This book gives you a look at the options available to you and will get you started and give you the tools to get far enough - but doesn't get you all the way there.	2004-08-29
US	48475902	R34ATDG3KT0DDE	1590593901	965754110	Expert Service-Oriented Architecture in C#: Using the Web Services Enhancements 2.0	Books	5	24	28	N	N	Outstanding discussions of both SOA and WSE 2.0	At the time of this writing, the two topics arguably getting the most press, causing the most stir and generating the most buzz for web services aficionados are service-oriented architectures (SOA) for general audiences, and more specifically within Microsoft circles, Web Services Enhancements 2.0.  Author Jeffrey Hasan (of whose work I'm a big fan, notably for his work in \\"Performance Tuning and Optimizing ASP.NET Applications\\" (...) paints a masterful picture of both topics in this outstanding work.   This is a must-have if you've caught the WSE bug (pun accidentally intended) and need a practical guide to building better web services.      The material assumes a fair amount of .NET experience on the part of the developer, so the focus isn't on presenting exhaustive code examples and then describing them line by line; the intent is to give the seasoned .NET programmer a primer on how to make their apps more effective and more available to the rest of the world.    Using Microsoft .NET's associated technologies for XML Web services development, SOA is presented as being a maturation process for organizational web services, implementing a high level of abstraction, and therefore, a greater degree of universal appeal by promoting broad component reusability.  WSE 2.0 is then tackled, diving into the major areas of consideration for SOAP messaging (security, encryption, routing, reliability, policy creation/enforcement etc.).  Hasan describes the importance and role of SOA within large, disparate systems, preaching the gospel of interface-based systems and use of service agents (mid-tier objects managing communications between web services, business components and type/operation interfaces).  This builds on the same concept discussed by Microsoft's Yasser Shohoud as a major building block for advanced web services development in his seminal book, \\"Real World XML Web Services\\" (...).    Hasan also offers a refreshing, pragmatic discussion on the debatable misconceptionof the true \\"benefits\\" of loosely-coupled web services within enterprise-grade distributed applications, presenting a decent case for tight coupling in certain situations.    The book's prime example of an evolving stock quote service is appreciated a lot more than weak \\"Hello World\\" examples, and discrete enough to exhibit most of the advanced features of WSE 2.0 with a SOA slant.  Although one of the prime tenets for WSE 2.0 is to facilitate web services in a transport-agnostic manner, many of the examples are geared toward SOAP messaging using HTTP, to the enjoyment of ASP.NET developers - something that's largely missing in the market today, with many current examples being WinForms apps.  Desktop developers may grunt at the lack of representation in the book's examples for using other protocols (i.e., TCP, SMTP, etc.), but it's a minor price to pay.    Also, the book does sufficiently and consistently make mention of WSE 2.0 development for those of us not married to Visual Studio .NET environments, even though the preference of the author appears to prefer using the IDE.    This book is wonderfully written, using a voice that makes topics that can be quite difficult to wrap one's brain around easier to grasp.  The chapters are very logically arranged.  However, the book's major selling point is the working code and practicality of its theories, boasting a heavy dollop of both that experienced devs will appreciate and quickly put to use.  With only a sparse amount of syntax-centric documentation, Microsoft Hands-On Labs, articles, and in-print books available at the moment for WSE 2.0 programming, this book is easily the leading resource for concepts and code today on the subject.      On that note, the chapter on the future of messaging with Indigo was an unexpected but welcome treat.  I also found myself using the book's appendix more than I do most, which consists of a well-rounded collection of top platform-neutral papers on WS-* initiatives.  Very nice touch.    This is an advanced book, but not so far out there that a developer with a few months of .ASMX work logged won't be able to pick it up without sacrificing their social lives and/or sanity.  The book's writing style, arrangement of content and oft-brutal honesty (i.e., working with X.509 certificates in WSE 2.0 is pretty easy, but still far from completely painless; VS.NET's Add Web Reference option can royally screw up your proxy classes, et al.) make this a real winner and a great addition to your library.	2004-08-26
US	48475902	R2FPEEEU8W6PBR	0764572865	631389513	ASP.NET 2.0 Beta Preview (Programmer to Programmer)	Books	4	13	16	N	N	Outstanding overview of V2 for experienced ASP.NET devs	Bill Evjen, one of the most prolific writers on all things ASP.NET, presents his latest technical literary offering with his overview of the Beta 1 release of ASP.NET 2.0. I've been playing with ASP.NET 2.0 since the early alpha bits, and I got a lot of out of this title.  <br />  <br /> Admittedly not a primer for the .NET neophyte, Bill dives right into the major changes in the architectural, infrastructure and syntactical concerns facing next-gen web developers. The book is a quick read, containing 16 succinct but not light chapters on the major areas of building and administering ASP.NET web applications. Although the book takes a slight slant towards Visual Basic .NET, nearly all the code samples are presented in both VB .NET and C#. <br />  <br /> The book's high points, in my humble opinion, are evident in the &quot;Membership and Role Management&quot;, &quot;Personalization&quot;, &quot;Additional New Controls&quot; and &quot;Changes to 1.0 Controls&quot; chapters, being an outstanding breakdown of V2's improvements and new features for those respective topics.  <br />  <br /> Also to be appreciated is a great compendium featuring the new languages shipping with both VB .NET 8.0 and C# 2.0, including new enhancements to both languages like generics, partial classes and anonymous methods. He also breaks down new language-specific improvements, such as VB .NET's new keywords and C# iterators.  <br />  <br /> In criticism, I would have liked to see a discussion of authoring the revamped custom control development model, which the book didn't cover. But in Bill's defense, that respective programming convention isn't quite finished yet. The only other thing lacking would be more descriptive ASP.NET 2.0 APIs, which is usually a hallmark of Wrox-produced texts (the only area to get such treatment in this title is the WebParts/Portal Framework APIs). But then again, moving towards more declarative programming is one of V2's goals, so this may be intentional.  <br /><br /> With the exception of Bill looking a bit harried on the cover, it's a masterful work: well-rooted in the ASP.NET fundamentals while accommodating advanced topics, accompanied by relevant, code-heavy examples, all written in Bill's very appreciated friendly voice, with the right timely intermingling of humor.  <br />  <br /> Bravo and cheers, Bill! Great work!	2004-08-07
US	48475902	RVUR632SL1SLK	0735619131	885776145	Understanding Web Services Specifications and the WSE (Developer Reference)	Books	4	5	5	N	Y	Great review of WS concepts	This is a great book for system architects who build complex, distributed, advanced applications using XML Web services in .NET, or would like to.  While admittedly not a code-centric tutorial guide, it does serve to clarify many of the questions a developer considering the Microsoft .NET Web Services Enhancements (WSE) 2.0 would have, and demystifies many of the questions posed about interoperability between WSE versions and across platforms like .NET and J2EE.<br />Contrary to the criticism that some have unfairly labeled the book with, I didn't find the material to be rehashed MSDN articles that would be otherwise easily accessible on that site.  Rather, author Jeannine Hall Gailey gives an academic overview of the areas for WSE 2.0 under development by those architecting the web service model on a macro level (BEA, IBM, Microsoft, Sun, etc.).  Instead of regurgitated programming articles, Jeannine (whose body of work in writing about WSE and the high-end use of SOAP in .NET environments is most impressive) presents a complimentary collection of easy-to-follow articles on advanced uses for extending SOAP's capabilities, using a writing voice that's welcome and friendly.  (You'll surely appreciate this latter benefit, as the material can get quite complex at times.)   <br />So rather than give you code to nail down a specific problem, an overview of the web services model and of next-gen apps relying on SOAP is examined.  And you'll more well-rounded and better off because of it. When used in combination with the code found on her articles at MSDN, they make for a very effective guide to helping you build powerful systems.<br />At 232 pages, the book is a great quick read, giving the reader a high-level understanding of many of the concepts being discusses and/or enforced by the web services powers-that-be.  The major WS-* considerations such as attachments, security, reliable messaging, coordination and policy enforcement are described.  The book is written beautifully and organized logically, with easy to understand hypothetical scenarios.<br />The book makes mention of SOAP 1.2, and while it admits to leaning towards the SOAP 1.1 spec for the moment, does take the time to mention the differences between the two.  There's also a very healthy amount of information for two technologies you're likely to have lots of questions about - encryption and DIME attachments.<br />There was a terse mention of working with SOAP messages across SMTP, and I would have liked to see more of a discussion on this topic.  There's lots of good information about other transport protocols like HTTP, TCP and UDP, but sadly, not much on SMTP for building secure messaging systems over e-mail.  But I can't pin this minor shortcoming directly on the author - the Web is currently sorely lacking such information outside the scope of mentioning that SOAP can transport across SMTP.<br />But aside from that, this book is a great read for those looking to take SOAP to the next level and really leverage the WSE in their applications.	2004-04-30
US	48475902	RLEG5XIX8GQRH	013142193X	107957094	XML in Office 2003: Information Sharing with Desktop XML	Books	4	9	9	N	N	Great guide anyone with a little O2K3 experience can pick up	With the XML advantages in the Office 2003 suite of applications not being glaringly obvious (at least not to me), I gave this book a whirl.  I'm glad I did.<BR><BR><br />It's consistent in its organization - presenting the capabilities of Word, Excel, Access, FrontPage, and Office forms to use, manage and manipulate XML-based data - first from within the applications themselves, and then from more robust subsystems using Office's embedded Visual Basic for Applications (VBA).  It shows how easy it is to manage data by building great apps with simple scripts.  (Notably missing was a discussion on the applications of XML within PowerPoint, although I'm admittedly unsure if that's even an issue.) <BR><BR><br />The book's voice is very friendly and non-intimidating, using chapter around 15-30 pages at most, making for a pleasant, quick reading experience.  On this note, I found the Excel chapters and those on WordML especially valuable.  As far as the examples themselves, all were practical and easy to replicate locally, whether by menu or through code.  There's a healthy lean towards the use of SOAP by making Web services calls for importation of data that's a great addition. <BR><BR><br />The book also has something I found that many modern programming texts don't - an easy-to-understand explanation of schemas and how to construct them.  All books discussing XML obviously make mention of the use of schema, but the vast majority don't explain it well.  The authors do a great job of not only explaining schema's role in an app, but also how to build it, which is something newbies will appreciate. <BR><BR><br />Still, in this day of modern distributed applications and datashaping, I also would have liked to see the VBA-based examples complemented/contrasted with .NET programming concepts and code, working against the APIs for each Office app.  Also, one thing I found somewhat annoying was that the code, while complete and hearty, always referenced \\"in Line 25...and then in Line 30\\", without marking the lines of code, forcing the reader to manually count-and-mark the lines.  This was a minor nuisance, but a nuisance nonetheless. <BR><BR><br />But the good in this book far outweighs the bad, and the content and examples can be picked up by any level of staffer in the workplace who's familiar with Office apps.  It's a great read.	2004-02-18
US	48475902	R2DILF3PM6I4JY	0321202945	840403043	Adopting the Rational Unified Process: Success with the RUP	Books	4	1	3	N	N	Great practical guide to using RUP in today's development	\\"Adopting the Rational Unified Process: Success with the RUP\\" (http://www.amazon.com/exec/obidos/tg/detail/-/0321202945/qid=1073105259/sr=1-1/ref=sr_1_1/104-1339915-1067139?v=glance&s=books) is a title any organization looking to streamline operations would be wise to pick up. It's basically a \\"how-to\\" guide on making RUP work for you. And right off the bat, it lets you know that RUP is meant to be picked apart. <br />It explains strategies in getting the members of your team to buy into RUP's concepts, as well as getting management to support it. It also maps out a proposed strategy for using RUP not only in new projects, but for inserting it into work already ongoing. <br />It's written with a very friendly tone, and explained in plain English, with short, to the point chapters, making it a very easy read. It's also organized very logically, and features many of the RUP templates, as well as UML diagrams and schematics that reinforce the lessons learned. The book also does a good job of demonstrating the concepts mentioned, by giving examples of how RUP is used, and then follows it up with an outstanding appendix highlighting many well-known businesses using RUP in their operations. <br />Because of the clarity of writing, proven examples, and exhibits, this book would make an outstanding addition to the curriculum for either a software engineering course or business class.	2004-01-23
US	48475902	R1KFP03VHWSH9B	0201707101	89816065	The Rational Unified Process: An Introduction (2nd Edition)	Books	3	6	7	N	N	Good introduction to RUP for beginners	One thing's for sure: it's impossible for any one person to \\"know\\" the Rational Unified Process in and out.  So, stop right there if you're looking to get the printed documentation of RUP, because it's logistically impossible to bundle it all into a paperback book.  These titles give a bird's eye view of what RUP is and how it can be leveraged for optimal productivity in the vein of software development. <BR><BR><br />This book gives you great high-level insight on how your organization can benefit by adopting and implementing RUP in your developmental projects. <BR><BR><br />\\"The Rational Unified Process: An Introduction\\" is an overview into the theory behind RUP.  Great chart and graphics describe the processes RUP is rooted in, and the title is written in such a way as to indirectly hammer home the concepts into your subconscious, without being too blatantly redundant.  Essentially, you'll get the jist of RUP - iterations, that the waterfall process isn't efficient, the importance of establishing diversity in team-based development, and the importance of architecture. <BR><BR><br />Basically, the book also enforces the concept that self-organization and communication within an organization (within the team, throughout the company, and with clients) is key.  It reads more like a business journal than a technical guide, so hands-on examples are left out. <BR><BR><br />Also, the poster summarizing the key RUP activities that's included with the book is really great.  I would have liked a case study at the end of the book to tie together the concepts with a practical example, but the book is great otherwise.  I also found the fact that samples of RUP templates to be a bit disappointing.  A helpful appendix listing some (not all) of the key artifacts used in RUP planning is also appreciated.	2004-01-03
US	48475902	R19XUQB55I717M	0321154916	291980272	The C# Programming Language (MICROSOFT NET DEVELOPMENT SERIES)	Books	4	42	47	N	N	Great reference, but NOT a programming tutorial	I've always held as a personal dictum that the best way to get complete, irrefutable information on something is to go straight to the source.  And the new title \\"The C# Programming Language\\", co-authored by Anders Heljsberg, a Microsoft distinguished engineer and the creator of the C# language, is such a source.<BR><BR><br />To paraphrase my favorite quote from the Matrix series, \\"He IS the architect.\\" <BR><BR><br />However, the key element to understanding why you should get this book is understanding what it is...and perhaps more importantly, what it is not.  The main focus of the book is to provide centralized documentation for the C# language specification.  It's not intended to be a comprehensive tutorial to C# development; it's a programmer's reference, profiling the internal mechanics behind the world's most rapidly-adopted programming language. <BR><BR><br />So, it's not a book where developers can copy out code, find out how to better design classes, or lookup methods and properties within the .NET Framework - it's a valuable reference guide for the experienced developer.  As such, I find it to be a fantastic resource for upper-level computer science students (a market Addison-Wesley very adeptly serves anyway), or those professional developers moving over from other languages and/or platforms, and I highly recommend it to those who would make buying decisions for such classes. <BR><BR><br />People looking to buy it as a programming guide will be disappointed, I'm sad to say, as it's simply not that type of book.  This would be akin to be getting lost trying to read the U.S. Constitution to find out how to create a law.  It's applicable...but not directly. <BR><BR><br />However, I enjoyed reading it, for the academic and conceptual benefits it provided.  And yes, I did learn a lot, most of which I didn't realize prior.  A very, very helpful collection of appendices make this book a great addition to any development team's library.  A hale and hearty section is also dedicated to introducing to the new features inherent to C# 2.0 - generics, anonymous methods, iterators, and partial classes.  <BR><BR><br />In my opinion, the book's one major flaw is the misnomer is gives off to the buyer, which unfairly at this point in the .NET game, implies the de facto expectation for a self-help book on learning various aspects of Microsoft development.  The true purpose of the book could have been better promoted with the inclusion of a subtitle, something like \\"The C# Programming Language - An Architect's Guide to the Specification\\", or something making the true purpose a bit more obvious. <BR><BR><br />That having been said, the book is a fantastic deal, priced cheap (a great bargain at US$29.95), so buy it if you're an experienced developer who's curious.  You'll grow as a developer by increasing your own programming acumen by becoming more intimately familiar with how the C# language does what it does in the background.  <BR><BR><br />The title is beautifully bound, being a hardcover book with one of those little page-placeholder ribbon thingys, the name of which I obviously don't know, but a nice touch nonetheless.  <BR><BR><br />I'm not sure how I should rank this book, as it's a specification, and therefore inherently comprehensive, and likewise subject to standardization prior to publication.  But, I did get a lot out of it, so that says something.	2003-12-06
US	48475902	R17Z61WJQVLHPO	1590593375	220927234	ASP.NET 2.0 Revealed	Books	5	8	11	N	N	Great explanation of Whidbey concepts w/lots of code!	ASP.NET 2.0 Revealed<BR>By Patrick Lorenz<BR>Published by APress<BR>...<br />This book is much more demonstrative and visual than some of the other titles currently on the market, making it the ultimate complement for books like \\"A First Look at ASP.NET v 2.0\\".  Overall, the book's tone is very educational but not intimidating, complex but not complicated, making for a very friendly atmosphere that makes it quite easy to read.<BR><BR><br />The book tackles some of the more technical topics involved with developing and administering ASP.NET web sites, so it's an effective tool in lightly previewing what's coming on the horizon for us, as well as giving you the in-depth answers to allow you to start planning to solve problems and work more efficiently. <BR><BR><br />In each of the title's 13 hearty chapters, there's great examples that accompany most, if not all of the concepts presented.  So, you don't get an empty, lost feeling after being drawn-into an idea - it's succeeded with a relevant, working C# example. <BR><BR><br />The book is definitely written for the web developer already primed with experience in ASP.NET 1.x, so familiarity with the concepts of Microsoft web development is a must.  But assuming that, you'll be very pleased. <BR><BR><br />Specifically, there are several areas in this book I found to be outstanding.  These include a fantastic introduction to generics, iterators, anonymous methods and other new features of both C# and Visual Basic .NET.  Also, there's a great description of using the ObjectDataSource control for binding business objects to data controls, and an equally nice discussion of the Site Counter API and keeping tabs on the user currently on one's site. The book also has a good chunk of information about the improvements to working with dynamic imaging, and about the easy by which you can create and control client-side script. <BR><BR><br />Additionally, there's a great preview of the Whidbey version of Visual Studio .NET's features specifically for web developers.  Provides constant tips and comments about what features are likely to be changed by the Whidbey Beta.  <BR><BR><br />The sole bit of criticism I would have it that, the chapter on Web Parts chapter was interesting, but largely took from the documentation and samples you can find on MSDN and in the .NET Framework documentation. <BR><BR><br />But outside of that, the positive far outweigh the negatives, and if you're on the hunt for anything and everything you can get your hands on about the next big thing in web development, get your hands on this book today.	2003-12-03
US	48475902	R2P3BWOO9ZG20L	0321159659	214028496	ASP.NET Solutions - 23 Case Studies: Best Practices for Developers	Books	4	5	5	N	N	Good working code for the developer on the run	This book is one of the few books that is reminiscent of the many titles that were published in the glory days of ASP Classic, being \\"plug and play\\" books that had independent bits of code you could rip and start working with immediately.  I'll admit that I hadn't heard of Rick Leinecker before this book came out, but I'm a big fan now.<BR><BR><br />While the title's main draw is to give a developer a series of diverse applications, it presents the information in a way in which many of us admittedly still program - on a per-script level, without all being tied into one major application.  The code is documented nicely and explained well.  <BR><BR><br />Also, examples like the Microsoft ASP.NET Forums and dynamic charting script author Leinecker use a more enterprise approach, each being component-driven sub-applications. <BR><BR><br />While the book's subtitle denotes \\"best practices\\" (which is somewhat argumentative when dissecting the code and methodologies used), it is a quick read, with lots of helpful info.  And it does a great job of doing what it says - giving a developer quick, easy access to 23 different types of applications with which to deploy in web environments. <BR><BR><br />The SpeechVB application was also a neat addition. <BR><BR><br />So if you're looking for a title that just gives you a jumpstart on getting working code, grab this book.	2003-11-29
US	48475902	R8ELN0D6L77VM	0321160770	3729429	Graphics Programming with GDI+	Books	5	10	14	N	N	A fantastic work - a MUST HAVE for any ASP.NET developer	That huge surge you just felt was a collective breath of relief and gratitude being exhaled by the members of the ASP.NET community with the release of \\"Graphics Programming with GDI+\\".  To date, the topic of graphics programming in ASP.NET exists only in a few sparse articles, which exhibit extreme polarity - they're either too easy or too hard, exhibiting not enough practical information or excessive amounts of practices rarely used, respectively.  <BR><BR><br />Thankfully, author Mahash Chand starts off easy with the fundamentals of graphics programming in the .NET world in a very platform-agnostic manner, and then introduces some fairly advanced concepts.  The pace is natural and easy, introducing the requirements and fundamentals for programmatic graphics development in applications, and then developing upon concepts like shapes, fills, and fonts. <BR><BR><br />He also tempers his discussion with a healthy \\"best practices\\" section in the latter part of the book that curbs your enthusiasm for developing visual elements to your project, letting you acknowledge the responsibility one must have when working with graphics, in terms of performance and resource consumption. <BR><BR><br />Too often I've seen books haphazardly try and explain a concept of graphics programming with GDI+ by saying, \\"check the .NET documentation for more\\".  This is the definitive book out on the market today that will give you the edge in working with graphics.  <BR><BR><br />The book's examples have a natural slant towards Windows Forms applications, but fear not, web warriors - this book is a must have for any ASP.NET developer, as the approach takes you quickly but thoroughly through the rigors of working with dynamic imaging for the browser. <BR><BR><br />Bravo, Mahesh - we all owe you a debt of gratitude.	2003-11-29
US	48475902	R2EVS82177ETCN	073561900X	413660432	Microsoft ASP.Net Coding Strategies with the Microsoft ASP.Net Team (Pro-Developer)	Books	4	19	20	N	Y	Great architectural help guide, but	With ASP.NET 2.0 right around the corner, there's a new book out that will give a needed edge to your arsenal of tools with which to draw from for ASP.NET 1.x.  While many in the ASP.NET community will be sticking with the first version of Microsoft's web development platform for some time to come, \\"Microsoft ASP.NET Coding Strategies with the Microsoft ASP.NET Team\\" provides a deep, insightful view of architecting, configuring, managing and extending next-gen web applications with ASP.NET.<BR><BR><br />Still, there are several code examples, albeit in the guise of snippets and clips.  Many of those used are cited as being taken straight from the many free ASP.NET projects, like the ASP.NET Forums application, the ASP.NET application blocks and many of the utilities currently used on [...] <BR><BR><br />My biggest - and only - criticism of this title is, ironically, its title.  Despite what the heading implies, it's not one of those books with hundreds of free scripts that you can plug into your site.  It's not a gallery of free code you can rip-and-insert into your site like was available in so many ASP 3.0 books.  Rather, it provides a fresh, welcome discussion on the inner-workings and processes of ASP.NET behind-the-scenes.  And for that, it's very valuable. <BR><BR><br />I find it to be a great resource for experienced ASP.NET developers as an architectural guide, more than a code reference, which the title would lead one to believe (at least that's the first impression I got when I bought the book). <BR><BR><br />The book's high points are Rob Howard's outstanding comprehensive discussion of caching (which is one of the better dialogues available in print), as well as talks about working in the [...] pipeline, developing custom [...] handlers, and developing custom server controls. <BR><BR><br />It also seems that most of the chapters are taken straight from, or based upon, content that already exists on MSDN.  While this seems to be a point of contention formany developers, I find that it's nice to have these helpful articles aggregated in a single bound collection.  <BR><BR><br />At any rate, it's a good read, and will augment your knowledge of ASP.NET, what it does, how it does it, and how you can get it to work in your web apps.	2003-11-29
US	48475902	R11C87UWHRJ3VU	0321228960	421431334	A First Look at ASP.NET v 2.0	Books	5	1	1	N	N	Believe the hype...buy this book.	The scientist Louis Pasteur is famous for, amongst other things, saying, \\"chance favors the prepared mind.\\"  With Whidbey on the horizon, Dave Sussman, Alex Homer and Rob Howard, are getting you prepared for battle, as you combat long, drawn-out development sessions and having to write thousands of lines of code.  You'll definitely want to pick up a copy of this book to properly arm yourself.<br />Whether you're an existing alpha tester or one of the many who is privy to a PDC copy of Whidbey, this is the definitive source you'll want in your arsenal for the next evolution of ASP.NET.  There's code galore, and the concepts are explained easily and well, while still mixing in the specifics of how the next version of .NET will help you become a better web developer.<br />The book's hearty 470+ pages display a tone that is friendly and comforting, which is a plus when taking into consideration the literal piano of information about new features and enhancements that will be dropping on you.  It seems to be best read by an experienced ASP.NET developer, familiar with concepts and terms inherent to Microsoft web development.  One will quickly welcome the perspectives given on a variety of topics from caching to the new server controls, to the enhancements Version 2.0 of the .NET Framework delivers.<br />The book does not completely marry the reader to the Whidbey version of Visual Studio .NET, rather presenting the code examples in an IDE-agnostic manner, so as to still appeal to the NotePad enthusiast in all of us.  Still, the vast and massive improvements to VS.NET itself are well documented.<br />All the book's examples are presented in Visual Basic .NET, which isn't so bad, as one of the key points of the title is that Whidbey's new model minimizes the authoring of code itself, so you can concentrate more on working with encapsulated server controls and optimizing your web apps through intelligent configuration and management utilities.<br />A very healthy chapter onWeb Parts and Whidbey's model for the portal framework is most appreciated, and the ease by which you'll sift through the accompanying code just goes to prove how much better developing web-based applications will be once Whidbey arrives.  Equally-thick chapters on new aspects of the feature set such as master pages, membership, and personalization, as well as great discussions of the improvements to the existing security, data controls, configuration and administration.<br />The book also does a great job of keeping multi-platform application development in mind, constantly mentioning the capabilities of Whidbey to generate output for both the desktop-based and mobile browser.<br />My personal favorite new feature of ASP.NET 2.0 is Web Parts and Personalization, and the book has a great deal of information on both.  The book proves that not only has Microsoft listened to customers and thought way ahead in developing the next big thing, but the title's authors themselves answer many questions you'd likely ask.<br />If you're wondering if this book (and Whidbey in general) is worth it - believe the hype.  Get this book now.  You'll be very happy you did, and will be anxiously anticipating the release of Beta 1.	2003-11-26
US	48475902	R2QV26KSO1AHVN	0764526286	104433085	ASP.NET Professional Secrets	Books	4	21	24	N	N	Great for intermediate ASP.NET'ers who can do w/out the hype	I happily read \\"ASP.NET Professional Secrets\\" by Bill Evjen and friends.  The book is authored by some of the more notable and most active personalities in the ASP.NET community today, lending their knowledge and empowering you with a quiver of tricks and skills to build next-gen apps faster and more efficiently.  <br />The well-read Evjen's discussions dominate most of the text, although contributions from specialists like Dave Wanta for working with e-mail and Doug Seven in managing data-driven list controls are very helpful.<br />Although the book implies a title written to feature little-known tidbits, the book is a refresher course for the most part for the intermediate-level developer.  Code samples are not largely explained line-for-line, if at all, and that's nice for those who've been working with the .NET Framework a little while and can most past the obvious.  Such is becoming a recurring trend in ASP.NET publishing, and it's a nice shift for books that don't assume a little-to-no experience level and just get right to the topics at hand.<br />So while the book may not be the saving grace for someone looking to get into Web development using Microsoft technologies for the first time, it is great for someone migrating up from .NET 1.0 and older builds of Visual Studio .NET.<br />Best of all, the sections on XML Web services and mobile apps development (featuring multiple chapters for each topic) are fantastic and give more insight into subjects most omnibus ASP.NET texts only give the obligatory single chapter to.  Some depth is provided beyond creating a \\"Hello World\\" WebMethod or an obsolete mobile page.<br />And while the book leans towards Visual Studio .NET as the preferred tool for development, it doesn't present the information exclusively with that tool and its proprietary code (i.e., code behind with the InitializeComponent() method).  Code examples are simple .ASPX pages with server-side logic coded in-line.  This makes for a very pleasant, readable, generic, IDE-agnostic approach.  In fact, the book is honest in mentioning that for the web-only developer, in a few areas ASP.NET Web Matrix is superior to its bigger brother, VS.NET.<br />It's an excellent read if you've used ASP.NET for awhile, and will make for a great reference for those inevitable \\"now I know I saw how to do that somewhere before...\\" situations we all run into.  <br />WHAT I REALLY LIKE<BR>- The code isn't painstakingly explained post mortem - an objective is stated and then matched with a sample<BR>- All code samples are in both Visual Basic .NET and C#, and written consistently<BR>- The sections on XML Web services and mobile programming are must-reads<BR>- The book features fantastic quick-read appendices<BR>- Evjen's writing is excellent - friendly and helpful - and you'll pick up some great tips.  His contributions make up about 85% of the book's chapters, so his positive, helpful tone is well received throughout the book.<BR>- You'll find all sorts of tidbits you might not have picked up <BR>- Doug Seven's chapter on list controls is well-written, well-explained, very usable, and overall - excellent!<BR>- An outstanding in-depth discussion of the use of e-mail in ASP.NET apps by Dave Wanta, widely considered to be the world's foremost expert on the topic<BR>- Good discussion of using client-side JavaScript within a page for commonly-asked topics such as postback<BR>- Great chapter on COM interoperability by Jason T. Roff.<BR>- Great use of viewing all the code examples in .ASPX files with server-side code inline.  The only exceptions are where code-behind is stated for example purposes.<br />WHAT I THINK NEEDS WORK FOR THE SECOND EDITION<BR>- The chapter on Custom Controls doesn't make mention of the fact that classes don't need to be compiled to an assembly before using them as a portable control.  This, IMHO, is a major omission and will confuse developers who have used ASP.NET  1.0, having to compile a class to a .DLL prior to usage.<BR>- I can't really hold the authors responsible for this, but I don't really care for the book's physical binding.  The spine is flimsy and made with thin, brittle paper.<BR>- Some graphics don't match the captions<BR>- Although the book's main focus is on the .NET Framework 1.1 and VS.NET 2003, it doesn't give much of a historical perspective on how the Framework and ASP.NET has changed since its earlier incarnations.  Given the scope of this book, such would have been nice.<BR>- The book is surprisingly missing a discussion of building custom HTTP modules and HTTP handlers<BR>- Chapter 11, \\"Creating Custom Controls\\" could use some work.  The example on Page 397 makes no sense whatsoever.  The \\"Creating Adaptive Controls\\" example should discuss how CSS-compliant HTML is rendered in the browser, and it led me to believe that it was so, not writing out the Browser property.<BR>- A few glaring editorial snafus should have been caught in the proofreading phase	2003-10-24
US	48475902	R4FWZFLKQ1MR9	0321130022	579979325	.NET Patterns: Architecture, Design, and Process	Books	4	11	15	N	N	Great pattern resource, cool approach; U can skip the intro	First, I've not got what would be considered by academic circles as a classical computer science background.  I majored in marketing in college, and learned the art of programming and software design out of necessity for my Web projects to work.  Needless to say, I've not had a solid background, and thus an appreciation for or acknowledgement of, design patterns within the scope of developing great software.<BR><BR><br />This book has changed all that. <BR><BR><br />This work is written in author Christian Thilmany's honest perspective and admission that much of the design of Microsoft's ambitious .NET initiative was to take from the things that made Java such a great developmental platform and allowed it become \\"the language of the Internet\\".  And this rare viewpoint is well appreciated.  <BR><BR><br />Being a solutions developer well versed in both Java and Microsoft platforms, this honesty lends credibility to the claim of showing how much of .NET can be attributed to roots in Java, which other authors either bash for the sake of bashing any opponent of the good folks in Redmond, don't give enough credit to, or shy away from completely.  I've always seen this as unfair to the reader. <BR><BR><br />Using the approach to explaining and providing design patterns based on the similar structures used in Java programming, Thilmany shows how utilities can be assembled for use for all three major tiers of a development project.  Since much of the work of design patterns is used in Java anyway, he has no reservations about explaining how work in similar fashion with .NET.  And the reader is better off for it. <BR><BR><br />It's not only the code-based patterns themselves which are great, but also the method in which the author presents getting to the patterns, being examples that are repetitive, consistent, sequential and iterative, allowing the reader to condition their mind in an efficient problem-solving sequence of events: (Intent ==&gt; Problem ==&gt; Forces ==&gt; Structure ==&gt; Consequences ==&gt; Implementation).  So, it's the mental pattern of solutions development that's also discussed, and I feel, the greatest advantage to this book. <BR><BR><br />The book is also effective, I've found, for Web application architects.  Typically, Web devs and those from the ilk of an ASP 3.0 background tend to shy away from topics like patterns, remoting and DCOM, as it largely was a topic rarely, if ever to be used in their work.  Thilmany gives lots of helpful tips and hints in pattern design and architecture, with relevance for the Web crowd, as well as the desktop developer. <BR><BR><br />Now, being critical, I found the book's first part, in giving a primer on .NET in general and for the XML Web services model, a bit extraneous, or at least not excessive enough to warrant three full chapters.  But the book from there on is gold.  The patterns themselves are plentiful, well-explained and the book is beautifully written. <BR><BR><br />And you'll be a better overall developer for checking it out.	2003-09-22
US	48475902	R18FRUWJXTYAJ3	1590591003	343518805	Real World ASP.NET Best Practices	Books	4	73	75	N	Y	A much-needed literary slap upside the head for ASP.NET devs	\\"Real World ASP.NET Best Practices\\" is a great and much-needed literary slap <BR>upside the head for those of us who haven't been squeezing the most out of our <BR>apps. If you already know you're stuff with ASP.NET, get your hands on this book <BR>and get a very positive reality check.<BR><BR><BR><BR>Since having worked with ASP.NET for a few years now, I've been on the hunt for <BR>a new book that goes beyond the introductory/intermediate description of how <BR>ASP.NET does what it does in the aggregate. I don't need an omnibus discussion <BR>ASP.NET in the aggregate, detailing how to populate a drop-down list or connect <BR>to a database, and the obligatory of how to create a \\"Hello world\\" XML Web <BR>service. I wanted a title that would focus on a niche aspect of ASP.NET Web <BR>development, and that's precisely what this book delivers.<BR><BR><BR><BR>The book could also very fittingly be named, \\"The Things We Like Best About <BR>ASP.NET - 2 Dudes and their Opinions.\\" And this is a good thing. The authors do <BR>a great job of providing you with helpful tips to hone, refine and enhance your <BR>existing ASP.NET savvy to be able to write code less, smarter, and more <BR>productively.<BR><BR><BR><BR>It provides closure for all-too-common developer inquiries like: what's faster - <BR>a DataReader or a DataSet? Which Web server control is more top-heavy - a <BR>DataList or a Repeater? It also demystifies the mighty, mighty DataGrid and <BR>shows it's not the all-encompassing solution many may think. Further, it <br />addresses the much-misunderstood mechanism of suitably using client-side <BR>JavaScript in your ASP.NET WebForms.<BR><BR><BR><BR>You'll find lots of accommodating code methods, syntax tidbits, and general <BR>concepts buried deep within the .NET Framework to let you write more productive <BR>apps. <BR><BR><BR><BR>WHAT I LIKE<BR><BR>* Phenomenal chapter on caching - when to use it, and when it's more of a burden <BR>than a blessing for your apps. This isone of the best discussions on the topic <BR>I've found in print to date.<BR><BR>* Great ADO.NET coding techniques are enforced throughout the book, showing how <BR>to effectively/efficiently connect to, disconnect from, and destroying database <BR>communication objects<BR><BR>* Comparing the true best way to persist data across pages and postbacks<BR><BR>* Tips and tricks from classes and interfaces within the .NET Framework that <BR>have gotten little fanfare or have gone largely undocumented, such as various <BR>sues for the IList interface C#'s `lock' keyword help out a lot.<BR><BR>* I enjoyed the section on the dangers of overusing dynamically-loaded users <BR>controls, adding severe overhead to your app<BR><BR>* The portion of why it's not a bright idea to use business logic within a <BR>DataSet is really eye-opening<BR><BR>* I like the fact the concepts are supported by metrics in Application Test <BR>Center, demonstrating the relative performance of a code block in the real <BR>world. Although numbers don't lie, but they don't tell the whole truth, this is <br />a much-needed addition.<BR><BR>* The chapters are short, to the point, but still chock-full of great content, <BR>not inundating the reader with extraneous information.<BR><BR>* Included is a very nice discussion of performance optimization through proper <BR>development of an app's web.config file.<BR><BR><BR><BR>WHAT I THINK NEEDS WORK FOR THE SECOND EDITION<BR><BR>* The code samples are inconsistent, with half of them being in C# and the other <BR>half being in Visual Basic .NET. Also, the VB.NET chapters tend to be so tightly <BR>married to Visual Studio .NET coding that it makes migration out of it rather <BR>difficult<BR><BR>* The writing style has a tendency to display the occasional grammatical <BR>abnormality, (e.g., \\"know how to properly use DataSet\\")<BR><BR>* I was hoping to see a discussion of performance optimization within the <BR>context of a tiered application, specifically tweakingyour data access layer (DAL) <BR>for maximum speed. This isn't a biggie, just maybe a suggestion for the next <br />edition.<BR><BR><BR><BR>I would rate the book 4 out of 5. Forgiving the editorial snafus and the code <BR>inconsistencies, I really had a positive experience reading this book. It's not <BR>the same old take on ASP.NET, and you'll be a better off and more well-rounded <BR>developer, now conscious of the major considerations behind your app's curtain <BR>because of it.	2003-07-24
US	48475902	R3MYPXAEN8NENU	0596004478	622052089	Google Hacks: 100 Industrial-Strength Tips & Tools	Books	4	11	12	N	N	Not just for programmers	This book isn't at all what I expected - and this was a very welcome surprise!  From the colophon for the first time not being a member of the animal kingdom (a pair of locking pliers dresses the book's cover) to the content within, this is another achievement for the fine folks at O'Reilly.  <br />I first got a copy of the book thinking it was an end-to-end collection of code snippets on using the Google API to write custom apps to access Google's massive data store, but it's so much more than that.  The book is wholly a collection of 100 quick-reading tips and tricks on using Google, but not exclusively from a coder's point of view.  For that reason, it's very flexible to a wide audience.   It's subdivided into distinct sections that focus on using the various services and features offered by Google, such as time-saving query syntax, to customized programming with the Google API, to off-the-wall tricks.<br />The book also gives great examples of performing searches that have little-to-no documentation from Google, such as doing lookups for stock symbols or phone numbers.  The authors also do a great job of highlighting several utilities and apps built within and outside of the scope of the Google Terms of Service agreement to access its data.  The games are quirky, but cool.  You're unquestionably going to find something in the title's pages you'll find neat and want to replicate/morph for your own use.<br />It may tend to disappoint codeheads who buy it just for syntax and rippable code samples for using the Google API, but it does more than make up for it in being a reference for getting the most out of what's undoubtedly the world's most popular search engine.<br />The only criticism I have is that the book was very top-heavy in examples written in Perl, so it's more applicable to that crowd, especially given that the book's back cover advertised examples in .NET, Java, Python, and PHP.  (There was ONE example for each of the aforementioned languages and platforms in the chapter on programming against the Google API).  However, my fellow .NET developers can surely use the Perl .NET or if you're up for a good challenge, cross-translate the Perl syntax into the equivalent of your favorite .NET language.<br />But outside of that, the book's great.  It's quick, fun, organized and won't force you to give up a couple nights to get through it.  And it not being solely a programmer's book, it's also applicable for others in your school, office and household.  I've let several people read it - namely a teacher, a couple of students, and some Web surfers - and they all enjoyed it thoroughly.  You read what you need to read, and get on with your life.  <br />And at US$...it's a steal.	2003-04-20
US	48475902	RUXOB82DFDH31	1861004176	493767335	Beginning Java Objects: From Concepts to Code	Books	5	26	27	N	Y	Great for non-Java progammers, too!	In reading Barker's title, one gets an extraordinarily good education into the major considerations for object-oriented design.  Although the book's title would imply that Java developers would benefit most, this is a great introductory manual to OOP and Java 2, and perfectly suited for other platforms, as well.<br />It's actually a very helpful, very educational, very entertaining look at object-oriented software design, at modeling, and at proper management of the process in which they are used to create great software applications.<br />Barker does a fantastic job of describing the process and life-cycle involved with designing and coding a system, and centers the concepts presented around an iterative practical application, a student registration system for college.  She also bases her method of teaching concepts-first-and-then-code around pseudocode, so the reader isn't inundated by too much syntax while trying to grasp fundamental subjects.  Barker also steps the reader through the procedural methods of designing an application, such as creating a vision document and glossary of system-specific terms.  <br />In doing so, Barker also uses one of the friendliest voices in her writing that's truly a rarity in technical books these days.  <br />Being an ASP.NET developer working almost exclusively in C#, I got a lot out of it.  The Java syntax might be a stretch for VB devs; the book also makes for great recommended reading for those just starting to get into OOP or Java.  I'd also recommend this book for Microsoft developers migrating up from Windows DNA and ASP 3.0 technologies, as it really does a good job of walking you through OOP/OOD, which in my opinion has proven to be THE major hurdle for many devs in embracing .NET.<br />The only downside I can see about this book is that because of the title, developers non-Java other platforms and disciplines will unfairly look past it, and therefore miss out on the important lessons contained within its pages.  The book's key strength lies in the chapters on designing use case scenarios and UML diagrams, which I really enjoyed.  <br />It's these unexpected advantages that have put this book in a prominent place in my home library that keep it easily within reach.	2003-02-27
US	48475902	R3U2REMW8Y79LJ	0201760401	937672184	Essential ASP.NET With Examples in C#	Books	5	37	37	N	N	Great resource for those with prior ASP.NET/C# experience	I recently read the excellent \\"ASP.NET Essentials with Examples in C#\\" by Fritz Onion, published by Addison-Wesley as part of the company's excellent .NET Development Series.  Having been working with ASP.NET for more than two years, I tend to be a bit more skeptical of new ASP.NET titles when they take an omnibus approach, attempting to preview an entire technology in one book, rather than a specific part of a platform or the application of it.  <br />This is definitely not the case with this new book, as it's a very refreshing overview of ASP.NET for those who have been working with it.<br />It's been my experience that with most titles taking an omnibus approach, a book will have one or two chapters that really shine, explaining some aspect of ASP.NET development better than most books.  This book has several such gems.  It features one of the better descriptions of proper surgery of machine.config/web.config that you'll find on the market today.  Specifically, each element with an application's configuration file is examined, instead of the lackadaisical \\"here's a look at the more important ones\\" approach that so many authors sadly resort to. <br />It also sports a better description than most books about the ASP.NET worker process (aspnet_wp.exe) and the role of it within the context of an application.  The book also does a good job of defining the HTTP pipeline and the importance of authoring custom modules to extend/enhance an application.  Really good chapters on data binding and writing custom server controls also stand out.  Both beginners and experienced developers will get a lot out of these helpful and very necessary explanations.<br />The illustrations are very helpful, and Onion takes another rarely-used approach - explaining each and every data member for each interface implemented by ASP.NET, rather than just saying, \\"Class XYZ implements IASyncResult\\".  The book's focus is giving the professional developer a better understanding of the inner-workings of the ASP.NET platform, not providing some generic code samples.<br />Author Onion's writing style is pleasant - he doesn't insult more experienced developers by diluting the easier material, and likewise won't render beginners numb with confusion when explaining more technical concepts.  <br />The book's physical binding is solid, with a rugged cover, thick paper, and a spine that won't easily break while resting in your lap while coding or on your stomach while reading (like me!)  At a lean 378 pages, the book features 11 power-packed chapters that won't have you forego your normal social habits just to get through it (I finished the book in two nights' time).<br />However, I found it curious that the book did not cover the obligatory chapter on XML Web services.  This surprised me, as it has become a de facto standard for authoring ASP.NET titles to at least mention how to write \\"Hello, world!\\".  No biggie on this one, just sort of surprising.<br />But outside of that, the book is a winner, and a must-have for experienced developers who want to augment their knowledge of ASP.NET by being aware what goes on under-the-hood.  <br />Bravo Fritz, for a job well done!	2003-02-26
US	48475902	R1HP5BH94M7KD1	0201745682	7607534	Pragmatic ADO.NET: Data Access for the Internet World	Books	5	10	10	N	N	True to the title, a must-have for any .NET developer	I have been fortunate enough to read \\"Pragmatic ADO.NET - Data Access for the Internet World\\", a truly great book.  I've got a decent enough knowledge of data access as used by the .NET Framework, but this book gave me a wake-up call to precisely how things are done, and how I can better optimize my apps.  As such, I got a lot out of it.<BR> <BR>It's less of a \\"techie ramming programming concepts down your throat\\" approach with impractical and illogical examples you'll never wind up using.  On the contrary, author Shawn Wildermuth uses iterative examples using a similar coding design that is consistent throughout the book to connect to a database, and extract/update/manipulate or analyze information, so it sticks with the reader more.  I've let some members of the user group I run preview the book and they got more out of it than any other book on ADO.NET so far.<BR> <BR>The book is perfectly suited for the intermediate-level, professional developer, as it's not intended to be an introductory book on ADO.NET programming (or database technology, for that matter), so most of the code examples are presented in a way that assumes the reader is familiar with writing data-driven apps.  As such, the book doesn't waste time going through 5 meaningless chapters on \\"What is .NET?\\", \\"What is ADO.NET?\\",\\"What is the CLR?\\", and other things that drive people just in search of good., useful information crazy.  You hit the ground running.<BR> <BR>Wildermuth's writing style is great - he uses a tone that is learned, yet not domineering; knowledgeable, but not unfamiliar.  Reading his book is like sitting down with a friend and chatting about data access principles.  (It's also more than obvious very early on the in the book's code examples that Shawn is an avid fan of the Atlanta Braves).  :)<BR> <BR>The numerous code examples are easy to follow and are presented in C#.  He also runs ... for Web-based support.  I also liked the fact that Wildermuth made reference to and cited examples using Visual Studio .NET, but did not explicitly marry the book to Microsoft's IDE, and include all of the proprietary code that is generated because of it, which in my opinion, tends to confuse a reader not using VS .NET, making the book counterproductive.  The code is laid out raw, so a developer using some other IDE (or NotePad) can just as much out of it as the VS .NET jock.<BR> <BR>At 330 pages (with an excellent appendix on migration) it's a quick read, but nonetheless contains healthy chapters on the DataSet, uses of XML, designing middle-tier business objects, and schema.  The book's physical properties are great....the cover is strong and bound tight, with thick paper, so it won't have a broken spine or fall to pieces after 4 nights in your lap while you code. To me at least, this is important.<BR> <BR>The book also includes an excellent chapter on implementing a best practice approach to managing your migration to ADO.NET, and appreciating the nature of an the scalability of an application.  Wildermuth preaches that ADO.NET, like any technology should be planned and implemented wisely, rather than just deploying next-generation technology merely for the sake of doing so, or in doing so, creating inefficiency.<BR> <BR>For criticism, I felt that Chapter 10, \\"Data Binding with ADO.NET\\" was a little light, only briefly previewing the use of data in Windows Forms for desktop clients and in WebForms with ASP.NET, and I was surprised to not see more time spent discussing the importance of understanding .NET's data caching facilities.  However, it still doesn't take away the fact that this is an excellent book...and one that any .NET developer should definitely get for her library.	2003-01-12
US	48475902	RKFAKDQ7QLJ7U	0764548298	231763677	XML Web Services with ASP.NET	Books	4	6	6	N	N	Great for developers of all levels	Any book on ASP.NET will mention Web services development, but \\"XML Web Services for ASP.NET\\" is an entire book dedicated to explaining all of the different sub-areas within the technology platform.  And very well done.  It's written by everyone's friend in .NET, Bill Evjen, one of the most outspoken advocates of .NET technology around.<br />The book is outstanding and takes an in-depth look at XML Web services, and Microsoft's specific implementation of the paradigm.  All of the major considerations are explained well and adequately to become productive in developing your own library of Web services, or by extending the functionality of your applications.<br />The book's tone is very friendly, and non-intimidating, so it's a very easy, quick read.  Bill also uses lots of practical analogies to make the more complex topics relevant, so it's an added bonus that this book appeals to the beginning as well as the seasoned developer.<br />Bill discusses areas critical to a thorough understanding of WS technology using .NET such as SOAP, UDDI, remoting, security, authentication, performance, and client development for calling an XML Web service from an ASP.NET WebForm or Windows Form, VB 6.0 app, or an ASP 3.0 Web page.  The book also features some really good appendices, especially those on .NET's Web service classes, and an XSD primer for schema development. <br />The book is not about ASP.NET development, and so providing the reader has some experience with building third-generation Web applications, gets right to the meaty stuff.  The chapters are short and to the point, and Bill's overview of ADO.NET is one of the better ones I've read in recent times.  The most outstanding thing to me is that Bill liberally uses real-world code samples, with all code presented in both Visual Basic .NET and C#.  Snafus in the code are very minimal, and I know form personal experience that good ol' Bill is extremely available and answers all his e-mail...about anything.<br />However,the book's printed code samples (I haven't checked the downloadable source code from the publisher) tend to reflect code generated from Visual Studio .NET, which in my opinion become confusing and therefore more difficult to replicate in an IDE environment like Dreamweaver MX or ASP.NET Web Matrix or non-IDE environment like Notepad due to all of the proprietary code VS.NET generates, and in doing so, using code behind.  It's been my experience that it's easier to go the other way - provide the raw code and leave it up to the developer to implement in whatever means they see fit.<br />Another thing I did not care for (some of you may agree, I'm assuming most may not) was the physiology of the book itself, which was beyond the author's reasonable control.  The binding is very flimsy and the spine breaks without much trouble.  The paper isn't very durable, and doesn't lay flat for very long.  I hope Wiley Publishing take into consideration that books of this nature get used &amp; abused for their content more than most, and consider making corrections in the book's composition to make them last longer.<br />But beyond this, the book is a must-have for a user group as it's cross-language, multi-developmental platform, multi-subject appeal make it applicable to many different levels of developers, and is great for team environments.	2002-10-04
US	48475902	R1MZZ2S7KIORBW	1861005946	943202478	Beginning XSLT	Books	5	18	21	N	N	If you ever buy 1 bookon XSLT, make it this one	I've found \\"Beginning XSLT\\" by Jeni Tennison ...to be one of the best overall books on Web development to come out in recent times.  I've always wanted a book covering in-depth examples of XSLT (eXtensible Stylesheet Language Transformations), as I've so often grown sick and tired of the mere 30 or less pages my XML books dedicate to the subject.   XSLT is quite easy to learn, it's just traditionally been hard to find enough information on the subject all in the same place.<br />Published in May 2002, the examples use the latest XSLT W3C recommendation, so it's current and set to go...  Much thanks to the folks at Wrox for putting this one together.  <br />Written in a manner that is both educational and entertaining, Jeni presents the reader with a simple theme everyone's familiar with - a television schedule listing consisting of XML-based data.  She proceeds to describe how XSLT can be used to quickly render XML into effective hypertext documents for dynamic presentation.<br />While the Web development community is normally torn on this approach, with some devs preferring a more wider range of examples, with others favoring the application of a specific technology towards a single concept, (I'll admit that I'm normally one of the former), Tennison's use of the example is easy to grasp and far-reaching.   She lays out the example and then proceeds to construct it.  And doing so along with her is quite cool. <br />The book features excellent descriptions of how a developer can work with result sets, use XSLT functions, keys/grouping, escaping and working with CDATA, using variables and parameters, recursion, and one of the best introductory discussions of XPath in print.  The book is also completed by two very healthy appendices that serve as quick references guides on XSLT and XPath.  The major platforms supporting XSLT and their parsers are described and contrasted in-depth, including MSXML3, Saxon, Xalan, SAX, etc.<br />Tennison takes the point-of-view of a best-practices approach, preaching performance and thoughtful, intuitive design over mere pushing of data to be spit out.  She structures her discussion in such a way that makes it easy for the experienced programmer to quickly pickup XSLT for their projects, but in doing so remaining within the grasp of the novice to learn a powerful new tool.<br />The only criticism I have about the book is that due to the ongoing example of the TV guide, it makes the book somewhat difficult to pickup in mid-project, as frequent reference is made to examples laid out in earlier chapters.  One must usually go through the examples from the beginning to really get it.<br />But this book's positive aspects far outweigh the negative, and the latter is only a personal situation I ran into...  the book is a steal considering everything you and your development team will get out of it.	2002-10-04
US	48475902	R3GHR7BRYJHIOO	0735711690	21716906	PHP Programming for Windows (Landmark (New Riders))	Books	4	2	2	N	N	A good way to use your existing MS infrastructure with PHP	I just had the pleasure of reading New Riders' \\"PHP Programming for Windows\\" by Andrew Stopford.  This book is excellent, and despite what the title may imply is actually geared towards both PHP and ASP developers, not trying to detract you from migrating away from a Microsoft-centric infrastructure (i.e., Windows 2000/XP, SQL Server, ASP, .NET, etc).  Rather, it lends a helping hand for developers needing to cross-integrate a project with an existing infrastructure, with an emphasis on performance.  You can take your existing ASP knowledge and extend it, even if only for the moment.<br />As such, the book offers a quick run-though of the structure of PHP as a developmental platform and gives a brief introduction into PHP programming.  Admittedly, some experience with PHP or having read another book on learning how to program with PHP is helpful if one is to get the most out of this book; but if you're only looking to use PHP in an integration project, you'll learn enough to get by.<br />The book is concise and to the point, being a quick 294 pages long.  It's a fast read, and well worth it.  The book's content is up-to-date, providing discussions about integrating PHP with .NET, as well as with Windows DNA architectures.<br />The book's tone is written in such a way as to provide an academic, historical perspective on the evolution of PHP in the world of dynamic Web development, and defends against the popular and important theory that PHP has no place in the Web services arena, as most open-source communities tend to be disenfranchised when a new paradigm comes about.  You can still create XML Web services using Microsoft technologies, and call them via PHP scripts, and an excellent discussion of using PHP to call remote/local COM objects within the scope of a Microsoft platform to create powerful XML Web services is presented.<br />The most significant discussions I found were the chapters on using PHP with Windows servers, using PHP to call COM objects, data access using SQL Server, Oracle, and MySQL back-ends, XML management, and how to work with Active Directory.  But the biggest value for me was on a healthy discussion of sharing session information with ASP 3.0 and ASP.NET Web apps through Web-distributed data exchange (WDDX).  Really cool stuff.<br />However, like many New Riders titles, some additional proofreading could have been helpful.  The code was a bit buggy in some places, and there were sporadic, yet annoying writing snafus.<br />But the benefits far outweigh the shortcomings, of which there are very few.  In short, if you're a Microsoft developer, and know a little bit about PHP already (or have a couple of days to spend practicing), this book will take you a long way.	2002-08-29
US	48475902	R3ETO0J7LLAL7Q	1861006934	501906989	ASP.NET Website Programming: Problem - Design - Solution  C# Edition	Books	5	55	57	N	N	An outstanding work...well-written, very helpful	ASP.NET Website Programming - Problem, Design, Solution <BR>by Wrox Press <br /> <br />OVERALL ASSESSMENT<BR>I had the pleasure of reading through this book over the course of a week, and I really let it sink it.  I was very impressed with this work.  This is a great book that the intermediate-to-advanced .NET developer should get their hands on.  It's very well thought-out and the lessons are plainly stated, and easy to follow.<br /> <br />Authors Marco Bellinaso and Kevin Hoffmann describe a fictional content-based site that provides information for DVD and book enthusiasts, THEPHILE.COM.  The book is essentially a long-form case study, diving into the architecture, infrastructure, and engineering behind an online publishing system.  <br /> <br />The book takes a very honest approach and enforces a disciplined, structured methodology to writing an extremely practical (and cool!) n-tier Web app.  The book also dives briefly into extending a few of THEPHILE.COM's various applications as desktop applications, which is a nice addition to make for a more well-rounded title.<br /> <br />You'll need a solid understanding of the .NET Framework, specifically ASP.NET, C#, and ADO.NET  if you're to get the most out of this book, as it's definitely not for beginners.  But it's a no-nonsense, well-prepared look at leveraging .NET Web technologies to your advantage.<br /> <br />There have been several books written to date profiling the design of an enterprise-level solution, like Sams' excellent \\"Building e-Commerce Sites with the .NET Framework.\\"  To cater to the masses, these books present a hypothetical business model, usually based around an e-commerce framework, and feature applications like shopping carts, inventory management utilities, etc.  There really haven't been a whole lot of title that deal with simply-yet-prolific Web features like mass e-mail list managers, advertising engines, user polls, and article management - apps that are common to high-traffic Web sites.<br /> <br />On a personal level, I'm in charge of running several news-oriented Web sites, so on a personal level this book had more direct appeal to me, demonstrating how one could implement .NET technologies in efficiently managing content and interactives.<br />This is a very worthwhile buy (although Wrox apparently doesn't differentiate book length with book price, it being the typical US$59.95), and a great addition to your library.  You'll read this one more than once for inspiration on your own projects.<br />WHAT I LIKE ABOUT THE BOOK<br />The approach to designing the app is very intuitive - from promoting code reuse, object inheritance, modular component design in XML files, intelligent administration files, and much more.  The end result is a big app that performs great and is largely self-sustaining. <BR>The authors were very honest.  This is most notable in their revelation that they didn't care much for the dragging-and-dropping DataAdapters within Visual Studio .NET, which leads to cumbersome code and a loss of control, preferring to code it themselves.  I thought I was the only one.  They also write THEPHILE.COM as if it were to be served on a commercial Web hosting service, which is a nice break from the assumption that we're all running massive data centers completely under our control in our offices. <BR>The authors prominently cite Visual Studio .NET as their tool of choice for coding THEPHILE.COM, but don't neglect the text editor crowd, and present their work in a neutral way that doesn't alienate those choosing to stick to NotePad.  This is a big advantage. <BR>A best practices approach to enterprise application design is exhibited throughout the book...and this is something the reader will pick up on, using a consistent method that promotes code reuse, componentization, interchangeability, separation of code from content, and modularity.  I particularly liked Marco and Kevin's description of the design of their data access tier for their poll feature. <br />The book is succinct, to the point, and beautifully written.  Unlike Wrox titles in years past, the book is a very easy 518 pages (12 chapters, no appendices). <BR>Although written 100% in C#, the code is quite easily transferable to VB.NET, for those interested. <BR>Is it just me...or has Wrox changed the binding on its books?  While Wrox titles (at least in my library) have been the first to contract Broken Book Spine Syndrome, the front and back covers seemed more durable, and the book held very well.  Which was a much-welcome change, I assure you.  And this just isn't because this is a shorter title from Wrox...their entire .NET v1.0 line seems to be better built. <BR>The code download is well-documented, and both Marco and Kevin make themselves very accessible for feedback and help. <BR>  <BR>WHAT I FEEL NEEDS IMPROVEMENT<br />Although it's obvious in the book community that having documentation for the two major .NET languages in a single title (Visual Basic .NET and C#) is a tall order to fill (and most often doubles the size of a book), the fact that the book is exclusively in C# may detract some of those developers partial to VB.NET from partaking of what is a really good book.  Perhaps the good folks at Wrox are considering releasing a VB.NET version? <BR>THEPHIILE.COM at the time of this writing doesn't exist on the Web...which was a minor downer.  I was hoping to see the app running full-speed prior to trying the code out for myself, in the vein of the IBuySpy and ColdRooster demo projects. <BR>While it's unconscionable that each and every line of code would be put on paper, the book highlights some of the more notable code constructs.	2002-05-19
US	48475902	RIVSHE43MYXNE	1930110197	725923053	Microsoft .Net for Programmers	Books	5	16	17	N	N	Well-written with a great, pracitcal example	OVERALL ASSESSMENT<BR>This book is aptly named. Not for the beginner, but for the experienced programmer seeking a deeper understanding of .NET development and practical examples of distributed computing, I found this book to be very helpful, very succinct, and very entertaining. Contrary to some of the other titles on the market, Grimes doesn't try to pad the book with 28 chapters, the first 20 of them being the obligatory content explaining the role and function of .NET, what XML, SOAP, and UDDI are, and a primer in coding, and only briefly getting into the core purpose of the book. It gets right into the tough stuff. Grimes instead gives a higher-level viewpoint of programming with .NET, explaining advanced concepts like .NET's garbage collection methodology, memory management, and applications architecture planning, from a best-practices approach. <br />Grimes bases his book's existence on an example that spans the entire text - building a poker game app. Throughout the text, Grimes constructs and expands upon a concept that is simple enough to be relative to everyone yet complex to be an effective lesson in distributed app design. He abstracts this app out to 11 different versions all calling the same app, including a Windows version, a Web-based version, a message queue, a console version accessible through UNIX telnet commands, a mobile version and an XML Web service, which is a great lesson in showing the ease with which .NET developers may create powerful distributed applications.<br />It's beautifully written, well-proofread, and quite comprehensive for only 288 pages (not counting the excellent appendices dealing with an Introduction to C#, and detailed source code for the examples). It's a great addition to the reference library of the advanced programmer, or the intermediate developer looking to take their game to the next level. <br />In short, it's a very disciplined, structured approach to working with .NET.<br />WHAT I DO LIKE<br /> - The use of graphics is excellent - easy to follow and nicely arranged. <BR>Well documented advanced .NET concepts such as the object-oriented use of delegates, serialization techniques through XML, and separation of code and content in ASP.NET will be appreciated by the experienced developer. <BR> - The use of the poker game app as a case study was very entertaining and very educational. Unlike other books that try to give case studies focusing on the development of applications from varying industries (i.e., a news center publishing application, a site's statistics tracker, a classroom monitoring app for educators), which tends to disenfranchise many developers not familiar with the precise working conditions of the specific industry, Grimes' poker example is something relevant to 9 out of 10 readers, and fun!  <BR> - The app is simplistic enough to show some of the more fundamental necessities, yet complex in its design, dealing with a wide range of probabilities. And you'll enjoy playing it almost as much as you will building it. <BR> - The option to have the text as an eBook is great (and cheaper) for people who prefer to spend even more time on their computers than they already do....This book would be nearly perfect if it appealed to Visual Basic.NET programmers, which it sadly doesn't. The exclusive use of C# as the book's programming language ...Merely translating over the code to VB.NET isn't easy, as the book uses some of the more advanced OOP principles.	2002-03-09
US	48475902	R2AFMTNHKWM0WZ	0672320398	945292031	XML for ASP.NET Developers	Books	5	28	30	N	Y	A must have for the experience ASP.NET developer	If I were to analogize this book, it would be something in the vein of \\"Dan Wahlin's `Ferrari'\\".  This assessment implies that the author has crafted a fast, powerful, much sought-after reference to those of us who appreciate the finer things in life (at least in terms of Web development).  This was actually the fourth book I read about .NET, having picked it up just shortly after its release in September of 2001.  It's a great piece of work, and a must have for the experienced developer looking to take his or her game to the next level.  I've found the book to be extremely well written, both grammatically as well as syntactically in the code examples provided.<br />I'm President of an ASP.NET User Group, and this title is on my \\"Must Buy\\" list for books to get.<br />The book is admittedly smaller than most .NET texts at a \\"mere\\" 496 total pages, but don't let the size fool you - it's chock full of helpful stuff.  And it's not for the faint of heart - it's hardcore.  Dan whets the appetite of the seasoned developer by providing a general discussion about (1) what's possible with XML, (2) how the .NET Framework fits into the picture, and (3) how to do it.  This isn't some tutorial for the beginning programmer looking to tackle .NET development and XML at the same time, nor is it for those just looking to find some cool code to instantly plug into their Web projects - the book is best used as a starting block for the experienced developer looking to build robust e-business systems.  Hence the title, it's geared specifically for developers looking to expand their skill set or upscale their existing apps to a more manageable and portable form.<br />This is a true book written for developers, by a developer.  Plain and simple.<br />While the first few chapters of the book give an excellent primer to XML, validation through DTDs/XDR schema, XPath, XPointer and XLink, XSL/XSLT, XHTML, SAX integration, and navigating and programming the DOM, Dan kicks into high gear full speed and blazes into full on apps development.  His explanation of the relationship between XPath and XPointer is in my opinion of the better explanations, from any XML text.  He also spends much time with managing XML data into and out of databases in his chapters on ADO.NET's XML capabilities and incorporating SQL Server 2000.  <br />More than 1.5 years in the making, the various examples are current with the .NET Framework Beta 2, so barring any major dramatic syntactical changes in the final release of .NET (which at this point is highly unlikely), the book will be relevant for some time, not to be run obsolete in 6 months.  <br />However, a slight concern of mine is the use of C# throughout the book, making it rather alienated in terms of audience.   The examples may prove a bit more challenging for the developer choosing to code exclusively in Visual Basic.NET.   To truly maximize effectiveness of this book, the reader should possess:<BR>Ø An intermediate-level familiarity with programming within the .NET Framework (Beta 2)<BR>Ø Experience in programming with C# (and/or a background in Java, and/or a background in C++)<BR>Ø Some experience in XML, XSL, and schema<br />Speaking as someone who is constantly try to evangelize the use of XML to the masses in my own right, Dan preaches a very convincing sermon.<br />When you're ready for the next evolution in your .NET career...make sure to check it out.<br />WHAT I LIKE IN PARTICULAR:  <BR>Ø The proofreading is excellent - I've gone through it three times, and I found it to be nearly flawless in terms of editorial snafus.  <BR>Ø Dan demonstrates some very advanced, very practical, very cool examples.  He proposes the development of numerous apps that will truly harness the power of XML and .NET.<BR>Ø In addition to the source code from the Sams Web site, Dan's companion site, [...] is one of the best examples out there for being a living extension to his text by way of providing practical demonstrations.   Dan also considerately included the files as a Visual Studio.NET project, so that examples appeal to both those who would prefer the IDE/WYSIWYG approach, as well as the hardcore Notepad coders.  However with all code examples being written in C#, having each listing available in VB.NET (if not within the text itself) would have been icing on the cake.<BR>Ø Basic .NET error trapping and handling are presented throughout the examples, with liberal uses of the TRY...CATCH...FINALLY construct are used.  This indirectly teaches a more refined, disciplined way to write .NET code. <BR>Ø A near complete list or properties, methods, and attributes is well represented...which is hard to find in many .NET texts...largely only including those features that authors chose to use in their own examples.  The explanations of the use of the various namespaces associated with the .NET Framework is also very well explained and documented.<BR>Ø Dan has written some of the coolest, most practical Web services I've seen yet, exhibiting what's truly possible and on the new frontier for programming with the .NET Framework.<BR>Ø Dan is also very active in several online ASP and ASP.NET forums and in real life training, and is quick to help with questions about his book, or with XML integration.  He makes himself very accessible to questions or comments about the integration of XML.  This again is a very welcome value-added extension to the book.	2001-12-08
US	48475902	RCJIE3HEGSBRA	0672321068	857502930	Programming Data-Driven Web Applications with ASP.NET	Books	5	36	38	N	Y	THE book to buy after learning basic .NET programming	Doug and Donny are the most plainclothes writers out there on the market today???and I mean this with the most sincere of praise.  Each possesses an uncanny knack for explaining the most complex of technical topics in an easy-to-follow manner, appealing to the newbie or otherwise non-expert reader.  And they consistently manage to do this while not alienating the advanced developer audience at the same time.  Throughout this book, their genius is on display.  <br />I???m President of an ASP.NET User Group, and this title is on my ???Must Have??? list for books to get.<br />This should be THE book you buy after going through an initial title for an introduction into .NET programming, as it will pay for itself many times over in your usage.  I???ve heard people discount the book???s concept because they unfairly felt it was just literary regurgitation of every other .NET title???s chapter(s) on using ADO.NET to perform data access, stretched out into an entire book.   Nothing could be further from the truth.  The book offers so much more into getting past simple code constructs and really optimizing the management of your data.  Through this concept, the reader gains a greater understanding of the .NET Framework.  <br />Doug and Donny???s use of product knowledge, humor, and real-world applicability is equally enticing, educational, and entertaining.  While the book is by its nature top-heavy in ASP.NET data access concepts, it also tackles some of other common concerns, like working with BLOBs, XML, data caching, authentication, and validation.  Such is not commonly found in many traditional data access texts, and is a very welcome value-added change.<br />Through a combination of timely documentation, ample exhibits, and well laid out chapters, the reader will learn the obvious data access principles, but also so much more (such as indirectly absorbing a more refined, disciplined way to write .NET code), just from the fact that the book is extremely well written.  More than 7 months in the making, the various examples are current to be 100% compatible with Beta 2 of the .NET Framework, so barring any major dramatic syntactical changes in the final release of .NET (which at this point is highly unlikely), the book will be relevant for some time, not to be run obsolete in 6 months.  <br />The book is a wealth of great information, presented beautifully, but also succinctly and without 35 pages of traditional computer science theory and historical data behind coding concepts.  They get to the point, state their case, and move on to the next thing.  It???s a very effective read. <br />WHAT I DO LIKE IN PARTICULAR:  <BR>?? All code examples are written in both Visual Basic.NET and C#.  This is a critical element to this book???s success.<BR>?? There is a LOT of code with many different examples.<BR>?? Although catering to a much wider range of .NET topics, the associated Web site (...) is an excellent companion to the book.<BR>?? Doug and Donny don???t forget to make the pages sing with style.  Many ASP.NET books will include enough code to get you going with the functional aspects of designing Web Forms, but the authors??? examples work great???and look great.  Simple aesthetic alterations to the resultant pages are a nice addition to those of us who cringe when we see Times New Roman on anything online.  They fortunately didn???t neglect the fact that pages should look good, too, which is attractive to traditional Web designers!<BR>?? A wealth of associated namespaces, methods, properties, and attributes are listed in a very healthy appendix section; this is contrary to most .NET books tendency to just list the methods that they felt were important, as per their examples.  The back section of the book makes for a great reference companion.<BR>?? Newer programmers to the .NET Framework will come to appreciate (whether they realize it or not) the coding discipline indirectly enforced throughout the book, like prefixing variables, using TRY???CATCH???FINALLY constructs, and properly indented code.<BR>?? The fact that this is a high-end data access book doesn???t rule out the little guy.  An equal amount of much attention is given to Access, Oracle and all other OLEDB application users as is to those of SQL Server.  Thus, the book is naturally relevant to a broader audience.<BR>?? Even thought the authors cleanly state their own preferences when performing certain operations, they make reference to and show examples of the different ways something can be coded.<BR>?? The XML Web service absolutely rocks.  In nearly all .NET books ??? especially those that came out in the early months of Beta 2???s mass distribution, Web services were arguably the key chapter wrapping up all previous discussions about .NET programming???but then contained simple, weak, basic math-type of ???software as a service??? applications.  Not here.  ???The Big Cheese??? is ultra cool.<BR>?? The examples are very fun to work with, and very practical.  I rarely stop while reading a book to try out a coding example, opting to do it later???but I found myself ceasing my reading to write simple data access pages and Web forms because it was so cool.  (Case in point: the custom paging solution)<br />WHAT I HAVE CONCERNS ABOUT:<BR>?? It???s immediately apparent from even reading a few chapters that Doug and Donny each have their own writing style, which is great.  Unfortunately, this translates to writing code, as well.  One???s style is very structured, disciplined, and organized, with all VB.NET syntax properly indented, capitalized (even though not necessary); while the other tends to be a bit more relaxed in his syntactical style.  Having a uniform way of presenting the examples would be more reinforcing for the learning, I think.	2001-12-08
US	48475902	RL6PJPRQQFHFL	0735711356	99019569	Inside ASP.NET	Books	4	3	3	N	N	A great desk-side companion for the experienced dev	Overall, this is a very fine book, and very deserving of its name.  Being targeted at the experienced developer, its focus is not regurgitation of coding principles involved in building .NET-based applications, but rather takes an overall look at the operations and ways of manipulating, managing and presenting data for a better understanding of the .NET Framework as a whole.  The ordering of the chapters is a bit unorthodox from the norm with what other .NET titles follow, but it is of value to the developer in being both a quick reference, and a practical guide.  The logical flow of the book deviates from what many other titles go with.<br />The chapters are explained well and are succinct, not verbose over-amplifications of what should be simple concepts.  The reader can get what he wants and move on.  I was able to read easily and quickly.  Each major property, method, and parameter or major objects is listed in tabular format, which is great for future lookups when I need a bit of code.  (The code is all in VB.NET, with C# to be included with the online documentation. ...) <br />The chapters on MSMQ, ADSI, and state management support/integration were explained better and in more general detail than most books, in very simple to understand dialogue.  In my experience, this is the section that throws most people off...or that they wind up skipping because no matter how good the ability of the author to analogize the concepts, they get lost in the complexity of it all.  Worley did an excellent job describing why such features are of use to the developer, and although admittedly not diving into each technology in gross detail, but quickly enough to get a developer started.<br />On the whole, I enjoyed the writing, had fun with the experience and was pleased with the outcome.  The lack of proofreading leaves a bad taste in my mouth, but overall I'd say this was a success.<br />I would recommend this book as an excellent addition to an ASP.NET developer's library.  Hopefully the 2nd edition will patch and suture the bleeding left by the editorial mistakes.<br />Some additional comments:<br />Ø The book did a better job than most explaining the importance of .NET's configuration and state management features, using global.asax and web.config.<BR>Ø Properties and methods of major objects and namespaces within the .NET Framework are laid out in tabular format, making for an easy-to-read and very quick, searchable listing, not forcing the read to go sifting through pages of editorial rhetoric just to get a bit of syntax.   Too many books lose sight of the fact that people want to know as many method and properties as they can, and the authors too quickly refer to the \\"consult the Microsoft documentation\\" excuse.  Worley also compiled a very useful listing of Appendices Many books do not go to the length of listing all of the given properties and methods for an object, but this is a great job of providing this for the reader.<BR>Ø The physical dimensions and paper used for the book make it easy to hold and read (an important factor to me, typically lying the book on my stomach...I've nearly broken ribs with other publisher titles).  The fact that the book is uses a softbound-yet-sturdy binding and cover makes this durable and rugged...this is a good thing in my mind, and something to capitalize on.	2001-11-24
US	48475902	R25NJ2LVKXMNG8	1861004885	922338141	Professional ASP.NET	Books	5	7	9	N	Y	A fantastic book...but very advanced	I veyr much enjoyed this fine text.  Much like the .NET Framework, the book's focus is on applications development for the Web, so a lot in the vein of classical software engineering takes place...which the authors note may confuse current ASP devs skilled largely in VBScript.  And yes, there are few working examples which can be &quot;plugged in&quot; to sites, but that's the point.<br />The emphasis here is on describing the .NET Framework for what it is...a developmental blueprint...not to provide a bunch of predetermined samples to plug into your own site.  There's where the application of the coding concepts comes into place.  I would also recommend Sams' &quot;Teach Yourself ASP.NET in 21 Days&quot; as a primer for the less-experienced programmers...such as current ASP devs or non-coders.<br />On that level, in contrast to other &quot;Beginning...&quot; series books by Wrox, the text assumes a fluency in HTML enough that most of the samples aren't fully coded out...only the important subroutines, functions, and ASP.NET server controls that call them.  So this definetly isn't for the beginner who would like the entire thing explained from line 1 to line N.  A fair degree of expertise is assumed.<br />I did like how the book covered C# adequately (something the aforementioned Sams text sorely left out), and mirrored the majority of the coding constructs in VB.NET with C# and JScript.NET likenesses.  You'll come away with a succint knowledge of all 3 langauges...enough to get you started.<br />All in all, a fantastic job....a real challenge...but well worth it!	2001-10-04
US	48475902	R2MBD0KUQ9Z7HY	0672321688	282408480	Sams Teach Yourself ASP.NET in 21 Days	Books	4	7	8	N	Y	A great primer for the newbie...experienced devs may sift...	The book is a great piece of work...a very good look at what ASP.NET can do for devs. The examples are very basic and are layed out nicely.  The methods are taught in ways which are beneficial to both newbies to ASP 2.0+/ASP.NET, and as well for experienced developers.<br />However, I would have wished that the authors spent more time on the topic of C#.  Most of the examples in the book were carried out in VB.NET...which is logical, since this is expected to be the dominant method of coding...but the so-called &quot;chapter&quot; on C# merely introduces the language, briefly states it s relationship and purpose in the .NET Framework, and then gives a very basic syntactical outline of how to write C# code (which, if you are familiar with Java/JavaScript, won't leave too much of an impression).<br />Otherwise, the book is great, and it's one of the better ones out there.  A must-read if you're just starting out in taking your Web projects to the next level.	2001-08-31
