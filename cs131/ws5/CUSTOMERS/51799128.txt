US	51799128	R26HPOBP0GKMIY	0131499947	429196760	Java Studio Creator Development Pack: Field Guide and Creator Software Package	Books	2	0	7	N	Y	Got the OS X Part	This package is a lot like that ice cream you get at the super market that looks great in the case and then you eat like half the carton before you realize you are being tantalized by something that has been ruthlessly pumped full of air. There are many things in this book that offensively wrong (like encouraging people to use System.out.println). On the whole, this is aimed squarely at the santa's elves market of would-be Java VBers.	2004-12-18
US	51799128	RJZIYB42T8K7L	0974514004	372992703	Pragmatic Version Control Using CVS	Books	3	19	34	N	Y	A Reviewer Who is NOT a Member of the Author's Poker Pals	Not sure what I'm missing. These books are thin in more than the physical way. This one has a few decent ideas. Actually, my big beefs with this book are:<br /><br />1. Most of this information is just freely available. Look at this as a search prevention mechanism.<br /><br />2. If you use a tool with great CVS support (like Eclipse 3), literally 2/3 of the book is completely superfluous.<br /><br />3. If you don't use a tool w/great support, get that for free, not this, you'll end up much farther down the road.<br /><br />Why not put ideas into a book like this? For instance, Vincent Massol's recent article about automating a process of publishing diffs to keep people up to date. Or looking at some of the many interesting OS addons like CVSList. This is literally just one more book that sells you something you already have ready access to.	2004-12-18
US	51799128	R283QR3F3EG40N	159059388X	746544291	Holub on Patterns: Learning Design Patterns by Looking at Code (Books for Professionals by Professionals)	Books	5	9	11	N	Y	Saint Allen or Programming's Travis Bickle?	It's not surprising the ecumenical reactions here; the statements on the jacket sound like Lutherian proclamations. But one of the great things about Allen's stuff is that the message is in the medium: even if you don't go in for every inch of his list of 'evil' things, watching him take things apart is what is compelling. The statements he makes about how every self-respecting programmer should have the Gang of Four committed to memory and know how they interlock is totally true, and having hired and worked with a lot of programmers in the last few years, it is sad how few of them have a good grip even on a couple of the patterns.<br /><br />That said, the examples here are mixed. The Game of Life was a curious choice. The SQL interpreter was a good idea. Many people will crack this book and think 'I'm never going to write a little language,' but in fact, interpreter is cropping up all over the place these days (as the metadata portion of the coding corpus continues to grow). I also really like this edition: the diagrams are fantastically concise and well-integrated into the text.<br /><br />Contrary to some of the other claims here, many have tried to do this from Mark Grand (a good 4 years ago), through the slew of books in the last two years proclaiming catalogs. This one makes those look like tinkertoys.<br /><br />Finally, another book that came out recently, Refactoring to Patterns takes a great line. Sometimes, Allen's world is a tad too clean for me. Most of the world is filled with dirt. And in fact it is a good thing to learn how to work your way into pattern implementations. Rarely do you start, for instance, with Visitor. Unfortunately, that book is a tad thin. The best work I've ever seen in that direction is the Cook's Tour of JUnit by Kent Beck and Erich Gamma which is a short article about how JUnit evolved (starting w/one or two patterns, growing to something crazy, then actually pruning a few).<br /><br />Anyway, this is really well done all around.ll around.	2004-12-17
US	51799128	R2ZY36WF2FLEQH	1932394125	303952962	JavaServer Faces in Action (In Action series)	Books	4	22	30	N	N	Lot of Good Stuff, No Bible	Ok, I've had this book on early e-release from Manning since the first couple chapters were done. If you are going to get one book on JSF, this ain't the one to choose (get Core JSF by Geary and Horstmann). However, there are some really good things in this book. For instance, the custom controls examples in Core are ok, but they consist of a spinner straight to a huge tabbed pane thing (that they should have spent more time making look good). This book has an example of doing a custom component for entering dates from dropdowns which is more immediately useful than any of the other things I've seen out there for a number of reasons: binding to objects, handling a type (Date) using multiple components. (That said, the code is kind of funny in that it is very thorough in some ways and lacking in some nutty ways, for instance, if you want to present a field for a user to put a date into, it will set the dropdowns to today's date (even though the field is null); changing this behavior to having blank dates for nulls is kind of a nuisance (though a good exercise).<br /><br />Wonder what the editors were thinking w/this book: if you look at the table of contents (and you have any exp at all w/JSF), you will notice that there is no real effort to be at all comprehensive. If you search in the book, many core terms and concepts don't even appear anywhere in the text.<br /><br />One final note: I didn't think it could happen, but I actually am starting to prefer the PDF versions of these books. Makes searching a snap and if you have a decent size monitor, it's easy reading.<br /><br />Reprise: I've changed my mind about this book. There is a lot more in here than there was in the preview. And I've come to appreciate some of the things this has that Core is not so great on. Still deserves a 4 though because of some of the other comments and the fact that some of the code really should be better; the dates custom control is kind of a mess: methods w/5 or 6 params, sloppy genericity that should have just been done as classes (even inner ones).ust been done as classes (even inner ones).	2004-11-14
US	51799128	R1XPFL6JFG5H91	193239415X	87596760	Hibernate in Action (In Action series)	Books	5	17	31	N	N	Great Book	Well, I agree with a lot of what the prior reviewer states (in perhaps fewer words). Hibernate is hopefully going to make other would-be OS standards bearers heed the new reality: to forge a serious following, the ol' 'figure-it-out-yourself, I've-no-time-to-document' will no longer suffice. Consider the fact that there are so many other also rans in this category and the emergence of Hibernate is quite astonishing. This book is only going to catalyze its dominance further. Interestingly, the other part of this instructive example in the importance of documentation has a kind of negative side to it: I got the source and debugged into it on a couple of occasions and it was horrendous. But I've read that it is being refactored and many people are contributing to even rewriting major portions. So maybe it is important to get the function right first because in the OS world, if you do, there will be converts to help solidify the form.<br /><br />This book does read very well. If you get the PDF version directly from Manning you can also search it quite easily. When Hibernate is used in conjunction with the Eclipse plugin Hibernate Synchronizer, persistence layer drudgery is reduced by orders of magnitude. This is a great example of how the OS process can solve problems that have vexed the collectively billionaire mass of vendors in this space.	2004-09-18
US	51799128	R3JRJ0O1Q332HF	0131463055	726610415	Core JavaServer Faces	Books	5	58	61	N	N	Perfect Cure for Misunderstood New Standard	Struts spread like wildfire in part due to the fact that it was simple. JSF is very ambitious and defies a very simple explanation followed by a bugle blast to commence hacking. Nevermind the history of designing circuits, in software, generally the complex APIs don't get a following until a great book ships (e.g. Petzold, Roman's book on EJB, etc.). This is that book for JSF, and it is just on time. I would also like to differ with the opinion about the book being awkward because it makes you do things by hand that will soon be automated. That is a small part of the book, and doing by hand those early things helps immensely to understand the bigger picture (e.g. custom components, web services, etc.).<br /><br />The reasons this book deserves a 5:<br /><br />1. Its score for comprehensiveness alongside similar offerings is orders of magnitude higher.<br /><br />2. Tool support for web dev is unfortunately still in its infancy for Java. The webtools project in eclipse just dropped its first version of a JSP editor for bloomin' sakes. That puts more pressure on the writers to have to painstakingly describe setup and configuration issues. They do an excellent job.<br /><br />3. The examples are very good and get worked from different angles to great effect.<br /><br />4. There are many useful diagrams as well, for example of the processing flow, which is crucial to understanding what the framework is doing for you. I had a case where I was debugging a problem and the error message looked spurious until I consulted the flow and saw that it was repopulating the page automatically.<br /><br />JSF is not perfect, but this book shows that guidance can make all the difference in pain of adoption.	2004-09-10
US	51799128	R86AOTAMQ0IEY	1579651143	910446129	Hot Sour Salty Sweet: A Culinary Journey Through Southeast Asia	Books	5	16	19	N	Y	Glowing Ember	I too have stacks of cookbooks and this is definitely one of the best. A few points:<br /><br />Unless you live in one of the 3 or 4 biggest cities, this food is going to look like it is from Mars (nay, even most the people in Los Angeles, arguably the best city in the world for sheer depth and breadth of ethnic food, would probably find that this book is completely outside their realm of experience). And amazingly, it doesn't really fit into one neat little bucket; following the Mekong River, this book hits on 5 distinct cuisines:<br /><br />1. Vietnamese<br /><br />2. Laotian<br /><br />3. Cambodian<br /><br />4. Northern Thai (Esaan)<br /><br />5. Islamic Chinese<br /><br />Even in Los Angeles, it is almost impossible to find Esaan food, which is quite different from the Royal Thai cuisine that the country has fallen in love with. Vietnamese is an amazing cuisine that seems to be spreading significantly (if with more emphasis on rice noodle bowls than tendon soup).<br /><br />If you are interested in the history of food, this is also a fascinating tract. In the West, the history has two phases: before and after ready access to salt, the prior phase being dominated by what are called 'masking spices' (some of which came from the east) and then the whole history of integral sauce making afterward. One of the big points made in this book is that in the East, the focus is on the balance of flavors (see title), and, most importantly, the final targeting is done by the consumer (whereas in the West, spicing a dish from a gourmet restaurant is an act of sedition). Not to indict either one: take a lesson from the book: celebrate the differences.	2004-07-20
US	51799128	RMSTTJV95AOST	0201895420	958368632	Analysis Patterns: Reusable Object Models	Books	5	1	1	N	N	Truly Unique, Extremely Valuable Entry	Kind of funny, reading the reviews here makes it clear that this book is something of a sleeper, it has not gotten the exposure that a lot of the other pillars of the pattern community have. I think the reason is that people may glance at it and think that it is too domain-specific. In fact, this book does a lot of great things, it is a meditation on some crucial OO modeling issues.<br />The first problem Fowler broaches is a patient's weight and he states, correctly I'm sure, that most programmers would just make weight a class property and make it be of type integer. But there are problems with that approach. First one is the issue of units. If you make it an int you are assuming that it is just a count of pounds. What happens if you want another measure? Furthermore, what happens when someone asks where the patient's weight has gone in the last month.<br />From this point of departure, many issues are taken up. For people who have grappled with OLAP before and know something about dimensional models, it will seem as though he is trying to make an operational into an analytical model, which experience has taught us is not good. But, in fact, there is sanity to Fowler's approach.<br />Personally, if he ever does rev this book (read on his site that he is thinking about it), I wish he would consider writing a section that attempts to hide the observation elements and seamlessly map them back into the object model. Having a separate class keeping track of what the weight of a person represented by another class is does ultimately seem to undo the objectness of the model, but that's a minor nit. Definitely a book that I've returned to many times.	2004-07-15
US	51799128	R2EDO7MY0VWMMW	0553345893	624658181	The Glory and the Dream: A Narrative History of America, 1932-1972	Books	5	10	10	N	N	One of the Best by One of the Best	Manchester is really phenomenal, and this is an amazing example. To be able to not only hold interest, but literally nail the reader to the floor is a talent rarely held by historians. His portrait of the Depression and Roosevelt is great, including the much anticipated, and yet desperate end of FDR. Totally disagree with the other reviewer who claims that Civil Rights excuse Tonkin and Vietnam. LBJ deserves little to no credit for Civil Rights, that was the result of MLK and a large contingent in the Congress and it would have passed with or without him. Anyway, if you want to read a book that covers this period beautifully and makes you wonder how history ever got a reputation as boring, this is the one.	2004-07-12
US	51799128	R2WFUV92DIHFB4	1930110979	429533904	Code Generation in Action	Books	3	22	32	N	Y	Ultimately Disappointing	There are things I like about this book, and the topic is certainly timely, but this falls down the same rabbit hole many books do: the examples are just paltry and do not add up to a book-length treatment.<br />Little is done to convince the reader that the code generation option in each case was the best solution. For instance, in the case of SQL statements, there are countless other options. What makes this approach superior? One gets the feeling that the answer is the author just needed another example to paper his undertaking with.<br />Some of the sections are downright preposterous in their brevity. There's a section on generating Swing dialog boxes. It contains almost nothing but a silly diagram that looks like a data flow.<br />A good book on this subject would have used a real object oriented language to implement the generators, and would have showed the abundant design patterns that would apply to this problem (Builder, Bridge, etc.). One imagines that there could be many reuse opportunities in the generation framework. Code generation in some of the proto-MDA tools (like Eclipse's EMF, for instance) or the JET project show a lot more promise.	2004-03-02
US	51799128	RK4Z3SWNUNMOA	0321205758	725411549	Contributing to Eclipse: Principles, Patterns, and Plug-Ins	Books	5	6	11	N	Y	Lots to Offer	Guess the only negative review on here established that you probably shouldn't buy this book if you consider yourself an expert on the subject. I'm usually sympathetic to criticism of books that claim that the examples are too simple (very common, showstopping problem with MANY books), but in this case, I think the balance that is struck is just about perfect. You can follow what is being done in the code while reading along, and the code actually does stuff that is useful.<br />The real reason this book deserves 5 stars is, the secret is that this book is actually 4 or 5 books in one, and it's also perhaps one of the best practical guides to the future of programming. Consider:<br />1. Just the unit testing aspects of this book are better than in many books that are just about unit testing.<br />2. Framework programming is a really dimly lit subject. The only frameworks most people have any experience with are UI frameworks. Eclipse is a great example of a comprehensive framework, given the fact that all things are done as extensions. Just that aspect of this book is a hugely important lesson to be gleaned. The literal expert will say they already knew how to do each step; the structuralists in the crowd know that a big part of successful pedagogy is having people experience the making of something (in the same way that cookbooks are a fusion of things to learn about technique, not just a collection of specific recipes).<br />3. The pattern discussion is good and benefits from its situation in the broader framework context. (Checkout the Junit Cook's Tour article by the same authors; it is one of the best short works on patterns around.)<br />The only knock on this book is that it's about Eclipse 2.x. At Eclipsecon a couple weeks ago, almost the whole room raised their hands during a straw poll about how many were using 3.x. Because of the above, this book is still worth it. Would have been nice if someone updated the code to compile with 3.x though.	2004-02-17
US	51799128	R1YHACUMWQDT33	0465021212	354462139	The Evolution of Cooperation	Books	5	7	10	N	Y	Yes, Life-Changing, and Hyper-Connectable	A lot of interesting material is spun up from a simple premise: a two round tournament of programs for playing Prisoner's Dilemma. Game theory is one of the great cross-disciplinary topics. As the web is woven with nodes as distinct as Jean Jacques Rousseau and why the Japanese bombed Pearl Harbor (a personal favorite for Socratic historical discussions), somehow it not only all makes sense, but you are left with the impression that the topic and the book combine to achieve the brass ring of writing: repeatedly fetching the proufound while remaining clear and simple. (Ironically, this book makes a good companion to readings on Complexity and Emergence. But that makes some sense since those topics have turned to automata and the realization that complexity is most often a function of simple constituents iterated.)<br />The read this and pass it on advice from the other reviewer here is good, and apropos, as this is about the infection of cooperative strategies in populations.	2004-02-12
US	51799128	R17CFZ29K0Q4VQ	0471319201	943200330	Model Driven Architecture: Applying MDA to Enterprise Computing	Books	5	5	9	N	N	Realistic and Practical Look into the Future	First off, if this book deserves 5 stars just as a recognition of the depth of the accomplishment (given the breadth of the undertaking) in getting it written, and written extremely well. In an industry where the most successful authors are hacks that put out paper thin salvos to ride whatever the new gauche rave is, this book represents the far opposite end of the spectrum. Clearly, the long history of CASE and modeling and code generation is well in hand as the author pushes through a detailed elaboration of where MDA stands and where it's going. And the news is balanced and delivered honestly, this is not a call to Kool Aid coming from a deluded cult leader. There are open issues, but the general direction of MDA is so overdue and important it's silly. [For a good means of achieving parallax on this issue, consider looking at Cheeseman and Daniels' excellent UML Components, which makes a strong argument for a level of indirection between logical and physical models. If MDA delivers no more than that in the short term, it will still be a huge contribution.]<br />The reversibility of those models and the degree to which synchronization and editing can be simultaneously supported is perhaps the key issue that remains. Unfortunately, it is something of a deep bind because there is no doubt that the dream of complete reversibility of code and model, which has been hyped a lot over the past 5 years, is a shallow dream (reducing the 'model' to a mere visualization), and yet the idea of not being able to touch what was generated has a similarly stultifying unappeal to it.<br />As the development world is becoming more polarized between those who would model solutions and the band of hackers who claim to be able to do anything with a scripting language and a database, MDA is a key focal point for the former that is long overdue. Way too much attention has been spent developing tools that make it easy to lay out user interfaces while very few places have achieved even a basic ability to keep a serious domain logical model in tact through a single version, let alone a number of generations. Hopefully the tremendous consensus that has crystallized around MDA is an indication that that balance will soon start to change.asic ability to keep a serious domain logical model in tact through a single version, let alone a number of generations. Hopefully the tremendous consensus that has crystallized around MDA is an indication that that balance will soon start to change.	2003-11-19
US	51799128	R3JQ3IZ3FJ6692	0135974445	115656945	Agile Software Development, Principles, Patterns, and Practices	Books	5	6	6	N	Y	One of the Most Valuable Library Additions in Years	I find myself going back to this book over and over again. It's true that it makes a great compendium of a wide range of topics, but to me, one of the best things about this book is that there are practical considerations taken up that you will not see discussed at length elsewhere. Frankly, I wish Bob had let himself go (by stating some of the other as prerequisite) and explored deeper into that territory. Example: discussion of package structure and marking packages as fixed or volatile, and how to manage dependencies, etc. There is a great tie in with Meyer here. All around great book.	2003-10-17
US	51799128	R26F877JECXMRH	0936756098	686814527	Nomadology: The War Machine	Books	5	23	37	N	Y	What Could Be More Timel(y/ess)?	Sick of hearing the C student wonks and politico idiots from inside the beltway talk about the latest war on fill in the blank? War is the only political metaphor left. This thin little tome contains more collective wisdom about the source of this rug rash than should be allowed out (come to think of it, you might want to order under an alias and have this sent to a PO box). (Marx was right: the state was bound to whither away, just turns out its replacement isn't as nice as in the Manifesto.)<br />Just today, reading the New York Times, there were a number of articles talking about the American tendency to try and make all solutions military. This book starts with the realization that the cooperation of the state and the war machine are an illusion, one that we still don't seem to understand today.<br />If you are sick of driving yourself crazy wondering how the War on Drugs could still be going on, sucking in billions each year as the government debates the end of PBS' puny subsidies, administer this book with impunity (while you still can).<br />(The Editor says this book was inspired by Nietzsche. In other words, file along with all other worthwhile works of the 20th C.)	2003-10-13
US	51799128	R2Y6GB1LEWVNWP	0932633439	268406698	Peopleware: Productive Projects and Teams   (Second Edition)	Books	5	8	11	N	Y	Total Agreement, Except on One Crucial Point	This book is as essential as everyone here makes it out to be. However, the authors' development of the notion of teamicide needs to be seriously questioned. While there is some truth to their characterization of incentive-based systems or tracking through testing having the ability to go haywire, the stated anti-postulate reads like an articulation of the doctrine of the soviet. No individuals' performances can be acknowledged to the group? At all times it must be enforced that the only goal is the group goal? This is the only dark ray in an otherwise wonderful collection of great insights. The reality is that a balance must be struck. I know balance and shades of gray are not popular in our polarizing, cartoon times, but politically, both the extreme Horatio Alger and the notion of the great state have crashed and burned. Truly, what is needed are more plural forms of organization.	2003-10-10
US	51799128	R2DEPM6BNKTTR6	0684868768	11617672	Emergence: The Connected Lives of Ants, Brains, Cities, and Software	Books	4	7	7	N	Y	Almost Aborted Thanks to Reviews Here	Don't know why so many people beat up on this book. Frankly, I think most of the criticism on here is curmudgeony sour grapes. Yes, it is not written by someone in the field. That's a good thing. It's actually written by someone who can write, which is why so many people noted how readable it was. Sure there are more implications that could have been drawn, but so what. If I was grading just pure stimulation, this would get 5 stars; it gets you thinking and seeing things in a new light. I agree with the woman from the restaurant. This is well worth the time.	2003-09-23
US	51799128	R1NHMZO6VG5XGS	0618164723	392143634	Fat Land: How Americans Became the Fattest People in the World	Books	1	23	40	N	N	With the Fat Went Our Memory	Well, the future of journalism is here. The author walks in to take a bow for having figured out a puzzle he made for himself. What he doesn't mention, and most of us are so unconscious, we don't know, is that there is nothing new here. Author's guide: find someone to blame, and make lists, short ones. Oh supersizing is an important contributor? You're kidding! I have read at least 10 articles about that in everything from Nutrition Action to searing journalistic tracts like Self.<br />What is done here, that wasn't done in those pieces, is the story has been reduced to cartoon, complete with a villain (Earl Butz). And as the New York Times review points out: the irony is that after playing the conspiracy card, the ending makes a plea for a simple solution: the fat people need to eat less. Wonder if the publishers got to the author or if the need to conclude just elicited this saccharin bromide.	2003-01-18
US	51799128	R2UDFTEN1FSVVX	0312267231	8690722	Counter Intelligence: Where to Eat in the Real Los Angeles	Books	5	10	10	N	Y	Indispensable as Thomas Map	Few maps necessary though, since 90% of the restaurants are within a couple miles of each other (Alhambra/San Gabriel/Moneterey Park). Even though many of these reviews were written long ago, I've found that most of the restaurants are still around. Literally a lifetime's worth of discoveries await... . What you learn reading this book will help you in exploring new places as well.	2003-01-04
US	51799128	RTNU0EHUXLG6U	0875962254	663480939	Prevention Magazine's Nutrition Advisor: The Ultimate Guide to the Health-Boosting and Health-Harming Factors in Your Diet	Books	5	4	4	N	Y	With an RD's Stamp of Approval	Living with a registered dietitian, this book has been an invaluable resource. Whenever a debate breaks out about how many grams of fat are in half an avocado, or how many grams of fiber an apple has, you can go to this bible and resolve it instantly. This is literally the book I open up most in my library.	2003-01-04
US	51799128	R3K5ED2WBFAK2I	0321146530	540051033	Test Driven Development: By Example	Books	4	56	77	N	Y	90% is Just Showing Up	Everyone who's read about XP has wanted a book like this forever, so a decent performance was bound to be a happy occasion (a hot dog is a feast to a starving man). I would disagree with the last reviewer and say that the first part of the book is the good part, when the author works through his 'money' example. At the end of it, there's a great moment when Beck acknowledges the importance of metaphor, claiming that he'd done the same exercise a number of times, though this time, he had picked a better metaphor and it subsequently went a lot faster. I have to laugh at this. This is a case of obiter dicta (giving away the key to something in passing). But the funny thing is that Beck doesn't notice how important it is. He proceeds to just meander through the rest of the book. Then, the book just goes down the rathole as we feel like we're being treated to a prof who's run through his material and is just waiting for the bell. The section on patterns is abominable, ending with a thing on Singleton that says something like 'Don't use global variables, your programs will be happier,' which is a ridiculous capsulization of an issue that a lot of people have discussed many times before. A Singleton is globally available. It's not a variable. Mail servers are globally available too. Guess we shouldn't use them either.<br />Let me also say that I am really kind of fed up with Kent Beck's Opi Taylor writing style. It's ok when the focus is on the KISS side of the equation and generally positive, but his snide little sideswipes throughout this book on everything from the open-closed principle to the idea of doing specifications (another searing, strong argument that boils down to the root of the word being the same as for the word speculation (!)) are really laughable. Makes me wanna say, yeah, who needs a spec if all they are doing is the 10 millionth payroll program or a currency converter. Don't look to Kent Beck for big answers, as a matter of fact, by his own half-conscious admission, he's as much in search of them as we are.<br />So why 4 stars? Per the subject, the Woody Allen principle. Another hysterical part of this book is at the very end he shows a list of things someone else suggested, none of which are covered in the book, as if he had to tell us, at the end, that he knew just how much was missing.ious admission, he's as much in search of them as we are.<br />So why 4 stars? Per the subject, the Woody Allen principle. Another hysterical part of this book is at the very end he shows a list of things someone else suggested, none of which are covered in the book, as if he had to tell us, at the end, that he knew just how much was missing.	2002-12-09
US	51799128	RI7LEZO27GPMO	0451527704	887884219	An American Tragedy (Signet Classics)	Books	5	41	50	N	Y	In the Ether	Mainly want to make a couple points:<br />1. Totally agree that this is one of the great novels of all time.<br />2. The person who claims it is too long totally misses the point. First, you will not end up dragging yourself through this book, the reverse will happen. If you enter in good faith, you will be promptly nailed to this book, not thinking for a minute that any part of it is labored or boring. Secondly, the scope of this novel is very unique. Rather than the typical epic which uses time and history to spread things out and increase drama, this novel uses setting in a wonderful and tragic way, spinning together three frames, the urban, the suburban, and the wild. One of the most fascinating aspects of the book is the way the author is able to show the character's path, through transgression, without moralizing or being overly allegorical. Without giving it away, this book is one of fate driving to a climax of inaction, but guilt nonetheless.<br />It's ironic that the summary mentions that Dreiser is unclassifiable, because I've found that most people: a. have never read this book (even very well-read people) and b. have dismissed Dreiser in their mind as a bookish also-ran who played an archaic tune unaware of the newly emerged modern cacophany. While Gatsby still garners respect (hell it's thinner, even intellectuals are lazy), one wonders if it is because it tips its hat, with the eyes of TJ Eckleberg (seen across the Wasteland) and the Jazz references, to the new age. Nevermind all that. This is a truly unique epic that  by turns reads like Greek tragedy and seems visionary in its depiction of human beings' falling out with nature, and the base nature of the fundamental criminal betrayal at the heart of it.<br />Trivia: this was based on a story Dreiser followed in the papers when he was young about an actual case that occurred in Courtland, NY. I saw a documentary about that case that was extremely disturbing; it seemed from the photographs and the handling of the case that the killer was insane, but the state (with no real notion of that in the law at the time ~1905?) electrocuted him nonetheless....<br />Summary: read this book!of the case that the killer was insane, but the state (with no real notion of that in the law at the time ~1905?) electrocuted him nonetheless....<br />Summary: read this book!	2002-10-27
US	51799128	RC2EXW79TFZWU	0201715945	442680947	Design Patterns Explained: A New Perspective on Object-Oriented Design	Books	2	16	28	N	Y	Design Patterns: for Dummies....	Any time I read books that claim to be the product of epiphanies I get worried. In this case, it's more than justified. I bought this book because of the good reviews here, thinking that it might be a good way to get some of the junior programmers in our group into patterns. Instead, it's ultimately a very shallow revelation delivered in a style that eventually makes me think the writers are slipping back into the same stories over and over again between bouts of polident and fibercon, repeating themselves ad nauseum. There are many good, important points made in the book, unfortunately they are all lifted from other books. The original material here, when you strip away the bowdlerized, readers digest sendup of the gang of four, Meyer, and Alexander, boils down to how the authors solved one silly problem with a legacy CAD app (zzz....zzzz....). Save your money.	2002-07-15
US	51799128	RYHZQ0LGI3B6X	0201743973	943746137	Design Patterns Java¿ Workbook	Books	5	15	15	N	Y	Crystal Ball Says: Instant Classic (with a few reservations)	If you are old enough to remember Tony Hansen's incredible 'The C++ Answer Book', this is the same thing for Patterns, and in Java. In a lot of ways, I feel like it would be sacrosanct to say anything against this book at all because it truly is something that has been needed for so long. Vlissides' book 'Pattern Hatching' reads like Byron's Manfred: brooding, intellectual, meandering, and at its worst, kind of fussy (but still a great book). This book is the other end of the spectrum. It bends over backwards to constantly recontextualize the discussion and yet it still has the depth to consider trade-offs and challenges in working through implementations. Even though the author recommends Grand's 'Patterns in Java, Vol 1', I recommend this instead. The Grand book is really inconsistent and sloppy, though it has some good parts.<br />My only reservations is that it teeters into the juvenile at times in ways that are so bizarre, you think, wait a second, a minute ago I was pushing through a paragraph that might keep me thinking for a week and now I feel like an imbecile, being told how method dispatching works in OO languages and how that is the basis of polymorphism (I actually had to fish my thumb out of my mouth during that section).<br />While the appendices are very smartly laid out, this book isn't quite as meticulous as the Hansen book so some may look at this and say I don't know what I'm talking about. Maybe for that reason, this will end up fading away faster than it might have if the author had spent a little more time trying to work up material that was a bit more challenging.<br />One final good point: he uses a very good technique in here where he talks about different parts of familiar code that are examples of various Gang of Four patterns. It really is an effective way to get people to realize that patterns aren't an esoteric, academic pursuit. We're all already swimming in them and coders who are not up on them enough to recognize them are probably not going to produce really good code.not going to produce really good code.	2002-04-20
US	51799128	RAT969YA806VE	0679747044	536241613	Genius: The Life and Science of Richard Feynman	Books	4	54	70	N	N	Great, Though a Lot Turns Up Missing	If getting people to turn pages was the only measure of a writer, Gleick would be at the top of his craft; I ripped through this book in 3 days (and likewise found Chaos very compelling). But, alas, there are other considerations and for me, the most curious thing about this book is the degree to which the author sets the table and serves a burning meal then leaves most the courses half eaten.<br />For instance, you would think from the title, that you were also in for a discourse on the concept and/or practice of genius. Instead, predictable anecdotal information comes along (more often than not reinforcing the cliche rather than an individual experience of genius) and then, when the author decides to take up the topic, he makes a few remarks about the geneology of the concept, tries to talk about Mozart in a way that borders on hamhanded (while it also produced an unfortunate flashback to surely one of the most banal treatises on genius: Amadeus) and then after a few other observations, he moves on. The title  seems to promise the cliche, but the wonderful quixotic image that emerges from the long course of Feynman's life is rather the retreat of the concept. As the most likely Einstein of his generation, Feynman ended up making significant contributions, but certainly fell far short of the previous generation's measure of genius: general relativity. Instead whole hordes of people pushed the ball forward little by little into the quantum age and Feynman ironically became one of the ones who defied the belief in a grail that would unlock all the secrets.<br />The other part that seemed truly neglected was the final scene when Feynman served on the Challenger committee (shortly before his death). Gleick leaves the only commentary on his role to Freeman Dyson, despite the fact that the scene is loaded with possibilities: Feynman setting aside the sheaths of a billion dollar, protected industry to reveal, through a failed experiment that an 8 year old could have performed, the culprit in what can only be called murder.<br />To his credit, Gleick does manage to allow a real person to emerge from behind the cliches. It's a remarkable reversal that in the beginning Feynman seems like a crude, cliche of a person who is going to set the world on fire, and at the end, though he didn't end up singlehandedly rewriting his realm of science, he did end up a wise, caustic, fearless contrarian.<br />Oppenheimer once said that it would take a modern Sophocles to write the history of the dawning of the quantum era. Gleick sets the scene but spares a lot of the drama, even though it seems like he secretly understands it all. Still a very powerful read.ormed, the culprit in what can only be called murder.<br />To his credit, Gleick does manage to allow a real person to emerge from behind the cliches. It's a remarkable reversal that in the beginning Feynman seems like a crude, cliche of a person who is going to set the world on fire, and at the end, though he didn't end up singlehandedly rewriting his realm of science, he did end up a wise, caustic, fearless contrarian. <br />Oppenheimer once said that it would take a modern Sophocles to write the history of the dawning of the quantum era. Gleick sets the scene but spares a lot of the drama, even though it seems like he secretly understands it all. Still a very powerful read.	2002-01-08
US	51799128	R24ICH8DHPPI1U	0060934913	24249899	Kitchen Confidential: Adventures in the Culinary Underbelly	Books	2	4	6	N	N	Primate Gene Pool Alive and Well	For those who thought that the Normal Mailer types were on the wane, here's one who appears to have been crossed with Joan Rivers. Imagine a mix of catty commentary on all kinds of inane marginalia mixed with egotistical swagger and you'll be able to almost smell the sweat of your cell mate if you choose to read this thing.<br />But if you are a cook wannabe who needs discipline, delivered by a drug-vetted Dimmesdale, the author will tell you which knife will make you cool and which one will make you a [dork], while he's reminding you that you're never going to be as good as him. This cat's follow up should have a picture on the front with him swinging from the chandelier of his haute cuisine big top from his prehensile tail. Julia Child would spin in her grave if she weren't still alive (proof that she probably hasn't read this yet).	2002-01-08
US	51799128	R3R1HJXO39B1F2	0192838741	655438036	Jacques the Fatalist (Oxford World's Classics)	Books	5	28	31	N	Y	Burning Read	This book is amazing. It will make many of your conceptions of where things belong in the history of the novel fall apart. Not coincidentally, that is one of the points of this book, being an exercise more than a message: that all apparent armatures of order are one more perspective away from disintegration. This book is really quite sneaky as well. In the beginning, the constant references to the inscriptive certainties in the heavens seem silly. But then little explanations come along (like the geneology of Jacques' crazy horse), and the novel heads down a dark, yet very enchanting road, into a fuzz that's every bit as modern as any you've read. This thing alternately looks like Bunuel, Zola, Stendhal, Faulkner, Kerouac. The picaresque, the uncertain narrator, the structuralists, all seem to be swimming around in this amazing book.<br />Surely many writers and artists from this era (like Goya) depicted the nobles as effete and incapable of carrying out the governance of the most basic requirements of existence, but here, they also appear (in the image of the 'master') as so withdrawn from the world as to be blind. If you take away all the stories that are told, the only thing that's left of a plot here is the master having his horse stolen right from under his nose while Jacques was gone and then Jacques finding it for him at the end in a beautiful, mock sort of deus ex machina.	2001-12-29
US	51799128	R14STK31AQBDRW	0767908236	958766313	The Greens Cookbook: Extraordinary Vegetarian Cuisine from the Celebrated Restaurant	Books	5	56	59	N	Y	The Green Way	This book is from the ether. Really great cookbooks draw you into a world that you had not understood before. Many people who love the Marcella Hazan book love it because it includes the comfort foods of Italy they are familiar with, but also has tons of wonderful, varied surprises. This book is kind of similar. There are recipes that you will realize are the province of the vegetarian and are very appealing, and then there are new things to be discovered that will make you feel, upon their discovery, almost ashamed. The first recipe I prepared was for the White Bean and Tomato Soup with Parsley Sauce. I just about lost my mind. I had only recently started using the mortar and pestle for prepping garlic and this recipe made use of that technique to stunning effect. With a piece of crusty bread, it is as fulfilling as anything you are going to find to eat with animal parts in it.<br />I also like DM's 1400 recipe book but this one is more exciting as a cookbook, the other more encyclopedic. The soups section is especially amazing. I've made almost all of them now. Also, as some people may know, many cookbooks have blunt wrong recipes. I haven't had any recipes miss yet from this book.	2001-11-28
US	51799128	R2N15WCJ017F5G	020169946X	906222453	Fundamentals of Object-Oriented Design in UML	Books	5	6	7	N	N	Great Book	One of the things you'll find in it that is not stressed enough in other books about OOD is state management. Programmers often understand basic concepts of how to design objects and what attributes they should have; few are good at taking complex models that involve state transformations (not just talking FSMs) and coming out with a solid design. Now that the middle tier is taking over, people need to realize that the concepts of data integrity, transactional integrity, even simple transformational integrity are part of the requirements of a good object oriented design. This book is one of the few that even addresses the issue.	2001-08-11
US	51799128	R2GJAIZC9EJWTQ	0735711372	221051079	The Zope Book	Books	2	10	28	N	Y	Simple-istic	This book is very basic and doesn't really address any of the big issues you would want to see like templated content creation, programmatic extensions, framework services. This is in part due to the design of Zope itself lacking in those areas.<br />I came to Zope through Wiki. Looks like the idea of Collaboration servers is finally starting to gain some credence. Unfortunately, Wiki, which has been around for ever, is a hacked up mess written in Perl. Zope, being written in Python, and having much more structural mechanisms looked appealing. After looking at it, though, I've found that it to is a shortsighted solution. It is screaming out for a real XML foundation (and plumbing). Instead, you will find that it will let you do some things relatively quickly, but you'll want to hold your nose (unless you are a hacker in which case you may feel at home).	2001-08-11
US	51799128	R3PK6CJLEUB6Z4	0201310120	717546752	Objects, Components, and Frameworks with UML: The Catalysis(SM) Approach	Books	5	9	9	N	N	Best Book on UML and Process	IMHO, this one is top of the heap. There are a number of things that set it apart: 1. it is looking at issues that surround the large scale, complex development. When people start to realize that XP doesn't have legs long enough for most projects, this will be a good place for them to turn, 2. A lot of modeling is about structure and these guys talk about structure a lot, and give you lots of ideas about some of the ways structure informs design. For instance, on the component front, they focus on the fact that component architectures are often going to be layered and that the structures are almost fractal. This is one of those books where you realize that they are talking about things that you have often wondered about but never seen covered elsewhere. 3. This books is all about components. XP doesn't even mention components really. Frameworks and components are the future. And not monolithic, swiss army knife components, but interlocking, specifically purposed components.<br />My minor nits: 1. better and more examples, 2. not very visual. I like really using the visual aspect of UML and getting mileage out of it as a means of making the immensely complex more navigable.	2001-05-04
US	51799128	R2IYFSVT63CHZ1	0201708515	185730342	UML Components: A Simple Process for Specifying Component-Based Software	Books	5	11	12	N	Y	Specification Made Plain	This book has a couple things going for it that make in not only outstanding, but truly unique: 1. It attempts to present an aspect of development in a structured way, without offering it up as some kind of miraculous silver bullet, 2. The literature available on methodology tends to run the gamut from the simplistic (XP) to the baroque (Catalysis). This book makes a compelling argument for a simple process of doing component specification before writing code. We've already introduced many of the concepts into our team and it has made our process much more solid and mature. People are finally waking up to the fact that the future has to be component-based, language or process alone will not deliver us from the throw away world of most modern software.<br />Also, see the book 'Objects, Components and Frameworks in UML: The Catalysis Approach'. It goes well with this, though @ 1200 pages, it is on the baroque side. The influence of Catalysis on the authors (one of them worked on it) is clear.	2001-04-28
US	51799128	R2RTM4WKP867DG	157870118X	784033023	A UML Pattern Language (The Mtp Software Engineering Series)	Books	4	8	9	N	Y	Shoemaker's Son	It is with astonishment that I marveled at the degree to which this book was just a hodge podge of widely divergent ideas, thrown together under a moniker that is only really apt for a small portion of what is here. That said, I give it four stars because amidst the mess, there are some really good ideas, and also, this is one of the more literate books I've come across (meaning that the author is drawing on a wide range of other books and for the most part, intelligently condensing some of the ideas that run through them).<br />In the same way that it amazes me that Rational presumes to tell developers how they should develop software while their own software is a buggered up mess of different pieces that don't work well together (and companies a fraction of their size are now competing with them favorably), it is a little surprising to see how poor the organization of this book is and how many times you see a subject in a chapter or section heading and expect a serious drive, but end up with another little chip shot. The last chapter of the book (putting the pieces together [A for originality]) is almost a joke, but endemic: the author just summarizes the work of another guy, making a couple little points and quoting liberally. Methinks he was huffing and puffing by this point in his little journey.<br />If you are buying this for the 'patterns' be forewarned: a. there are precious few of them, and b. as is so often the case, everything down to a design tip qualifies as a pattern in this guy's mind. 'Seven Plus or Minus Two' is one of his patterns. It basically means people are only capable of keeping between 5 and 9 concepts in play at once. Ok, good thing to stress, but is this a pattern?<br />In reality, this book is good for one thing primarily: spurring you to consider some things that you probably had not considered before. For instance, there is a good discussion of the difference between business modeling and domain modeling, that considers also the role of vision in modeling (which is rare), and overall that is very useful. The chapter on Product (focusing design on product more so than on just managing tasks) started out very promising and ended up being just a couple of ideas. If you are a person who looks to a book to just turn over practical, useable nuggets and get out of the way, this one is not for you.f vision in modeling (which is rare), and overall that is very useful. The chapter on Product (focusing design on product more so than on just managing tasks) started out very promising and ended up being just a couple of ideas. If you are a person who looks to a book to just turn over practical, useable nuggets and get out of the way, this one is not for you.	2001-03-13
US	51799128	RLQF56C6AU981	0201607344	787389988	Pattern Languages of Program Design	Books	5	21	29	N	N	Correction Please	Well, suffice it to say the one review here, aside from having nothing to say, could not be farther from the truth. I still open this book all the time. The whole series of PLoP books are immensely useful texts. To tell the truth, these compilation books of papers are, if they are good, in their own realm, far above what you will get from one author. Too much of the computer press turns out the 'work' of exhausted people who are clearly trying to spread a couple ideas across a whole book. Even the Gang of Four book is really a compilation of sorts.<br />Anyway, this book has many good things in it. Anyone who is interested in Patterns should have the whole series of PLoP books.	2001-03-11
US	51799128	R15BIXBRY72NL5	039458404X	196340890	Essentials of Classic Italian Cooking	Books	5	362	383	N	N	Behold a Sacred Text	I agree with the other reviewer here: this is the one cookbook I'd keep if I could only have one. This book takes you so far beyond spaghetti and meatballs you won't believe it. It is also meticulous, thorough, and yet very enjoyable just to read. Here are my favorite recipes:<br />1. The Bolognese Pork Roasted in Milk - this recipe is insane. It is like a wonderful chemistry set experiment you can eat. Marcella says it would be one of her top 10 choices of recipes that embody the genius of Italian Cuisine.<br />2. The Lemon Chicken - Also amazing. Easy to do, wonderful. Great summer dish.<br />3. Veal Stew w/Tomatoes and Peas<br />4. Veal Stew w/White Wine and Sage<br />Also, some of the standards are given great treatment:<br />1. Eggplant Parm<br />2. Osso Bucco (this is by FAR the best version I've seen of this).<br />3. Fried zucchini.<br />This makes a great gift too because it isn't full of esoteric stuff that only foodies (no derision intended) would make.	2001-02-16
US	51799128	R2H9QHR8OFQKGS	0201657678	745383919	Use Cases: Requirements in Context	Books	4	41	41	N	Y	Useful Use Cases	The best thing about this book is that the authors are not meekly presenting just a stream of bland bromides that echo the sentiments of a million other talking heads. On the contrary, they are quite opinionated and their opinions often illuminate some of the most important issues in the whole raging process debate. Specifically, their discussion of the uselessness of requirements that just appear as a gigantic list of commandments is truly on target. (The writers espouse attaching requirements to the appropriate [and specific] use case.) They also do a good job of dealing with the issue of scope and developing use cases for specific uses. Everyone who's read about use cases has confronted the issue of how to 'refine' them but this book does a better job than most at underlining the importance of scope in the iterative process.<br />The downsides of this book (IMHO) are:<br />1. The diagrams are all very simplistic. There really is no point in using a pictographic medium if there's nothing there.<br />2. The models that are talked about are also too simplistic (but I say that about every book).<br />3. There is a little bit of smugness about how *their* way is the sane and obvious answer to all that ails developers.<br />Still, I think this is one of the best Use Case books out there.	2001-01-12
US	51799128	R22RBDY8IR4VOC	0140258124	863301863	Crime of the Century: The Lindbergh Kidnapping and the Framing of Richard Hauptmann (HBO movie tie-in)	Books	5	12	13	N	N	Don't Miss This One!	This is one of the best books of its kind in the world. The author does a wonderful job of stitching it together. This goes beyond a page-turner: this book will take over your life. If you are at all interested in the tradition of mock trials fronting mock justice, this is one of the most ridiculous examples to ever hit the American big top.	2000-12-28
US	51799128	R1SM6I4NJPC104	0201710919	891410653	Planning Extreme Programming	Books	4	60	66	N	Y	Essential, If a Tad Narrow	The many other reviews here give you a sense of what you'll find in this book. I think there is one important point that is missing from this picture: the fact that the focus of the authors in this and the first book is on software processes where there really is no visioning going on at all. What do I mean by that? Well, in the first book they are describing the writing of a payroll program (their project @ Chrysler). In this book it's a travel application. Thankfully, not all of us are writing software that has been written a thousand times before. While this may sound like a trifle, I believe it is a central point with regard to this book. The whole concept of iterative, incremental development takes on a different hue when you remove visioning from the process. In fact, what the world really needs to figure out how to do is not write the 10,000th payroll program faster than someone else, but how to write new, innovative software on time allowances that are absurdly short. I think the next volume if there is to be one, should be a detailed account of a project where the team had to navigate the process through not only implementation but realization of an evolving, sophisticated vision. Finally, consider the fact that software development that requires no visioning is basically a craft that's akin to dressmaking. While some people are happy to see their creativity as 'developers' manifest solely in finding crafty implementations, let's face the facts: we need to figure out how to get beyond just opposing tribes matching each other's features on models that are overdue for commodification.	2000-12-25
US	51799128	R1A7T3IYBZ4LNM	0471606952	795447401	Pattern-Oriented Software Architecture Volume 2: Patterns for Concurrent and Networked Objects	Books	5	9	10	N	Y	Deep Patterns	With so many patterns books out there written by little pikers who've probably never worked on a codebase of more than a thousand lines, this is a gust of fresh air. The first volume in this series is one of the great patterns books. The only knock I could offer on this book is that it is slanted a little toward the net equivalent of a kernel mechanic: in this day and age of the container as king, not many of us are doing thread locking on sockets (thank you Sun!&lt;g&gt;). That said, these are intelligent examinations of patterns that are very realistic. I just reread the section on asynchronous notification mechanisms and the trade-offs between implementing a 'double observer' and other variations and was struck by the degree to which the material had been thought through and all the logical dependencies intelligently communicated. If you want to see what patterns look like when they are in the hands of seriously bright people, not some book junk of the month JC dropout, tune in here.	2000-12-13
US	51799128	R2OVQ8M0Q904MT	0936756365	542769989	The Ecstasy of Communication (Foreign Agents)	Books	5	18	20	N	Y	Modern Philo Par Excellence	This book is a riot and a total joy to read. Baudrillard skitters over all the modern fixtures (Nietzsche, Freud, Marx, Derrida) citing no one, instead whipping together confections that result in immediate addiction to his prosaic bakery. All his books glow like embers after being read, but this one in particular sews up a lot of his interests: modern existence enslaved by the eye, history as a mass recapitulation of fantasy put on by nostalgia, the secret as already always revealed.	2000-12-08
US	51799128	R369JWJRGS2S54	0201634988	141950023	Design Patterns CD: Elements of Reusable Object-Oriented Software (Professional Computing)	Books	5	14	15	N	Y	CD Edition is Awesome!!	What you've heard is true: this is the most important book on programming of the last __ years (at least 10, for me maybe of all time).<br />I wanted to just put a few thoughts in that I didn't see in the other reviews:<br />1. I read an article one time where John Vlissides (one of the authors) was saying he spoke somewhere and asked how many people had read the book and almost everyone raised their hands, then he asked, who would like to come up and explain how to implement the Composite pattern and suddenly only a couple hands were raised. Though this book is a fount of great ideas, it really will be most useful to you if you become CONVERSATIONAL with EACH of the patterns. That's the whole idea from Alexander anyway so consider it a mandate from on high.<br />2. One easy way I've used to explain to people what patterns are about is that mere object oriented training leaves people with an idea of how to model things as objects, but so many times I've done reviews of programmers code and they got that far and then as soon as work needed to be done that required more than one class, one of two things happens: they start passing data all over the place (back to the structured world we go), or they start binding their objects into deadly embraces. This book teaches you how to have some 'tricks' in your bag for modeling just such situations. Now, that said, there is some work you will have to do to map it into the newer programming world we're living in, for instance distributed Java makes some services available (like EJBs/container services/messaging) that changes some of the implementation ideas considerably.<br />3. If you are using Java, you can start to learn patterns and their application to your chosen platform by looking at a vast wealth of work that's already been done. The JDK uses the Observer pattern for its event model. Some of the more advanced frameworks, like BEA's Theory Center, are loaded w/Design Patterns (Chain of Responsibility and Strategy). And many products (Together/J) use patterns in their APIs (Visitor).<br />Finally, whenever I'm interviewing programmers now I ask them if they know what patterns are, then if they get past that, if they can give me an example of a recent use of a pattern and how it worked. I had a guy a couple of weeks ago looking for 6 figures who told me he'd heard of the book but hadn't gotten around to opening it. Der, that's like a doctor saying 'I've heard milk might not be good for ulcers, but take it because I haven't had time to review the research yet.'<br />More writers need to put out CD editions that are this good, dang it!!many products (Together/J) use patterns in their APIs (Visitor).<br />Finally, whenever I'm interviewing programmers now I ask them if they know what patterns are, then if they get past that, if they can give me an example of a recent use of a pattern and how it worked. I had a guy a couple of weeks ago looking for 6 figures who told me he'd heard of the book but hadn't gotten around to opening it. Der, that's like a doctor saying 'I've heard milk might not be good for ulcers, but take it because I haven't had time to review the research yet.'<br />More writers need to put out CD editions that are this good, dang it!!	2000-09-30
US	51799128	R2XEP2OI5UYHG4	013011510X	938054705	Java Modeling In Color With UML: Enterprise Components and Process	Books	4	35	37	N	Y	Don't Be Fooled	The people who trashed this book didn't do much with it, that's clear. When you first go to the book (or if you've seen Coad speak, as I did @ JavaOne), you will think that Mr. Rogers is trying to talk you into teaching you a new way to program w/crayons. I was also struck by the proliferation of classes that Coad advocates. However, I have returned to this book a number of times, in part because Coad's tool Together/J is now the preeminent Java/UML tool, it makes Rational look like a set of tinker toys. This last time, I've become quite enamored with what is going on in here. Here are my suggestions: 1. Really try and understand the DNC (domain neutral component). It is a very good approach to a kind of design completeness theorem that I haven't seen much talk about elsewhere. 2. Look at the diagrams. I look at them over and over again. After going a couple of rounds I found that I was becoming addicted to the visualization process, not merely as a representational apparatus, but as a way of actually doing more work/understanding the work I'd already done.<br />If you get the 30 day eval of Together/J and you work through understanding the DNC and color, you'll pass into another dimension from which you will not readily want to return. Plain white UML is dimensionless to me now.<br />All that said, I gave the book a 4 because it really needs an update. The FDD (feature driven development) methodology is not really interesting or appropriate anymore, I think. In the new massively interconnected, distributed component world, features are not what its about anymore, unless you're developing a word processor. Also, the archetypes are based on a non-EJB approach that will change if distributed computing is applied to it, quite significantly. Still this is an important book and combined w/TogetherSoft's tool it's perhaps the best design/UML teaching combo available. There aren't enough books out there that have models for real things in them. This does that and a lot more.e.	2000-09-26
US	51799128	R2L8M2RQAXGJNP	1861003129	989194807	XSLT Programmer's Reference	Books	5	16	17	N	Y	Awesome, but beware	This is a great book. It's loaded with examples, it is comprehensive in its coverage, and it conveys both the practical and philosophical aspects of this huge new revolution known as XML. The author has a wonderful  explanation of how XSL was designed to not include an assignment operator.  This is not the work of some dope just trying to waste paper and catch a  ride on the latest wave.<br />The beware is that the author recommends his own  XSLT processor (Saxon). It is good and I would encourage people to use it,  but it does some really stupid things that could drive you crazy. For  instance, if one of the files you stipulate on the command line cannot be  found, it doesn't tell you that, it just throws the filename up on the  screen instead of the output. Likewise, if you leave the  &lt;xsl:stylesheet&gt; tag open, it will just say 'error processing  stylesheet no more input'. These are but two examples. We also found that  his implementation of the crucial document function doesn't work in his  Java code, where the Apache projects did. It's a shame these kinds of  things are in here because XSLT allows you to very quickly perform some  incredibly sophisticated feats without killing yourself. Definitely buy,  just proceed with caution once you start working with it.	2000-06-03
US	51799128	RAYC3O29X064Q	0471958697	97623796	Pattern-Oriented Software Architecture Volume 1: A System of Patterns	Books	5	70	75	N	Y	This is *the* Patterns Book	While I have argued since it came out that the G of 4 book is the most important programming book of the decade, I have to agree with the other, lone reviewer here, that this is a deeper, more mature work. I rediscovered  this book when Alan Holub's series of recent articles began to appear in  JavaWorld about implemnting UIs and I realized that he was taking a lot of  his ideas from Buschman. One of the reasons I bring this up is that it made  me realize that this is the great thing about this book: it dares to  wrestle some of the complex issues and tradeoffs to the ground, presenting  the reader with a more useable guide to the practice of implementing  patterns. You may have read John Vlissides' (Go4 author) comments about how  for years after the publication of his book he'd ask when he spoke who had  read the book and nearly everyone would raise their hands, then he'd ask  who wanted to come up and explain the momento pattern or the bridge and  only a couple of people's hands would be raised. This is in part due to the  fact that the Go4 book encourages the concept of simple ICs that can just  be retrieved and plugged in. In reality, as anyone who has read Vlissides'  other book which spends its whole duration talking just about Visitor, the  opposite is true. Buschman's book is the best in this regard at spanning  the range of design issues but still dealing with the complexities of  implementation, and helping the reader through the process of assessing  trade-offs and still matching requirements.	2000-05-13
US	51799128	RFEMB6SLO8612	0201616416	870177034	Extreme Programming Explained: Embrace Change	Books	3	22	28	N	Y	XP = the Psuedo Revolution	The claim, in one of the reviews here, that this book is going to rank w/the Gang of 4 book is patently absurd. This book attempts through a kind of Jonathan Edwards Fire and Brimstone approach to convince the reader to  get its religion, but when you sum it all up, there isn't much religion to  get. All the pillars of the methodology have little or no exposition in the  book (unit testing, pair programming, constant builds). They are all  mentioned and meekly argued for, but none of them are actually examined.  Furthermore, I remember quite distinctly reading about pair programming in  Larry Constantine's far better Peopleware a LONG TIME AGO!<br />Let me add  one other crucial point here: this book attempts to achieve acceptance with  the reader through creating an impression of both an epiphany and  validation. I found that a lot of things that were being espoused here are  things I've been doing a long time. I believe many people will find that to  be true and consequently will like the book because of the sense of  validation it gives. However, when I was done, I couldn't help but think  about how much more could have been done here! How about talking about  actual unit testing examples? Why not talk about structure within groups;  it's far too easy to just say everyone should be doing everything.  Profiling, for instance, is clearly not something everyone should be doing.  Like so many things in the modern world, this is largely a retread wrapping  itself in the cloak of a revolution.	2000-05-13
