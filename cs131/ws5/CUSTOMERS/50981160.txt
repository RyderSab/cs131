US	50981160	R531JBYFJ25YT	0792376099	646290525	Photonic Crystals: The Road from Theory to Practice	Books	4	6	10	N	N	At last, Photonic Crystals book for beginner in the field.	Recently I had been working on simulation of light propagation in photonic crystals, and found that many materials (text, papers, etc) are difficult for beginners, especially non-physics majors like myself (I'm a computer science people).<br />[Note that this book itself does not state that it is for beginners, but the tone of the text itself said it all.]<br />This book fills in the gap nicely. It has a good introduction topics and good explanation, i.e., english rather than mathematical formula, for otherwise rather difficult things. A lot of things, including computational model, are introduced in the text (even I think the computational model section is a little bit shallow). Note that this book might missed out some recent advancement like nonlinear waveguide. However, taking into account that this book is rather for beginners of this rapidly-changing field, it is fine with me.<br />Cons::<BR>This book has some cons, however. First, it is a little bit pricy. Considering that it is only 154 pages long and pricing at 125$, it is almost $1/page. And at this price, you would expect it to be in full colors with good quality paper (like Joannopoulos' previous \\"Photonic Crystals: Molding the Flow of Light\\" book). However, a copy I recieved has rather bad quality paper and only in monochrome. And for this reason, I had lowered the rate of this otherwise a 5-stars book.	2003-02-04
US	50981160	R38UKCCW9TEF1S	1840460784	232316177	Introducing Chaos	Books	1	16	23	N	Y	"Chaos" (not Chaos theory) is all this book introduces you.	I was looking for an easy-to-understand book on Chaos Theory for some non-English speakers (say, some Japanese students) to read, and I personally like \\"Introducing Fractal Geometry\\", so I got my hand on this book...<br />It was a mistake.<br />I would not say much about this. The author did introduce Chaos, not really Chaos theory, to the readers. He tried his best, I believe, to make things easy to understand by simplifying things... However, in doing so, he had just created Chaos.<br />Hence, this book is probably one of the best examples of \\"How Simplicity creates Complexity and Chaos\\"... a simple scheme found in Complex systems (like complex Cellular Automata which emerged from a simple set of rules).<br />One thing, while a lot of names (technical terms) were introduced, almost all of them are left unexplained. And I think only \\"introducing\\" is never enough. (Well, it was the name of the book afterall... this book wasn't named \\"Explaing Chaos\\" :)<br />There are other good books on Chaos for layperson. And, in fact, \\"Introducing Fractal Geometry\\" did a far better job than this one.	2002-05-14
US	50981160	R21JQU4BWYSO3N	0262062186	108780217	How to Design Programs: An Introduction to Programming and Computing	Books	5	96	106	N	N	Should be read by Everyone who wants to program.	Have you ever looked at other people's codes and said to yourself something like &quot;No... this isn't the way it should be written!&quot;. Or, worst yet, have you ever been asked by someone who wants you to read his/her codes and tell him/her what does it do? <br />Both things happened quite often, though.<br />The problems are mainly because they don't know how to &quot;design&quot; their programs properly. Being able to progam doesn't mean being to design/organize a good code at all. And being good at finding/inventing algorithms for problem solving doesn't mean that either.<br />One another thing, I (maybe just only me, I don't know) think that C shouldn't be taught as the first language (at least, not anymore). This is mainly because, in C, you can hardly express yourself. Also, C codes look cryptic to those new to programming. And you must know a lot, and practice a lot, (that takes a lot of time, friend) to be able to express what you want.<BR>And also, several times, I saw many people just playing around with the * and &amp; (well, the pointer-dereferencing, and address-taking symbol in C/C++), adding one more, deleting one off, to see which will make their programs work. (Sometime, it just works by miracle...)<br />This book, using Scheme (a modern dialect of Lisp) as the language of choice. I, personally, agree of choosing it. Scheme was designed in the way such that programmers can focus on what they want to express, rather than imprementation details. From my own experience, I became a better programmer after learning it. (I was already a C++ programmer by that time. I just have to use Lisp on my study/research).<br />One thing that I like is that, it focused on how to &quot;design&quot; programs, not just how to program, while college classes are mostly focused on how to write programs. No matter how students write their codes, if it could run, then it is fine.<br />Then, I think, a lot of people do have ability to program, a lot are good at it. However, the number of people who knows how to design programs are much lesser. And this would result in something like those silly examples at the beginning of this review. Therefore, this book had emphasized on quite an important thing.<br />And the last thing to say about this one is: MIT Press' textbooks are very high-quality, and this one is not an exception. It is very easy to read and to understand. And, even the html version is available at the book's official homepage, it is nice to have the printed version.<br />How to &quot;design&quot; programs is very important for every CS major people, and is important to everyone else in general (to program your &quot;everyday life schedule&quot;, etc). Whether you want to become a professional programmer (write codes for living, etc) or not.	2001-09-27
US	50981160	R32LJ2C3NBF28M	0201441241	102051023	Introduction to Automata Theory, Languages, and Computation (2nd Edition)	Books	4	15	16	N	N	Easier to understand, but not as completed as the first.	Having studied the Formal Language and Automata Theory (FLAT) using the first edition of the text, I think this 2nd edition is much easier to read and to understand. This is a very good thing because the 1st edition was a bit difficult to follow, especially for those who aren't familiar with the subject already. (As stated in the preface of the 2nd ed. that the 1st was written for graduate students who already have the idea of what the subject is all about).<br />Also, I found the approach &quot;Example-&gt;Informal Def-&gt;Formal Def-&gt;Proof&quot; very good, and should be used in more textbook. This way, the readers will have the idea of what they're going to study, what for, and why, instead of pointlessly studying something, forget it, and realize how important it is later (this happened to a lot of people, though). A lot of useful and interesting Theorems were also introduced.<br />However, there're things missing in this edition. For example, the Greibach Normal Form (GNF) for the Context-Free Grammars, which was covered in the 1st edition. I'd talked to the professor who taught the FLAT class I took, and he doesn't seem to like this edition either. He said something like, it is of course easier to understand, but something had been left out. So, he still prefered the 1st edition. (Well, he is a very good researcher in Computation Theory and is now writing a book on Term Rewriting System, another model of computation, which will be published by Springer-Verlag. Don't know when, though. So, this edition is probably too easy for him :-)<br />I, on the other hand, think that this 2nd edition is good on its own ground. It made the subject of Computation Theory easier and more accessible to wider range of people. (You still have to &quot;think&quot; and have Math knowledge anyway).<br />Also check out Michael Sipser's book on Computation Theory. I think that one is somewhat better than this one. It uses lesser Math (don't get me wrong, I like Math), and clearer explanations.<br />Also look for the first edition in Library, used book stores, or wherever you can. That one is definitely a classic, and cannot be replaced by the 2nd edition. I agree with one reviewer here, so bad that this was a new edition, rather than a new book....planations.<BR>Also look for the first edition in Library, used book stores, or wherever you can. That one is definitely a classic, and cannot be replaced by the 2nd edition. I agree with one reviewer here, so bad that this was a new edition, rather than a new book....	2001-09-24
US	50981160	RWN2E3R5X2K2O	0262062003	528496675	The Computational Beauty of Nature: Computer Explorations of Fractals, Chaos, Complex Systems, and Adaptation	Books	5	23	28	N	Y	Real "How Nature Works". Already is "Legend in the Making."	I recently became interested a lot in Nature. Especially, being someone in the field of Computer Science, the computational aspect. And this book is by far one of my favourite among all the \\"How Nature Works\\" kind of books I've read.<br />This Computational Beauty of Nature (CBofN) covered a lot of topics. Ranged from brief introduction to Computation Theory, Fractals, Chaos, Complexity, Adaptation. (See the Table of Content for more details). <br />All topics are written in surprisingly clear and very understandable manner. With as little Math as possible. (From my opinion, these topics cannot be completely understood without Mathematics -- The Language of Nature). Therefore, it is also accessible to layperson. <br />This book does not, however, go so deep into each subject. (You won't expect it to do that with its less-than 500 pages, don't you? :-) Instead, it does give nice backgrounds, fundamental knowledge, and important ideas for each. So, if you are interesting in any of the subjects presented here, you can go on to the more specialized books on your own.<br />One of the nicest feature of this book, which can hardly be found in other text, is that the it does show how things work together, where and why. For example, natural phenomena like adaptation, evolution, computation, and some other things else related to each other. How can one view this from that perspective, and vice versa. etc.<br />One other nice feature of this book is, you can really play with almost all concepts using a number of computer programs. All the programs are downloadable (with source code, under GNU license) from the book's homepage. So, you can reproduce almost all the figures from the book. <br />However, for one thing, the homepage address given in the book, in the edition/printing I have is incorrect. Maybe MIT Press had changed the structure of their website or something...<br />...you can still search for it using your favourite web-search engine.<br />About the website, all the good things are there as well, including errata. (Of course, Perfect things are very rare in Nature... So, books with some errors are ok. The thing that matter is the authors know it/admit it and tell the readers or not).<br />Conclusion: If you want to understand \\"How Nature Works\\" from the computational point of view. If you interested in Chaos theory, Fractals and Complexity. Then, make no mistake, you can't go wrong with this one. (And, get the hardcover edition, because you will read it, read it, read it again, and keep refering to it. So the paperback edition probably can't endure that :-)<br />I want to give it more stars if I only could. This book will always get the highest rating possible from me wherever and whenever I review it.<br />Nature herself is so beautiful. So, it's time to get to know her, to learn about her and to understand her! And this book just did it, in such a way that can hardly be better!	2001-09-24
US	50981160	R1HWZFABQB4S6T	1559534079	833974740	The Heart of Mathematics: An invitation to effective thinking (Textbooks in Mathematical Sciences)	Books	5	103	108	N	N	Without Any Doubt, One of the Best Math Books I've Ever Read	After browsing this book for a while in a book store somewhere near Tokyo station, I decided to buy it immediately, even it's price will about almost doubled the price I would get if I buy from internet. (I bought it for about $115).<br />But, it turned out to be one of the best decision I'd ever made in my life as a book-worm. (Well, I do love reading :-)<br />This book will change the way you look at the world, the way you look at yourself, the way you think, and so on. It is cleary one of the best books on Math I've ever read so far (I do love Math as well :)<br />Instead of throwing you the formulas, the authors lead you to the Mathematical Thinking. How to think this, how to solve that. What Mathematic really is and what are its applications, and why it had been used that way. All explained through simple but fun-to-think example/problems. Using non-technical language, and almost no formula(!). In fact, almost everyone with little math background can enjoy this book. It doesn't seem to require anything more than middle school math. So, you can really see the pictures, the very big pictures, clearly in your mind, which is really importand. <br />With the wide range of content, from Prime Numbers to Chaos, Fractals, Infinity, 4th Dimension, and more. The concept of each is well-explained, in a manner I mentioned earlier. This book will definitely help you to understand the making of &quot;modern&quot; science better. <br />One more thing is: Mathematic is not something that far from our everyday life as some might think. It's the alternative way to view our everyday life. The way with reason, pattern, logic, relation betweening things, and more. (Well, I realized this before start reading this book. But for those who haven't realize, this book will open the door for you).<br />Math can also be fun. (In fact, it IS .. That's why I love it :-)<br />And this book tell you why, and how to find and feel those &quot;fun&quot; and enjoy Math. Without any complicated computation, and limited only by your imagination.	2001-05-28
US	50981160	R24Y4SW375B5KR	0130289272	131782050	Data Structures with STL	Books	1	6	10	N	N	One of the worst, if not the worst, for both topics.	Prentice Hall has quite good reputation for publishing good computer books. (Although my favourite is Addison-Wesley.) This one is not one of them.<br />As a Data Structures book, this book deserved -1 star. As a STL book, however, it does deseverd 2 stars. So, I give it 1 stars in total.<br />Why? This book has one of the worst discussion/explaination on data structures I've ever read. It definitely not for someone who's learning the topic. Since learning data structures require much more discussion, like those in Mark Weiss's books and/or Carrano, Helman, Veroff's books (those are very good, really!). And, more important, this book does not talk about many important algorithm at all (saying the name of the algorithm doesn't count). For example, where is the explaination of Dijkstra's shortest path algorithm, B+ tree, etc?<br />It's not for someone who know the topics either. Since if one knows Data Structures, he/she would pick up the better book on STL (like Josuttis's and/or Musser's ) to learn STL. And write a better thing than what available from this book.<br />As the STL book, it should emphasize more on STL. For example, in the Priority Queue topic, instead of showing the example using priority_quere class, the author used his own implementation. The STL's implementation were briefly mentioned, and that is not enough. <br />Programming style is not-so-good, and some of their usages of STL is not-so-good is well. For example, Floyd's all-pair shortest path algorothm (page 388-399), there is the array version of the algorithm which was about one-and-half page long. And there is one that they called &quot;STL version&quot; which is 5 pages long... what happened? why it is that long? The answer: they used 4 pages to initialize vectors. Now, my question: &quot;Who uses/initialize the vector container this way?&quot;<br />One more thing, main function should return int, not void.<br />Conclusion: If you want Data structures book, look for something else. And if you want STL book, also look for something else. If you want Data Structures using/with STL, you have 2 choices 1) get something else for each, and 2) find some other books for it (Michael Main's lastest and Timothy Budd's DS using STL do the fine job, though...(Budd's is better, but I prefered Weiss's over both).	2001-02-01
US	50981160	R13UNKIUGYXWIU	020170353X	401883413	Accelerated C++: Practical Programming by Example	Books	5	60	66	N	Y	The BEST introduction book on C++ yet!	I have nothing to say about this book, except, among hundreds of C++ &quot;intro-level&quot; books available, this book is simply &quot;the best&quot;. Why?<br />The answer is easy: Because it teachs C++ the way C++ should be taught.<br />Why re-invent the wheel if there are a lot of wheels available for you to use? Why learn to do things in &quot;the hard way&quot; if there is a lot easier ways to do?<br />C++ should be taught from its C-inherited no-more. In C, we used to do something in &quot;the hard way&quot;. For example, just to use string efficiently, one would need to understand pointer properly, since C-string is pointer to char (char*). Just to dynamically store some instances of the object (to store the objects &quot;as needed&quot;), one would need to know how to manipulate pointers, which always lead to problems and confusion, to imprement the dynamic container.<br />And that's what almost all other C++ books try to teach you &quot;first&quot;. And they will teach you what should be taught ealier &quot;later&quot;. You, by that way, it takes longer to be productive, or even to be an able programmer. <br />Then, how C++ should be taught? <br />Bjarne Stroustrup, the father of C++, said clearly in one of his paper, named &quot;Learning Standard C++ as a new Language&quot;, (available in his homepage) something like &quot;Learning a programming language should support the learning of effective programming techniques. My favourite approach is to start teaching the basic language (variables, declaration, loop, etc...), together with a good library&quot;. And this is exactly the approach taught by this book.<br />I, personally, agree with the previous reviewer that with the approach used in this book, pointer and array are easier to understand than learning from the traditional approach.<br />Learning C++ from its standard library aspect can make you a productive programmer in much much shorter time than learning from the traditional approach, which begin with C-subset, and many programming techniques that you have to &quot;unlearn&quot; as you progress on.<br />In case that you're wondering how much you will learn from a book of this size. All I can tell you is, more than you can ever imagine. However, you will have to concentrate on what it's saying. And then, after you finish this book, you will have no (or almost no) problem when moving on to the more difficult (say, more advanced) books like those by Stroustrup, Lippman, Musser &amp; Saini, Austern, Josuttis ... etc (all are my personal favourites).<br />The wheels had been invented. So why not just use them?<br />In short, this book is nothing more than the BEST book on introductory C++ ever written, period.	2000-10-11
US	50981160	R3G47KCH3YWBHM	0072401265	93994715	Computer Science Tapestry (McGraw-Hill Series in Computer Science)	Books	5	3	4	N	N	One of the best, yet forgotten, book of OOP &amp; C++ , Period.	What should I say about this book... Hmm, from my feeling, this is one of  the best in &quot;Introduction&quot; to Object-Oriented Programming in C++  (from more than 20 C++ books I've read..). Why?<br />First, I really like the  way the author explain things, it's very easy to understand, concise and  clear. The programming style is also very good.<br />Second, this book teach  C++ in the way C+ should be taught. For example, instead of using the array  of characters or pointer to charecters to make string, this book use  standard string class from the beginning. And instead of using array, it  use vector container class.. and so on. Don't get me wrong, I'm not one of  those STL crazed person. However, I have to admit that STL changed the way  of programming the C++ dramatically. And at least, Bjarne Stroustrup, the  creator of C++, said the same thing (the way C++ should be taught,  something like that. You can refer to this homepage for more information  about this).<br />And one thing that made this book different from the rest,  the approach of introducing the &quot;Class&quot;.<br />Instead of creating  the class first, then use your own class in your program, this book teach  you how to &quot;use&quot; class to code. The reader will see how easier  things (and more beautiful code) become when using classes, compare to not  using them. Then, after using those classes for a while, you'll know how  you &quot;should&quot; write your own. <br />This book, of course, also teach  you how to implement the class. But the &quot;idea&quot; of what the class  is, how important it is, and how should blah blah blah, is also very  important.. And that sort of information seems to be missed from the other  books, at least missed from where it should be mentioned. (Anyway, in real  world programming... you'll likely to use the class libraries someone had  implemented, and then expand them, more than write your own classes from  scrath).<br />One downside... using his own classes in the example means..  most of the example are not ANSI compliant. Therefore, you can't just type  them down and compile them without downloading those files (maybe it's in  CD-ROM, I've checked the CD yet.. since I already download them from this  book's website at Duke university). And, therefore, someone who is really  &quot;novice&quot; might have no idea what this book is talking about when  it start mentioning the strange header files which are not parts of  Standard library.<br />And also, there're also some little problems with the  examples. However, it's not the severe like those in Herbert Schildt's and  Walter Savitch's books.<br />This book will, believe me, help you a lot in  your programming career with C++ and Object-Oriented. And it's definitely  one of the best in this genre.	2000-08-09
US	50981160	R15OJ6MB4BBFAY	0072322039	781056047	A Computer Science Tapestry	Books	5	5	7	N	N	One of the best, yet forgotten, book on OOP &amp; C++, Period.	What should I say about this book... Hmm, from my feeling, this is one of  the best in &quot;Introduction&quot; to Object-Oriented Programming in C++  (from more than 20 C++ books I've read..). Why?<br /> First, I really like the  way the author explain things, it's very easy to understand, concise and  clear. The programming style is also very good.<br />Second, this book teach  C++ in the way C+ should be taught. For example, instead of using the array  of characters or pointer         to charecters to make string, this book  use standard string class from the beginning. And instead of using array,  it use vector container class.. and so on. Don't get me wrong, I'm not one  of those STL crazed person. However, I have to admit that STL changed the  way of programming the C++ dramatically. And at least, Bjarne Stroustrup,  the creator of C++, said the same thing (the way C++ should be taught,  something like that. You can refer to this homepage for more information  about this).<br /> And one thing that made this book different from the rest,  the approach of introducing the &quot;Class&quot;. Instead of creating the  class first, then use your own class in your program, this book teach you  how to &quot;use&quot; class to code. The reader will see how easier things  (and more beautiful code) become when using classes, compare to not using  them. Then, after using those classes for a while, you'll know how you  &quot;should&quot; write your own.<br />  This book, of course, also teach you  how to implement the class. But the &quot;idea&quot; of what the class is,  how important it is, and how should blah blah blah, is also very  important.. And that sort of information seems to be missed from the other  books, at least missed from where it should be mentioned. (Anyway, in real  world programming... you'll likely to use the class libraries someone had  implemented, and then expand them, more than write your own classes from  scrath).<br /> One downside... using his own classes in the example means..  most of the example are not ANSI compliant. Therefore, you can't just type  them down and compile them without downloading those files (maybe it's in  CD-ROM, I've checked the CD yet.. since I already download them from this  book's website at Duke university). And, therefore, someone who is really  &quot;novice&quot; might have no idea what this book is talking about when  it start mentioning the strange header files which are not parts of  Standard library.<br />And also, there're also some little problems with the  examples. However, it's not the severe like those in Herbert Schildt's and  Walter Savitch's books.<br />This book will, believe me, help you a lot in  your programming career with C++ and Object-Oriented. And it's definitely  one of the best in this genre.	2000-08-09
US	50981160	R1XTAONGKGT9N0	0137123582	834539419	CGI: Internet Programming in C++ and C	Books	5	9	9	N	N	Until the better one come out, this is one of the best	I am one of C++ programmers who had been writting C++ codes for years. Recently, I have to write web programming (called CGI programs), and I don't want to learn a new language like Perl or Tcl... So, I wondered  around everywhere finding any book that could give me any idea about how to  write CGI programs in C/C++, and luckily, I found this book.<br />While not  perfect (from my experience with over 20 C++ books, none is perfect), this  book does what it should. Although a lot of codes won't compile without  some modification (compiler depends... I compiled them using g++ on IRIX  platform, check yours). Anyway, I found it challenging to find bugs in his  code, since that helped my understanding of several things (but without  bugs is better anyway :-).<br />Apart from that problems, there are also other  drawback points. The most important one is, the author's e-mail address!   I was trying to send some mails to ask him some question. However, it seems  that the address is wrong.. (although I checked that in the book's  homepage!). Well, if anyone know his correct e-mail address, would you  please send me that information?<br />However, I do agree with some reviewers  about the price of this book. It should be much cheaper, when consider  about the size of the book, and (it is paperback cover..). Anyway, since  books for CGI programming in C/C++ are rare, it might be considerable  fine....<br />And why I still gave this book 5 stars?  Well, as I said, from  my opinion this is one of the best for CGI programming &quot;without&quot;  Perl &amp; Tcl book. At least until the better one come out.	2000-06-25
US	50981160	R1CZCBJUWB590E	0201357496	136505530	Problem Solving With C++: The Object of Programming	Books	2	5	10	N	N	Isn't that good... Doesn't live up to its hype	To be honest, I have to tell you something. I did not read every lines written in this book, and I haven't read the entire book yet.<br />However, from my years of living with C++ codes (5 years should be long enough, I  think), I think I know C++ enough without doing that (read every lines of  the entire book..etc)<br />Now, many people asked me to teach C++... and I was  looking for a good textbook. I came in Amazon and read some reviews about  this book, and I think I should try reading it.. (and it was published from  Addison-Wesley, my favourite computer-book publisher). The following are my  feeling about the book :<br />First, when I look at the very first source  code, I had a bad feeling about that. What?  Well, it included the  &quot;classic-but-old&quot; .h header file. This is still OK a year ago.  But as the standard for C++ had been finalized, ... this book wasn't  written in the &quot;Standard&quot; C++, but the &quot;pre-standard&quot;  one! (And whoever learn to code from this one will suffer from somethings  that are available in Std C++, but weren't there in the earlier  C++)<br />Next, I, personally, don't like the approach that the author used. I  mean, using some low-level programming, like using char* (or char[]),  instead of a better string class (at least until page 619)...and array  instead of vector.. etc. I would never do that if I have to teach someone  C++ (at least, Bjarne Stroustrup, the creator of C++, said the same thing.  Please refer to his homepage for more information).<br />Well, one next thing  that quite unacceptable for me is that, this book did not mention STL  (Standard Template Library), which is a essential part of the ANSI/ISO C++  now. And the containers, algorithms, and things in STL had already take  programming in C++ into next era. And those who don't know/understand STL  will be left-behind. (Well, the author did use the string class... however,  the string class (actually, basic_string) is not a part of the STL).<br />One  more thing, which I found in the last chapter about inheritance. The author  didn't make the base class destructor virtual when it is intended to  support polymorphic hierarchy (in a pet example, page 844-845).<br />Believe  me, there are much better books around (at least on my shelf :-)	2000-06-21
US	50981160	R1MT4ATHSZ5LUR	0131238035	747937486	The X Window System: Programming and Applications with Xt, OSF/Motif (2nd Edition)	Books	5	6	7	N	N	One of the best for Xt/Motif Programming	Once upon a time, when I moved from Windows programming environment to X-Windows.. I found things were so diffiult for me.<br />Lucky me, one day I went to the library and found this book. It helped me to get start with X  programming in s considerable short time. The step of this book is quite  easy to follow, and not difficult to understand. At least it made X more  friendly to me. Although it was Japanese edition and my Japanese isn't that  good. (And I will buy the English edition soon).<br />If you want to program  in X, this one is a must, Along O'Reilly X Reference Series (which I think  is the best of X-Ref).	2000-06-05
US	50981160	R1TJ51S7S9IGZ	020161250X	620256858	Data Structures and Problem Solving Using C++ (2nd Edition)	Books	5	15	15	N	N	Data Structure &amp; Algorithms Using &quot;Real&quot; C++	This book is definitely the best from Mark Weiss yet. The explainations about Data structures and algorithms are very good and not-so-academic as in his other book (named &quot;Data Structures &amp; Algorithm Analysis in  C++&quot;, which is also very good one).<br />I found that the books about  Data structures &amp; algorithm are always given a not-so-good review,  because it doesn't show enough code example or for being too academic.  However, this one really deserved 5 stars from me.<br />The code examples are  very good and easy-to-understand for any intermediate C++ programmer (and,  of course, for any advenced C++ programmer).  So, you can easily use this  book for self-study (a lot of people said that his previous book, the one I  mentioned above, doesn't suit for self-study, dued to being too-academic).  And moreover, the code in this book is true to its name &quot;using  C++&quot;. <br />All codes examples are written in real C++, no C-style code  fragment here! And with the ability of the Standard Template Library (not  all example, only the suitable one). For example : the STL's priority_queue  container class was used in Dijkstra's shortest path algorithm, and that is  the way it should be implement.<br />Last word I wish to say about this book  is, &quot;It is clearly one of the best book on Data Structures,  Algorithms, C++ and How-To-Use C++ I've read so far.&quot;<br />Thank you,  Mr.Weiss. Keep up a good work. I hope this one will get even better in its  next edition.	2000-06-05
US	50981160	R48C284C3UQYF	1571691596	357433673	The Waite Group's C++ How-To (How-To Series)	Books	4	4	4	N	N	Very good book. Very good approach.	First, I like the approach of this book. The &quot;How could I do ... ?&quot; is good for refresh your memory. Since sometime you might forget, or become unsure about how something can be done.<br />Despite what it said in  the back cover, I think that, this book is suitable for the someone who is  about to become an intermediate C++ programmer (the advanced-beginner, or  something like that). Why? Because when I was one, I always get confused  about &quot;How could I do &lt;something&gt;&quot;, or &quot;How should I  involve &lt;some facilities&gt;&quot;, and this book provided almost all  answer to those questions I used to have. And even now, it still worth my  time reading it.<br />The code examples are very easy to understand. However,  I found that each author's programming style are quite different. This is  fine for someone who already has his/her own style. But for someone who  doesn't, this might lead to confusion, and bad programming style (mixed  style) later on.<br />Also, one thing... I found that in (almnost?) all code,  main() return void, which is not correct. According to the Standard, main()  should return int for some reason, like for checking the termination of the  program. I don't know about Visual C++, but in many compiler, you will get  the warning message if your main() does not return int.<br />Overall, this is  a very good book, and it deserve 4 stars from me. However, it still can  become a much better book.<br />To the authors : How about &quot;More C++  How-To&quot; or &quot;Advanced C++ : How-To&quot; ?	2000-06-05
US	50981160	R1ULMIHU0Z396X	0134549767	300675772	The STL (Primer)	Books	3	2	2	N	Y	More of a &quot;Reference&quot; than a &quot;Primer&quot;	I don't like to give any book a low-rated review (see my other reviews). However, this one deserved that. Despited its name, this book only contain short-lists of each container, algorithm, and other things else in the STL.  This is, in fact, not a &quot;Primer&quot;. For this kind of book, isn't we  called it a &quot;Reference&quot;?<br />The examples in the book are good for  showing the readers &quot;how to use the whatever it refered to&quot;.  However that's all they did. I think it would have been better if some of  Real-World examples had been included (like those in Lippman's masterpiece  C++ Primer, or Prata's C++ Primer Plus).<br />So.. why do I still give it 3  stars?<br />Well it still can be use as a reference when I need to look for  something (because its size is quite small...), and I'm not connect on the  net...(I found Dinkumware's on-line C/C++ Reference to be very similiar to  this one).	2000-05-11
US	50981160	R2VLOFMZDR4OES	0201824701	825467502	C++ Primer (3rd Edition)	Books	5	13	14	N	Y	Pretty Good, but should change the title....(why?)	After years of being a C++ programmer, read quite a lot of books (about 20, I think)... I considered this one as one of my favourite, that I usually refer to when I have some problem. <br />However, this book is  definitely not-for-beginner. So, some of the reader might be misleading  by/confuse with its title. The writers had stated this clearly on the back  cover, which said &quot;for developers new to C++&quot; and in the preface,  which said &quot;This book is intended as a first book on C++; it is NOT  intended as a first book on programming!&quot; (However, it's a Primer for  &quot;C++&quot; not for &quot;Programming&quot; anyway :-)<br />One big thing  that made this book different from most of the C++ introductory books is,  this book provided a lot of &quot;real-world&quot; program examples. Here,  I really mean &quot;real world&quot;, the program that you can really  &quot;use&quot; (maybe after make them a bit more advanced/complete), like  the text query system. While all other books provided some little codes to  illustrate the points. Ok, that's better for those who know nothing,  someone who come to C++ &quot;from scratch&quot;, something like that...  But after you finished it, you still might not get the idea of how to put  them together , unless there are any bigger program to illustrate the  idea.<br />Note to those who are new to programming : Read other book first,  so you won't blame on a good book like this.<br />Note to everyone who had  been misleaded by this book's title : Make sure you've read the back cover  and the preface of any book before buying it, if you can... (if you can't,  you have to try your luck..., good luck for you then :-)	2000-04-25
US	50981160	RCPXYVU8BSR6A	0201700735	298626172	The C++ Programming Language: Special Edition (3rd Edition)	Books	5	68	72	N	Y	One of the Best &amp; Most Completed C++ Books Ever!	From my years of being a C++ programmer, this is definitely the one of the best reference books I've ever used. This book cover all the aspects of C++, one of the most complicated programming language, with a nice detail  of everything, including STL (Standard Template Library, the C++ new  standard library).<br />However, this book is, like all of the previous  editions, NOT a language/programming tutorial. To read this book, you will  need tons of C++ &amp; OOP knowledge, even if you are an ace C programmer  (since C is quite different from C++ in &quot;The Way of Thinking&quot;).  Especially, if you are a novice, please read one or two &quot;good&quot;  primer book before coming to this one, otherwise you will get lost easily.  (Believe me, it's happened to me before when I tried to read the 2nd  edition).<br />Moreover. In this edition, the author, Bjarne Stroustrup, added  2 more appendixes on &quot;locales&quot; and &quot;standard library  exception safety&quot;, which would make this book even more useful and  more complete than any previous editions. And would make this become  &quot;A Bible&quot; for C++ Programmaing Language.<br />If you are a  &quot;serious&quot; C++ programmer (or wannabe), you can't get anything  better than this. This is a MUST!	2000-04-14
US	50981160	R2KZTG3QHMQMP7	0201308215	997830648	Linux Application Development	Books	5	9	11	N	N	If you want to program UNIX &amp; Linux, you need this.	This should be one of the best Linux &amp; UNIX programming books available in the market. It provided &amp; covers most Linux's system calls in such detailed, although not as good as &quot;Advanced Programming in  UNIX Environment&quot;, which does a &quot;perfect (or almost)&quot; job  (with almost twice the size of this book, though). <br />About programming the  X Windows, I think it is OK to exclude the topics about X from this book.  Since this book is about programming in Linux environment, not making the X  application. (Like Stroustrup's &quot;The C++ Programming Language&quot;  didn't even mention the MFC..) <br />Finally, I, personally, think that  &quot;This is the book that Linux &amp; UNIX programmers should have  consider about having it&quot;.	2000-01-13
US	50981160	RC6744DG8L2XC	0201563177	673455254	Advanced Programming in the UNIX(R) Environment (Addison-Wesley Professional Computing Series)	Books	5	6	10	N	Y	A Must Have for any UNIX &amp; Linux Programmers	This book should always in the reachable place for any UNIX &amp; Linux programmers. This is probraby the most detailed book about UNIX programming in the market. Moreover, the writting style is easy-to-understand, and the  examples are really usable and make sense (unlike many examples in many  other books..).<br />Now, I really want to know if the author has any plan for  writting &quot;Advanced Programming in the MFC&quot;, which would become a  best book on MFC and he did with this one.<br />Finally : Don't live without  this book, if you want to program in UNIX &amp; Linux.	2000-01-12
US	50981160	R2TDKSHQ086G0D	0672314118	249480224	Unix Unleashed	Books	5	10	10	N	N	One of the BEST and DETAILED books on UNIX!	This book is, for me, one of the best books I have read on UNIX.  This book gives you a very nice &amp; easy start with this old, but powerfull operating system. However, once you finished this book, you will master  UNIX in most (if not all) aspects. Because this book covers UNIX in all  aspects, including system admisnistrating, all in such a great  detail.<br />Buy this one, if you have to live with UNIX or want to understand  UNIX. You have no better choice than this one!	1999-12-17
US	50981160	R3CXLW5DAVMVMY	0201350882	786346942	Algorithms in C++, Parts 1-4: Fundamentals, Data Structure, Sorting, Searching, Third Edition	Books	5	7	10	N	N	When will Part II come out? (I can't wait anymore! )	I have read the previos edition of this book, I like it .. but not much. However, that is the old story....<br />Mr. Sedgewick had done a very good job in this edition, which is FAR BETTER than any of his previos editions, and  this make it one of the best algorithms books you can find.<br />After reading  this book, my understand more of what I thought I already know, like those  sorting &amp; searching algorithms.<br />The outstanding book on algorithms by  the well-known author, Robert Sedgewick. what more do you want, then?	1999-12-17
US	50981160	R2EQHB4GYQD8C8	0201895501	742432647	Object-Oriented Programming Using C++ (2nd Edition)	Books	5	0	1	N	N	Please...DO NOT get this book wrong.	Don't get this book wrong. This is not a book that teach about C++ language or a reference. This is a book about Object-Oriented Programming in C++ language. This means you will need to know C++ well enough before  read it.<br />The contents of this book is fine, cover a lot of OOP ideas, and  could be use as a good OOP tutorial, since it provided a way of think in  OOP.<br />For readers who said this book is imcomplete about function  declarations, please make sure that you really read this one, not just  skimmed pass it. The function of page 7 is actually the declaration, he  defined it later on page 9. And the &quot;hello world&quot; compiled and  ran fine with my VC++ compiler, as well as the GNU compiler on Linux. So,  please check this carefully. Thank you.	1999-12-07
US	50981160	RZS1379Y3DFQZ	0672315157	412159056	Sams Teach Yourself C++ in 21 Days, Third Edition	Books	4	3	4	N	N	Good book, good place to start...but...	After years of being a C++ programmer, having read a lot of GOOD books, my opinion toward this one, after a while of reading it in the library (I just love reading programming books..) is...<br />It could have been a very good  place to start learning C++, but it still have something that aren't clear  enough. The first week was great, however. After that, you might become  confuse with the content, as some areas are so easy to get lost in, like  pointer. <br />While there are many books that do a better job for teach  programming, this still be the good books. And, even they share the almost  the same name, I prefer this one over Schildt's Teach Yourself C++ one.  (Just ignore Mr. Schildt's books if you can! )	1999-12-03
US	50981160	R37D8GYU64FM4C	0201514591	696649868	The Annotated C++ Reference Manual	Books	5	7	8	N	N	Timeless Reference for C++ Programmers	This book is, definitely the one of the best references available. It provided a lot of things that you won't find in any other references.<br />However, this is the reference for &quot;C++&quot; not its  library. (And being the reference for the language itself made this book a  timeless reference). So, if you want those information, you might be  disappoint. But if the thing you want to the better understanding of C++,  this book belong to your shelf.	1999-12-03
US	50981160	R27NUDAXRABMZ1	0789720795	168779695	C++ from Scratch (The Jesse Liberty's from Scratch Series)	Books	3	2	3	N	N	Good...but can't stand alone	The idea of this book is quite good.... However, you still need a good primer and a good reference, since this book failed to do in both aspects. For a complicated like C++, this book simply too short. Of course, it  covers a lot of things and in the end you could create that game... but  what's about the other things else that Mr.Liberty missed? <br />Anyway, the  way of learning is depend on people, each people has his/her own style of  learning. So, this one might worth a try.... read it first, in the library  or bookstore somewhere... buy it if you like it. However, I still believe  that if you buy this one, you will need a good primer and a reference.	1999-12-02
US	50981160	R2XE51TQLZXBPR	1571691626	206028059	The Waite Group's C++ Primer Plus	Books	5	10	10	N	Y	One of the Best for Beginner &amp; Novice	This book give a reader a very nice touch of C++. Especially if you are a novice/beginner, this is the one that could help you become a real C++ programmer in a future. The explaination is clear, and the examples are  nice and easy to understand. I recommend this one before moving on to the  more advanced books like Lippman's C++ Primer and the more advanced  books...later on.<br />Of course, this book has some typos, but I don't really  care about this. The content is far more important for me, and it should be  for you also.	1999-12-01
US	50981160	R38Q4ZOAR3QW4S	0201889544	298626172	The C++ Programming Language (3rd Edition)	Books	5	23	24	N	N	One of the GREATEST Reference, but NOT a Tutorial.	From my years of C++, this is definitely the one of the best reference books available. This book cover all the aspects of C++, one of the most complicated programming language, with a nice detail of everything,  including STL.<br />However, this book is NOT a language/programming tutorial.  To read this book, you might need tons of C++ &amp; OOP knowledges, even if  you are an ace C programmer. If you are a novice, please read any  &quot;good&quot; primer book before coming to this one, or you will get  lost easily.<br />If you are a C++ programmer, you can't get anything better  than this! This is a MUST, and should be on all C++ programmers' shelf!	1999-11-26
US	50981160	R1A6SRMCH6CU4Y	0131103709	39144792	C Programming Language, 2nd Ed	Books	5	4	4	N	N	The Best Ever, For All The Languages Existing in The World!	Once upon a time, I found this book in a library somewhere, I picked it up and fell in love with it. And couldn't wait to buy myself a copy.<br />And, as far as I have read, this is definitely the best book on any language, not  just programming language (as I have read a lot of book the teach Spanish  &amp; German, and still can't find any that as good as this book :-)<br />Buy  this book if you are a programmer, not just C programmer, but any language.  As a C++ and Java programmer, I found this book very helpful with a lot of  things. It might be difficult in the first place, but once you understand  it, you will find yourself in a new world fo programming.	1999-11-26
US	50981160	RGM15TU0Y6IBK	0672310694	485555601	Teach Yourself C in 21 Days (Sams Teach Yourself)	Books	5	2	2	N	Y	Nice book	This book is nice one, I'm sure that it could make you understand the language. I'm a C++ programmer, but somehow I have to read/analyze C code very often (since C is more popular than C++ in Japan). This book is  well-done in many aspects. However, there are still something/functions  that shouldn't be use. For example, the author used &quot;gets()&quot;  function, which is dangerous.<br />Anyway, overall this is a nice book on C  tutorial. Note for noive/beginner don't hope to finish it within 21 Days,  remember that learning any language, not just programming language, take  times.	1999-11-23
US	50981160	R2DFLIDW23V9OA	0764503898	774122212	C++ for Dummies (3rd ed)	Books	1	4	8	N	N	C++ for (BECOME) Dummies	I have years of experience in C++ programming, have read more than 10 &quot;GOOD&quot; books (a la Lippman's C++ primer, Stroustrup's C++ ARM and more..)... And one day, I found this book in the library, so I picked it up  to see what sort of book this is.. (because I like reading programming  stuff..) ... And all I have to say about this is already in the title  line.... This is not the book for dummies, it is for become a dummy in  programming world.<br />If you are a novice, I think there are a lot of books  that have done a far better job than this one.	1999-11-22
US	50981160	R1G7MOXXLNR5TZ	0131170031	533406966	Draft Standard C++ Library, The	Books	5	4	4	N	Y	Best Ref. for C++ &quot;Classic &quot; Standard Library, period.	If you think that the STL will bring the end to the C++ standard library, I think you might be wrong. I don't know if I was wrong or not, but as a programmer who had grown up with the standard C++ library, I believe that  there are a lot of life left in it. I started my career with C++, not C,  but I do know that the standard library is the bridge that connect C++ and  C, without it, anyone who come from C to C++ will have a lot of problem.  <br />Because of this, what you need is a reference that cover all aspects of  library in great detail. And I think this book had done a fine job with  this. Like Mr. Plauger own &quot;Standard C Library&quot; book, this book's  not just telling you what each function do, but it also provided source  code for all of them. So, what is a better way to study and understand the  standard library?<br />For me, this book has its place next to Stroustrup's  The C++ Programming Language and Josuttis's The C++ Standard Library. (And  now, I'm waiting for Mr.Plauger's upcoming STL book )	1999-11-22
