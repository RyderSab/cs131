US	42961399	R2UN60CKWLUPGR	0321269349	537716622	Fit for Developing Software: Framework for Integrated Tests	Books	4	3	4	N	N	Great introduction to tools, technology, use, and rollout	This book is great not just because of the quality of the writing or the tool being targeted. The authors do an excellent job of motivating the reason for using their testing tools, how to use them in situations and applications that are realistic, and how to roll them out within organizations. The Fit framework is clearly presented, well documented, and this book is about all you should need in terms of education to use it.<br /><br />I would highly recommend the book to anybody looking to bring a new integration testing strategy online for their product.<br /><br />The only thing I would've liked to see was a bit of broader-scope coverage. Some large shops actually have a significant amount of testing infrastructure, testing tools, and test case management software in place. How should this integrate? And how does it scale to hundreds of thousands of tests? And is there anything you wouldn't use it for - like, say, compiler conformance tests? I doubt that any testing framework is all things for all people, and would've liked to see where the edges are.	2005-09-17
US	42961399	R2BBKPNJQ7N6FT	0071392319	122340727	The Toyota Way: 14 Management Principles from the World's Greatest Manufacturer	Books	4	0	1	N	N	Learn what the "Agile Software" people have missed in the conversion	This was an excellent book in its own right, focusing on the pillars of excellent that define Toyota's success and discussing how it can or can't be applied to both culturally and technically different fields. The only issue I had with it was the lack of detailed discussions (perhaps because of NDAs?) of what precisely was done to, say, get one-piece-flow in some service organizations. I just had trouble picturing the transformation of machines, people, and services into concrete metrics that justified the work done - and that cuts across most of the examples in the book. While I'm as much of a fan of \\"facts over metrics\\" as anybody who is skeptical of statistics, I still like to see some way to measure return on investment or increased efficiency after a rollout is complete.<br /><br />The bigger benefit, though, is that this book catalogs the root from which a lot of the Lean and Agile work in the software development community has taken its cues. In that conversion to software, some of the fundamental pieces, like jidoka (stopping to fix problems to get quality right the first time) have largely been lost, as have many of the more philosophical principles that supported the long-term success. If you're building your own process cocktail and are already fairly well-versed in Scrum, Crystal, XP, DSDM, and FDD, this is a great book to pick up to make sure you haven't lost some of the overarching philosophy.	2005-09-06
US	42961399	R2ZKV1GRGRBK9L	0131855174	664032382	In the Line of Fire: How to Handle Tough Questions...When It Counts	Books	4	7	8	N	N	Excellent technique, but examples are hard to relate	The technique presented resonated with me: understand what the questioner was asking, answer honestly, and make sure to tie it back into the point you want to make. He overlaid this with two metaphors (martial arts and a sort of historical/sporting analogy) to help keep it in your head. The book is short, to the point, and contains the sort of lessons that you'll be able to take with you without having to crack out the book.<br /><br />The only thing I didn't take a lot out of was the dissection of the political debates. It's balanced - independants, republicans, and democrats are all equally picked apart - so it's not platform that's an issue. Rather, I'm assuming this book is targeted at people doing presentations and then opening up to questions at conferences to an audience, in a board room to a set of directors, or in a small room to a set of peers. I found the types of questions and appropriate responses in the political debates dissected hard to relate to the types of questions I usually see and get in a more business-oriented forum. I can understand that business material is probably harder to come by and make a companion DVD out of, but I think the target audience would get more direct value out of the examples that way - and the book would have avoided any pretense of political leanings.	2005-08-14
US	42961399	R2OZGCBW0JO5WV	0131240714	655932857	Managing Agile Projects	Books	2	26	28	N	N	Inconsistent, imprecise, and too much of a CCPace advertisement	I admired the goal of this book - to introduce the ideas of agile project management and to bridge the gap between the tomes describing methodologies and the concrete role that managers and leaders play on agile teams. A book that did that well would indeed be a worthy first gift to a new manager. Unfortunately, this isn't that book.<br /><br />The inconsistent messages made it difficult to pull out concrete recommendations. For example, one of the key activities identified for a manager is to \\"monitor and adapt\\" to the team and corporate cultures. Later, though, he talks about entering situations sight-unseen with the goal to institute and enforce all of the rules of XP on a subject organization to the letter.<br /><br />Lack of detail hurt the sections on catering a process to an organization. He goes into some detail on how to characterize the current culture and profile of the environment you're about to work in, but then just shows two extremes and potential \\"process cocktails\\" that might work for them. I would've loved to see, in addition, a list of the practices that you might try to roll out, and the specific elements of an organization's profile that make them more or less applicable so that a manager can come up with their own or at least know what negative experiences to expect.<br /><br />Finally, the consulting company he works for comes across as some sort of omniscient savior. Either he's been extremely lucky or things are being sugar-coated. As he points out, agile projects are \\"chaordic\\" - right on the border between chaos and order. Real boats rock, and many of the best lessons in practical application come from the experiences of overcorrection or failing to act. I'd argue any significant project attempting to roll out agile methods will have some of those bumps along the way, and anyone who claims otherwise is trying to sell you something.<br /><br />I did enjoy the section on creating an conveying the project vision - he's quite correct that in a situation where you're relying a lot on the team to self-organize, communicating and reinforcing that vision and the team's goals are probably the top success factor for the project.that in a situation where you're relying a lot on the team to self-organize, communicating and reinforcing that vision and the team's goals are probably the top success factor for the project.	2005-08-14
US	42961399	R1IDS6U441VWR6	0321321316	65612605	The Software Development Edge: Essays on Managing Successful Projects	Books	4	2	3	N	N	Insightful and applicable, detracted only by a couple of outliers	The chapters on project management, commitment, values, communication, and people growth are worth the price of admission. He clearly calls out best practices and warning signs for software projects big and small, and also brings a bit of hard-nosed reality where many people are afraid to do so today. Understanding where to stand fast and where to be flexible is a hard line, especially in crowds that push the \\"this is an art\\" or \\"big projects have variables you can't control\\" buttons. Much of what he said resonated with my experiences of what goes well and what can go horribly wrong in projects with large numbers of people.<br /><br />The book did have a few oddball bits in there, though. The \\"how to sell UML\\" chapter felt like it was out of a Rational marketing manual. Additionally, the data and numbers focus in several chapters made it a bit unweildy if you're in an organization like mine where COCOMO estimates are an item of jokes and ridicule, not the serious measurement tools of this book. The chapters on random numbers and software-batteries felt like the \\"in-between\\" posts you see on some blogs - just space fillers until you get back to the regularly scheduled programming.	2005-08-07
US	42961399	R1R0ZHUFL0FUHK	0596007868	585526136	The Art of Project Management (Theory in Practice (O'Reilly))	Books	5	59	61	N	Y	Practical, useful advice on how to realistically run a project	Scott does a great job in this book of providing well-organized, practically useful guidance on how to work on and run a project. Even if you're not actually in charge of a project, I'd recommend this as a book to help you understand what should be getting done on it. The three biggest areas he focuses on are how to ensure a project has proper focus and clear priorities, how to run meetings and do feature-level design, and how to handle a project as it moves from start to finish.<br /><br />The key to proper focus and clear priorities is the tie between the mission, goals, features, and tasks in a project. Scott provides a great framework for tying them together, ensuring they're created, and ensuring the team understands them.<br /><br />The advice on running meetings and doing feature-level design is the only area that might not work as well for those outside of Microsoft. While I highly identify with it, and think that he's clearly stated the best practices for our environment, your mileage may vary.<br /><br />Finally, he does a great job of talking about the difference between the start, middle, and end-game. Many people try to use a single process throughout and either overburden the start of the project or allow the end-game to spin wildly out of control. Scott's very clear about how to apply the right level of touch and raise the process bar at safe but necessary increments as a project goes on.<br /><br />The only negative thing I could find in the book is that some of the proofreading on the figures wasn't up to the same quality as the text. References to figures are sometimes pointing to the wrong one, and occasionally the legends are mislabeled.	2005-07-21
US	42961399	R1W0D2VMTPXN40	075066455X	860069162	Managing Stakeholders in Software Development Projects (Computer Weekly Professional)	Books	1	0	0	N	N	Hard to get anything out of	As a current practicing software development project manager, I was hoping for strategies of engagement, tips and tricks on how to work best with stakeholders, and common best and worst practices. Unfortunately, this book reads like a glommed-together survey of current research and techniques. Tips like \\"have a defined methodology for your project\\" aren't helpful to me. I really wasn't able to get anything useful to my day-to-day life out of this.<br /><br />On the other hand, if I was looking to write a paper on the field of stakeholder management, this seemed to provide a pretty wide introduction and set of pointers into the literature and current research.	2005-07-14
US	42961399	R1B3CT3PUFCLY3	0201758652	190061369	Software Project Management: A Real-World Guide to Success	Books	3	2	2	N	N	Good as a textbook, lacking for real-world engineers	If I were back in school and knew nothing of what I've learned from working, this would be an excellent book. It's an engaging read, covers a variety of important topics at both an appropriate and realistic level, and also provides some concrete methodology suggestions.<br /><br />However, without the supplementation of a lecture & exercise format, much of this isn't immediately useful for practicing engineers. To really \\"get\\" the lessons, you would likely need either anecdotal stories or real-world case study data presented. Most great software engineering books lean towards the former, since the latter requires help from a Real Human to get the most value you of. This book - geared towards an educational environment - leans towards the case study data.<br /><br />Also, since it's more of a broad overview than an in-depth study of a particular area of software project management (planning, methodology, people management, political work, etc.), it doesn't  even give quite enough of a survey of techniques to dig deeper. At least, it would've been nice to point at a few of the introductory pieces of work or the landscape of available choices. Instead, this book usually paints a broad picture (i.e. \\"use the appropriate methodology for the team size\\") and then talks about one specific way of solving the problem (TSP/PSP).<br /><br />Still, if I were back in school, I would be happy to have this as a textbook - provided I had an instructor who could fill in the gaps.	2005-07-05
US	42961399	R1FMM942AAUIHW	1593372787	222952614	Get Them On Your Side	Books	4	3	3	N	N	Practically applicable, but limited-term thinking	Being politically savvy - especially within a large organization - is crucial to the success of any project you want to drive that will have substantial impact on the organization. Political savvy, though, is easy to overdo and end up with you looking manipulative or power-hungry. This book does an excellent job instructing how to walk that line and still be successful without burning too many bridges.<br /><br />The only reason that this isn't a 5-star book is that it ignores the long-term story. There's another huge element that involves past performance and current support that you are also giving and is largely ignored. Additionally, the book doesn't hit on the importance of proper recognition of your early supporters at the successful completion of the project in order to ensure they're with you again the next time around. Still, though, this was a quick, enjoyable read, and I even picked up an additional thing or two.	2005-07-01
US	42961399	R29MIY1KUQWFZV	0060753943	64382191	Winning	Books	5	2	5	N	N	Understand Welch's management and professional success	I was expecting a book that merely covered some historical references to some of his business activities and perhaps contained some general platitudes. However, this book makes bold statements about broad policies you should take both as a manager and a leader. It's written with the straightforward, focused-topic style that I would expect from a management tome from the HBR - no surprise given his wife's past experiences.<br /><br />I would highly recommend this to managers, particularly for his elements of pragmatism (around six sigma and bad bosses) and the fuzzy pieces (on people management, strategy, and mission/values).	2005-06-08
US	42961399	R3OY6VYW4U7BYV	078214361X	958135317	Developer to Designer: GUI Design for the Busy Developer	Books	2	14	14	N	N	Good for guidelines, but lacking on design	Resources on how to use each of the UI controls and dialog styles in which circumstance are scattered throughout the MSDN library and articles. This book does a great job of bringing all of that information together into one place and, as such, is a reasonable first reference manual on how to put together a UI application.<br /><br />However, this book didn't cover what I expected to see: how do you design a good UI? Given a set of three activities to do, how do you map that into a flow across the application? How do you do simple usability studies using a friend or family? I was sorely disappointed, as those techniques are what turn a UI from a set of controls that a developer slapped together into an application that feels like it was designed to be used for a purpose.<br /><br />Also, don't think that this goes into all of the details. Given the depth he went into on control use, I was expecting to see some of the Windows Logo guidelines in there, perhaps as an appendix - buttons will be such and such dialog units from the corner, etc. Instead, there are intro chapters on *forming* Avalon and HTML. This seemed out of place given that there was no intro chapter on using the Visual Studio .NET design surfaces and they read more like there was a page target for the book than that the content was part of an overall plan for the reader.	2005-05-27
US	42961399	R1RADFRKFXWUX9	1590591275	98388704	Lessons in Project Management	Books	4	4	4	N	N	Helpful anecdotes for those already running projects	This book would be most useful to someone who is currently running a project, is somewhat inexperienced, and who either knows or suspects that something may be going wrong. There are a lot of excellent situational examples of how to understand a problem, diagnose what to do appropriately to the size of the project, and resolve it. As noted by other reviewers, though, this shouldn't be taken as a book that contains a sequence of steps needed to run a successful project.<br /><br />My favorite explicit lesson was on underpromising and overdelivering. The authors point out that while that's a great approach, never use it as an excuse to sandbag your schedule or add more features that the client didn't necessarily ask for. Overdelivering should only come in the form of early or cheaper than expected delivery of the agreed-upon solution. I couldn't agree more.<br /><br />There was also a great implicit lesson buried in each of the lessons that wasn't called out explicitly and which at least one of the other reviewers failed to pick up on - the importance of developing a good rapport with project managers and members. In each of the lessons, the authors spend valuable book space describing fictional details and conversations tangential to the lessons at hand. However, I've found that to be an important part of conversations in all aspects of project management, as it's easier to have hard discussions about work-related problems when you've made it clear that you have empathy for them as a person and that any work-releated issues are not an attack on them.	2005-05-27
US	42961399	R2Z2AK0GA73QMQ	0060766867	484288134	What is Your Life's Work?: Answer the BIG Question About What Really Matters...and Reawaken the Passion for What You Do	Books	4	5	6	N	N	Inspirational and motivational reflective guide	The personal letters within this book help remind us - especially those of us of working age - that it's easy to get caught up in the urgent, the nasty, and the now without bothering to think about the larger framework and reasons for life. I enjoyed the unique feel to each of the letters and the consistent theme of doing the right things; though each is different from my own situation, each contained parallels that I could see. This is the sort of book I like to read one of every few months to remind me of the importance of taking control of life and not letting it take control of you.<br /><br />The only thing I really didn't enjoy was the idea that writing the letter was going to be the single thing that altered someone's life - by the author's own admission, there's only a 20% success rate. I personally feel that you can't make this sort of dramatic change without something like the Covey planning framework that reinforces it on a weekly and daily basis. A single activity would have to be stunningly profound to cause that kind of sustained change in an individual.<br /><br />I'd also like to note that I was personally impressed by the author outside of this book. Based on my past reviews, he sent me a complimentary copy but only asked that I provide an honest review of his book when completed - other authors and marketers of products have not been nearly so ethical.	2005-05-08
US	42961399	R1H0X6OUZCM1XW	020170482X	322444814	Evaluating Software Architectures: Methods and Case Studies	Books	4	6	6	N	N	Great on meeting details, but short on substantive examples	This book does a great job of diving into specific details on how to run meetings and the checklists of steps to follow for three different architecture review models that go into different depth (ATAM, SAAM, and ARID). I really liked the breadth of issues that the reviews covered as well as the concrete guidelines on how deep to go with the reviews.<br /><br />I didn't particularly enjoy the checklist feel of the book. I felt like they had a series of meetings to have and attendees, but they didn't do a good job of explaining why which meetings had to happen in which order and what lengths were appropriate. It was hard to understand what was a critical constraint and not to be violated and what was guideline that would vary by project and is open to interpretation.<br /><br />Additionally, the examples in the book were comprehensive in terms of what happened in the meetings, but weren't quite complete enough in terms of the documents generated. There were excerpts, but I almost would've liked to see larger pieces of them in the appendices. It was hard to get past the details of who was in what room when to what documents were actually generated, what the final results presentation looked like, and what the flavor of follow-up actions was.	2005-05-04
US	42961399	R3M5YS8YXUXB8R	0932633579	797493508	Agile Software Development in the Large: Diving Into the Deep	Books	2	11	12	N	N	Good agile introduction, but lacks details on large projects	Reading the title, I expected this book to cover both experiences and some techniques to help make agile processes either scale to large projects or at least integrate well with either diverse agile processes in a large organization or agile and non-agile processes. Unfortunately, there was none of that. Most of the anecdotal stories seemed to be of teams of no more than about thirty people, and most of the details just seemed to be to have a customer around, keep iterations short, and have retrospectives and act on them. All good tips, but hardly different from the usual advice. Maybe it was unrealistic to expect to hear about how to handle multiple hundred to low thousand person teams and the interactions.<br /><br />All of that said, this is still a very approachable, readable book about general agile development. It's light enough to prove an easy introduction for folks not familiar, and it's careful not to just be a primer on Scrum or XP. But if you're looking for a book on scaling up, this isn't it.	2005-04-20
US	42961399	R34HEYSV76R89O	0321219775	435264386	Agile Project Management: Creating Innovative Products	Books	4	19	22	N	N	Good on principles, but practices could be more dev-related	This book is a thoroughly enjoyable read, from the emphasis on principles, the excellent job navigating the difficult territory of the line between prescribed process and anarchy, and the stages a team goes through as it embraces an agile style of development. I even thought that the hypothetical story added a nice element of repetition to each section that helped drive home the main points.<br /><br />The one thing I would've liked was for this book to get off the fence and decide to be software-related. Almost every example is software related (except for the basketball analogy that got beaten to death...), but it goes out of the way not to specify software practices because this is about arbitrary project management. The book's in the \\"Agile Software Development Series\\" and the author is primarily a software consultant. I'd prefer it stuck to software rather than trying to go for broader appeal because there were several practice areas where detail was elided on that basis and could've really helped make the practices more concrete.<br /><br />Also, it would've been nice to have a little grid mapping up common-day software development methodologies like Scrum, XP, FDD, and DSDM against the practices in the book. I tried to do it in my head, but once you get past 5x5, it's something that should've been provided.	2005-04-18
US	42961399	R1FV5EW03QAS6F	006093574X	710556265	Essential Drucker, The	Books	5	3	3	N	N	Most of the top pieces of management advice in one book	The chapters in this book are selected from a series of other Drucker books, resulting in a little bit of overlap. However, that one fault doesn't detract from what this is: the premier single-source introduction to management theory and practice. I'd highly advise this to anyone who is worried about improvement for themselves, their teams, and their business. An additional nicety is that each of the chapters are also annotated with their original source so that you can pick up a copy of the original tome if you want to go deeper.<br /><br />I was particularly impressed by his chapters on personal and team effectivness and on exactly at what stage in business planning you should worry about profitability. The effectiveness advice is dead-on (concentrate periods of productivity, enable your peers and subordinates to do so, and concentrate on work that is useful for your business), and the advice on when to bring profitability into the business product planning mix puts a lot of the short-term profit-first material on its head.	2005-03-28
US	42961399	R1OZS6BV0J2CCL	0131177052	14077455	Working Effectively with Legacy Code	Books	5	13	15	N	N	Fixing legacy code and preventing new code from going bad	Almost every code base I've worked in previously, whether fifteen years old or just a few weeks, fell into the category of legacy code for exactly the reason mentioned in this book. There were no unit-level tests. Without the presence of tests, design had gone to pieces once the architects were no longer looking (if any architects had ever existed!). Without tests' presence, the code had no need to be easily isolated and changed - so it wasn't. This book provides a set of steps to clean up that sort of legacy code in as safe a way as possible, always moving towards a system that is a joy and productive to code in.<br /><br />Additionally, this book codifies good design patterns and ways to think about new code during code reviews. Even \\"green field\\" developments can benefit from reading this book and ensuring that early-on work is being done to ensure that it never starts the downward legacy spiral. I would encourage developers starting from scratch to ensure they're following the patterns in this book any time that a bad piece of code sneaks in to keep it from spreading - we have on my team, and it's done wonders for our quality level, productivity, and morale.<br /><br />The only thing I'd like to have seen improved is that there's a an assumption that the code is all in one place - there are no external, uncontrollable sources who build on this code, there are no versioning requirements (i.e. API stability for N years), etc. While I'm sure the majority of this book's audience doesn't have to deal with it, for those who do, noting what constitutes a breaking change and what doesn't (particularly to ensure that each chapter has at least one that isn't) would've really helped for those of us who have to build platforms.	2005-03-21
US	42961399	R2NIFR5KBDFE6R	1591396360	585137790	Getting People on Board (Results-Driven Manager, The)	Books	3	6	8	N	N	Good breadth capture and article selection, lacks refs	To me, a good introductory book should cover a broad range of topics in a wholistic manner, have consise but immediately useful information, and provide a set of next places to go for further education. This book is great at the first one, covering all of the topics I would expect to see in this area. Quality varies among the articles on how immediately useful they are; some are more in the area of \\"we did a study and you can classify people these ways\\" than the \\"be ready to identify situations of these kinds, as if you act this way by default, your reaction will get you into trouble.\\" The lack of references is actually the biggest problem; a few of the abbreviated articles refer to some further learning, but many miss out on immediate next steps for people who want to learn more.	2005-03-16
US	42961399	RP33NIX7ENKX9	0793186927	286776805	The Mentoring Advantage: Creating the Next Generation of Leaders	Books	5	4	4	N	N	Excellent mentoring tips for both individuals and orgs	My company already has a mentoring program that I take advantage of, along with mentor and mentee training. However, this book still taught me a lot, particulary around how to properly message, how to set expectations, and how to deal with difficult or uncomfortable circumstances.<br /><br />The book is good as a general introduction for those new to mentoring or mentoring programs, and provides some additional material for those who want to start a managed mentoring program at their institution. I'm not convinced it's comprehensive, but the author does a good job of giving both a high-level overview and tying it to concrete benefits.	2005-03-14
US	42961399	RN99B5BDXB58M	0071422544	98907590	The Transparency Edge: How Credibility Can Make or Break You in Business	Books	4	2	3	N	N	Teaches well how to think about credibility and improve	This book does a great job of breaking up credibility into a few tangible categories and listing specific examples of how to apply the right touch to each of them -- being open without overdoing it, offering praise without coming across as insincere, etc. I was impressed front to back on the way that the authors dissected each dimension, provided insightful anecdotes, and supported them with metrics.<br /><br />The biggest thing I didn't like is that it uses the \\"motherhood and apple pie\\" approach to convincing you of the value of most dimensions. There's sort of an implicit assumption that everything the book says sounds good, and therefore you must do it, resulting in... profit? If they'd not only pointed out studies that showed how many people were bad at certain things but were also more consistent in showing how each of their dimensions contribute to productivity of staff, profitability of the company, or some other company-specific metric, it would've been nice. I'm not saying that I necessarily disagree with them; rather that I don't like seeing people espouse behavior changes just because they \\"feel right.\\"<br /><br />Additionally, it's pretty clear they run a high-level executive consulting business. At times, it seemed too CEO / senior-VP focused, with the assumption that not only do you have reports, but that your reports have tiers of reports. Finally, the number of times that they mention the specific services they provided and specific role they played made it feel less like a self-help book and more like an advertisement for them.<br /><br />Still, a good book and to be recommended, but I'd take it with a grain of salt at times. It triggered a little bit of cynicism more than once, though I'm sure that they'd be willing to work with me on that :-)	2005-03-12
US	42961399	R2XTDS1CJQMY5O	0142000280	287617479	Getting Things Done: The Art of Stress-Free Productivity	Books	3	26	28	N	N	Great practices, but not to be used in isolation	Getting Things Done provides a great concrete framework for how to manage your pending work in an external, easy to access, and easy to keep up to date form. I've personally adopted it and love both the freedom that it gives me and the flexibility that it has in what can be on paper, electronic, or a pile of stuff. I look at it more as some techniques than specific practies.<br /><br />The caution I have about this book -- which I actually would recommend, despite the 3 star rating -- is that the techniques without a framework might not be quite enough. For instance, if you're a Seven Habits fan, you'll also get some guidance around prioritizing work, saying \\"no\\" to things, and ensuring long-term success. GTD is more focused on managing work you think is on your plate and handling whatever comes up, whether you really should or not. I've also found that I need to manage my long-term \\"nice to have\\" projects incrementally and don't really buy Allen's statement that you would be surprised how much progress you make on them just by writing them down. Finally, though I agree that putting a big list of tasks onto a day to get them done can be demoralizing, I do like to do things like block out hours of my calendar to work on tasks.<br /><br />So, a good book, a worthy read, but I'd advise that you also read some of the other literature in this area to make sure that you're not just learning to spin your wheels faster. Driving more quickly doesn't help if you're pointed through a minefield and in the wrong direction.	2005-03-12
US	42961399	R3JLE2WM83U77G	0071438882	831246582	Execution Plain and Simple: Twelve Steps to Achieving Any Goal on Time and On Budget	Books	4	9	9	N	N	More useful for project leadership than personal	Vision, purpose, defining the scope of the work, and gaining the critical mass needed to get execution within a normally stagnant company are all covered well in this book. For somebody in a large company (like myself), this book provides a lot of guidance to leadership on how to bring small-team energy to a culture of slow-moving big teams. In that respsect, this is a great book.<br /><br />The only failure I see is that I didn't notice much attention paid to individual performance. A failing of large companies is that they tend to load so many roles, side-responsibilities, and conflicting priorities on their employees that enabling some folks to break free, focus on a small but impact-laden project, and really deliver it are a separate set of issues that need to be addressed as well. This book provides great information in an immediately-useful form-factor, but beware of using it alone, paritcularly if you're new to a company and its culture.	2005-03-09
US	42961399	R11UA15K5DRDVG	047138254X	406459914	The Discipline of Teams: A Mindbook-Workbook for Delivering Small Group Performance	Books	3	6	7	N	N	Nice overview, but lacks concrete guidance	This book excels at drawing the line between leader-driven and team-driven groups of individuals. It also characterizes some of the failure cases very well -- teams that are too large, teams that don't have a clear vision and purpose, teams that are disconnected from the rest of the organization, etc.<br /><br />However, I struggled to see how to clearly draw the line between which style to guide your team into. The rough guidance seemed a bit self-referential: \\"when the task can best be done with a single leader, do it with a single leader.\\" What about if you're not sure? Try both and take it as a lesson learned? Maybe I just missed it, but the book lacked the critial information I needed to be able to fully apply it in my situation.	2005-03-09
US	42961399	R2BK2WIKG2APPY	0735620520	222815391	Beyond Bullet Points: Using Microsoft  PowerPoint  to Create Presentations That Inform, Motivate, and Inspire (Bpg-Other)	Books	4	161	167	N	N	A good framework for authoring, but does it scale down?	Can you really deliver a PowerPoint presentation without having any bullet points in the deck? This book does a good job of convincing that this is possible. However, I believe that the book's greater contribution is pointing out that most people structure presentations as a dump of data rather than taking into account their audience and the goal of their presentation -- why are people there? What do you want them to do or believe after you're done presenting? Even if you disagree with Cliff's convincing points on removing bullets from your decks, you should take to heart his framework for developing concepts and decks.<br /><br />The running example is of a presentation for a proposal to approve some drug or another for the executive board of a company. While I'm sure there are lots of presentations done for boards, at the company I work most presentations are to groups of peer first-level managers and individual contributors about technical areas, product overviews, or change initiatives. The second most common are those to upper management on the status of a project or requests for resources. None of those are easily transformed into the marketing presentation, as they contain lots of data to present, sequences of actions that need to be taken, lists of stakeholders to be affected, etc. I could see how you can remove bullet points from certain types of presentations, but he didn't do a great job of convincing me that was true of all presentations.	2005-02-24
US	42961399	R17T831AXZXYE1	1591391105	766738517	The First 90 Days: Critical Success Strategies for New Leaders at All Levels	Books	4	10	11	N	N	Good overview of a variety of mgmt topics for starting work	Rather than \\"the first 90 days\\", this could also be called \\"A quick introduction to management theory\\". People who have done a lot of reading in this area will recognize situation-specific applications of Situational Leadership and a variety of other management techniques. Watkins does a good job of picking just what you need to know to get up and running in the first few months, adapting the info to the situation, and no more.<br /><br />A couple of things that would've been nice to see were not just pointers in the appendix to a few books on strategy & leadership, but also to expanded coverage of the material he presented as well as how to handle some of the situations that come next (unless he's setting us up for the sequel -- \\"the next 90 days\\"?). I'd recommend it to new managers looking to get up to speed quickly, but with the caveat that you shouldn't use this as your only book. Also, I wasn't too fond of his Create Coalitions chapter, as it straddles the fine line between building consensus and politicing behind the scenes and, in my mind, falls a little on the latter. That's not a technique I'd advise lightly, and particularly not in the first 90 days when you haven't yet figured out nuances of the culture you're working in.	2005-02-18
US	42961399	R3QXLB95GMOTTJ	0684846659	704670488	The 8th Habit: From Effectiveness to Greatness	Books	4	127	142	N	N	Topical, but tedious	As with most of his previous writings, Dr. Covey has a great point to get across and does an excellent job of motivating it and presenting it in a way that makes it easy to apply to yourself. Unfortunately, unlike his other books, this one was a bit tedious to get through. The mixture of inspirational content (quotes and motivational passages), reiteration of concepts, mapping of his concepts onto the presentations of others in the leadership and self-help community, and just general pacing added up to make this far longer than I would've preferred. I wouldn't recommend it to anybody who isn't a speed reader.	2004-12-18
US	42961399	R1940X2IG9J0W	1929936001	535572125	From Idea to Launch at Internet Speed: How to Identify and Develop Profitable Opportunities	Books	3	0	0	N	N	Good writing and broad overview, but lacks some depth	In general, both the writing style and areas covered are fairly comprehensive. Unlike many business planning / startup books, this gives a much more complete coverage of marketing and sales strategy. The most valuable content, in my mind, was around when to re-evaluate your strategies based on the results you're seeing.<br /><br />The biggest thing I had an issue with was the narrow example space being drawn from. Where there was a need for justification or further explanation, it seemed to always either come from the limited TRW-ESL space or a quote from one of the twenty or so folks she interviewed. Where were the industry case studies? Or examples tracking several projects over time, both successes and failures? It was difficult for me to buy into all the details of the book because it was hard to see what was based on economics and math, what was based on experience, and what was just her opinion.<br /><br />A minor nit is that the book talked about business planning a lot and making investment decisions, but never even mentioned cost of capital -- even in the financial section of the business plan. Maybe her company didn't do that, but I'd assume many companies are making decisions on investments with limited capital to pursue them.	2004-12-18
US	42961399	R320KSNL7QR6DW	1578513332	734451084	Leading Teams: Setting the Stage for Great Performances	Books	4	9	10	N	N	Identifies common mistakes in teams and leaders	Even generally productive teams need to improve their productivity. I'm quite impressed by the framework provided in this book for diagnosing the quality of the direction you're providing, the way you structure your teams, and the way that people are identified with the teams and how all of these impact the team. It's interesting how much is delivered in this book without prescribing precisely how leaders should behave. As a person with a productive team whose concerns are primarily around keeping the team focused and getting more and more effective, this book was great.<br /><br />The only thing I didn't like is that it sometimes felt like there was a page target they were trying to hit. The same airplane and manufacturing plant examples are repeated over and over, making it seem like there's very little data backing up this research. The same topics are also hit over and over in nearly the same way (the three areas mentioned before). However, that only hurts the presentation; the fundamental topics are quite solid.	2004-12-10
US	42961399	R357G2Z9JAN7AI	0131467409	272395946	Organizational Patterns of Agile Software Development	Books	5	5	6	N	N	Practical diagnosis and repair for software team dysfunction	The largest piece of value I got from this book was the immediate applicability of the patterns to organizations that are experiencing a form of dysfunction. It's easy to see what applies to you, why the pattern is intended to fix it, and even what needs to be in place in your organization for the change to be effective. Though at the back, you shouldn't ignore the advice on how to actually roll out pattern changes and the additional notes on when your organization needs more basic work on trust before it can start to be more effective.<br /><br />The major shortcoming (for me) is that a lot of the patterns are interlinked tightly enough that a single read through them in linear order will leave you resolving a bunch of forward references as you continue on. I found I had to read them through twice to make sure I understood some of the more subtle distincions, especially between particular roles like Gatekeeper, Patron, and Matron -- it made me wonder if there wasn't a different order or refactoring of the presentation that would've made it flow more smoothly. Still, a minor nit on such an otherwise useful book.	2004-10-30
US	42961399	R1TIV0VL1ZZ6LM	0465051359	870491681	Emotional Design: Why We Love (or Hate) Everyday Things	Books	4	47	49	N	N	Some practical info on design, but some far-off fantasy	If you're looking for a fairly practical discussion of the ways that people interact with products and how more than just behavioral qualities are measured by your customers, the first half of the book will prove quite useful. It expands and ties nicely into common practices of market segmentation and usability studies, providing both concrete advice for optimizing your product for whatever your adoption goals are, as well as a theoretical framework for understanding user behavior.<br /><br />There's also a large section near the end about robotics and the future. While it's interesting, it reads more like science fiction or the typical dicsussions that you have in either a mobile robot at a university or a AAAI conference. I personally think the book could've stood just as well without it.	2004-09-12
US	42961399	R1117FUHCL2ZXJ	1578511828	883786773	Harvard Business Review on Managing High-Tech Industries (Harvard Business Review Paperback Series)	Books	3	4	4	N	N	Interesting only to a narrow set of 'high-tech' companies	The individual articles themselves are all of high quality; however, this is most interesting for companies that have a large manufacturing effort that is separate from their research & development effort. For software companies, these articles are a bit less interesting, with the exception of the relationship to any  broad research arm your company might have. Even then, though, the articles focus more on how you structure the company organizationally and how you handle operations than how a manager could change day-to-day operations to increase collaborations across the divisions.	2004-07-30
US	42961399	R3AUYLX4HRK7HV	0875848834	737679447	Harvard Business Review on Leadership (Harvard Business Review Paperback Series)	Books	4	1	3	N	N	Great articles on defining and teaching about leadership	The wide variety of articles on leadership covers well items from the basic topics such as the difference between managers and leaders to how someone can be both (and the tensions that can cause!). Two of the best articles were on how leaders really spend their time during the day and how leaders foster an environment in which other people can also be identified and brought forward as leaders.<br /><br />I would've rated this five stars, but there are a couple of articles (on 'defining moments' and CEOs) that weren't a complete waste of time but seemed too far divorced from the typical leader within a company that I was surprised the HBR didn't find something more likely to be widely applicable to fill the space.	2004-07-25
US	42961399	RL52BU4IOTW04	0875849075	621398409	Harvard Business Review on Managing People (Harvard Business Review Paperback Series)	Books	5	12	13	N	N	Readable papers on broad topics in management	Whether you're just entering people management or have been doing it for years, this book grabs a selection of readable papers on a variety of topics from compensation to handling 'poor performers' to more effective (but non-manipulative!) means of persuasion.<br /><br /> Especially interesting were the two articles on the performance of individuals and the messages -- both explicit and implicit -- that managers give to their reports and how they affect performance. You should definitely give them a read if you think you have an average to poor performer that you're actively working with right now.	2004-07-25
US	42961399	R1HSPE3KGWJFC4	0684839911	884165047	Managing the Design Factory	Books	5	6	6	N	N	Best book on product development and agility around	I don't think they use the word agility once, but this book clearly enunciates all of the reasons that agile processes often show success, without prescribing a specific set of items to do. This book will enable managers of development teams to look at the product they're building, its impact on the business's bottom line, and make both long-term and daily decisions about how to run their team. Individual developers will also gain an understanding of how to better streamline processes -- for instance, people often think that introducing large processes to &quot;prevent an error from happening again&quot; is a good idea. However, this book will help you to learn why that can be bad; that it can introduce queues and actually result in a process slowdown, especially if it happens early in the development process and on the critical path.<br />I just can't say enough about this book; some other specific books on Agile software development are helpful to give you ideas of specific things to do, but this book is absolutely crucial to learn and use in your daily decision-making process.	2004-07-02
US	42961399	R2WU7A1GXKNED2	0321125215	454381651	Domain-Driven Design: Tackling Complexity in the Heart of Software	Books	5	2	4	N	N	Concretes the abstract worlds of patterns and principles	This book answers the question of how you tie in cookbooks like the GoF book or Fowler's Enterprise Patterns book with the Wirfs-Brock book on designing systems. Reading this will help you to understand how to identify and apply great patterns in your design, where and when those patterns are important, and how many resources it's worth investing on rolling them out. More importantly, it helps you to understand and convey to others the importance of a clean design model.<br />I also really enjoyed his notes on large refactorings (yes, in practice, sometimes you *do* encounter the need for large changes!) and the author's pragmatism around having to make decisions about where you invest heavily and where you don't. His points around large project constraints and how it becomes non-linearly expensive to maintain continuous integration and design consistency to the finest detail also hit home -- I've seen more than one group try to do that, fail, and give up entirely. A bit of balance, as he advocates in the book, would have really helped maintain some consistency and a solid core without requiring moving heaven and earth to get every interface looking Architect Approved (tm).<br />The only place the book was lacking was in how you tie together and manage quite a bit larger projects. For instance, near the end he says, &quot;No project will ever employ every technique in this book&quot;; however, I've been on one that used everything he mentioned in this book in one place or another -- of course, it's tens of millions of lines of code :-)	2004-06-06
US	42961399	R1JR5I8NPFY06L	0787960756	42454512	The Five Dysfunctions of a Team: A Leadership Fable	Books	5	3	4	N	N	Things to look for and fix on teams at all levels	This book is great because the simple narrative makes the 5 different disfunctions more concrete by showing exactly how they can manifest in a team. These are common issues not only executive-level teams, but also teams of lower-level folks like myself, working on individual features of a product. Some of the higher-level concepts like understanding what your 'first team' are a little bit less relevant, but most of the book is still very pertinent and easy to directly apply.<br />The worksheets and exercises he has in the back are also great, no-nonsense ways to bring your team back on track. The only things I might've liked to see are some more information around what can go wrong when you try to &quot;correct&quot; the particular issues and maybe some more concrete details on what it means to be a leader by his definition. It's a bit vauge in places and seems to be more a matter of reporting structure than technical / feature leadership (i.e. a team of all true peers but where one person is the technical / business expert), though he works to call out some of the details at the end.	2004-05-14
US	42961399	R2M9T7OVFGLZQ	0787968056	959862678	Death by Meeting: A Leadership Fable...About Solving the Most Painful Problem in Business	Books	4	8	10	N	N	Good anecdotal advice, but targeted at upper management	Both the format and the content of this book made it highly enjoyable. Normally, even reading about meetings is enough to put me to sleep, but this book has a great running story about introducing change to the meetings of an executive team. By the end of the book, the author has some excellent specific tips on the types of meetings to call, how often to call them, and what to expect to get from them. As he points out, the impact meeting effectiveness has on team morale can't be overstated.<br />The only thing I might ding the book on is that it's really about the meetings that high-level folks have, and the practical advice is somewhat less applicable to minion-type people. For instance, while the different types of meetings make sense, the frequencies don't -- I would argue that his &quot;quarterly off-site reviews&quot; are better translated as &quot;end of milestone reviews&quot; the &quot;monthly strategic&quot;s are completely transformed because people at a lower level usually only own a few issues at a given time, so it makes more sense for all of those meetings to be ad-hoc and around closing a single topic rather than being regular and on the most important bubbled-up topics of the day.<br />Still, a very valuable book and well worth an afternoon's read, even by low-level developer types like myself.	2004-05-06
US	42961399	R2DUNXY1YIS5OV	1590591046	76318275	In Search of Stupidity: Over 20 Years of High-Tech Marketing Disasters	Books	4	0	1	N	N	Entertaining and educational account of marketing mistakes	It was great to get to hear both some clarifications of urban legend and some reflection on what was messed up by people in the industry. The author has been deeply involved for many years, and provides a great retrospective on a huge variety of events in both the near and further past. He shows that, if history doesn't repeat itself, its events at least follow similar patterns.<br />The only thing it's missing is a more concrete analysis of the general marketing mistakes. I felt like he could've pulled out some more concrete tips for some of the mistakes to show how you can realize -- before you make the mistake -- that it's a bad idea. Though a lot of it seems obvious in retrospect, they must not have seemed like bad ideas at the time.	2004-05-04
US	42961399	R3JUXQP5SVP52D	0131429019	352986976	The Art of UNIX Programming (The Addison-Wesley Professional Computng Series)	Books	4	20	22	N	N	The patterns of UNIX and how you can use them	Even for a primarily Windows programmer, this is a great book to read. He provides a great overview of the Unix design philosophy, its evolution over time, and the things that it still doesn't handle well (user-centered design). He also digs deeper into a lot of the patterns in program organization and coordination to help you choose what to build into a utility, what to expose as a library, and what to package as a set of binaries. There's even a small bit of programming advice from place to place. I'd highly recommend reading the book to at least get a sense of perspective when you're designing your next system. He's right on the mark that the Windows and UNIX worlds have a completely different philosophy on program construction, each with their own merits.<br />His comments about the Windows registry were a bit distressing, though -- not because they're negative, which I consider fine. Rather, it was obvious he'd never used it (comments like &quot;there's no API for it&quot;) and it was also clear that he hadn't even bothered to research why it existed and what problems it was intended to solve. The comments were typical of what I'd expect of a Slashdot troll, but not of a bright, respectable person like ESR. I've programmed on both platforms extensively and only comment on what I have first-hand experience and knowledge of; I'd expect him to do the no less, especially as an author.<br />It was also curious that several times he implied unit testing ==  XP == agile software development. For as tuned in as he seems to be to methodolgy work, missing the forest for a single leaf is a bit embarrassing.	2004-04-17
US	42961399	RXLX6NP6B2MPY	0887308244	391698951	Inside the Tornado: Marketing Strategies from Silicon Valley's Cutting Edge	Books	4	2	4	N	N	Marketing and business strengths, but &quot;people&quot; holes	Beyond the previous Chasm book, there's a great deal of additional depth in how to make the transition with your business to get your products out to a wider range of people. He also introduced the idea of companies that effectively &quot;live&quot; in one part of the adoption phase or another, not dominating it, but rather living off the share that the market implicitly either wants to give to another competitor to keep a diverse environment or because they're the low-cost clone alternative.<br />Like another reviewer, I found the gorilla / chimp / monkey metaphor a bit much, though primarily because the &quot;gorilla company&quot; metaphor is used in a slightly different way in the real world. My biggest concern was with the people issues; there's a lot of discussion around how to transition your company from one stage to another and how that will affect the various roles, rewards the people in those roles should expect, and even the type of work those people should be doing. I don't think -- especially for companies as people-based as technology companies -- he spends enough time talking about how you handle those issues, set expectations, and actually lead your company through these sorts of changes. Academically, I could see how he was saying to transform the company over time. Practically, though, I couldn't see how some of his messages could be delivered well. Especially to the engineers working on products.	2004-04-11
US	42961399	R1YSC0TZGS4MS0	0060517123	895611005	Crossing the Chasm: Marketing and Selling High-Tech Products to Mainstream Customers	Books	4	15	15	N	N	Worth reading, even if you think you already understand	Long established as a classic, the drawing depicting the different classes of customers and their adoption rates are commonly used in the industry. I personally thought I already understood it, just from osmosis. However, reading the book taught me more about the characteristics of those customers, how you gain penetration into their markets, and most importantly how you manage a team and produce a product into those markets.<br />There are also lessons in there about establishing a beachhead and how to choose your target customer that dovetail nicely into some more modern work around persona identification in software development and the need to identify just one target persona for your application at a time. This is a great marketing book -- even if some of the specific company examples are somewhat dated -- whose concepts readily translate into not only management but directly into product development and vision.	2004-03-20
US	42961399	R1KTNCPUFZNGB1	0201633302	769430612	Quality Function Deployment: How to Make QFD Work for You	Books	4	7	7	N	N	Comprehensive overview, but incomplete in how to try it out	This was an excellent introduction to QFD, which I'd previously heard many good things about. I now feel that I understand how it works, how to marry it with the software development process in general, and even managed to pick up some hints on how I might integrate some more advanced customer representation ideas (like use of personas instead of instances of customers, for when your customer base is too large).<br />However, it was stated many times that:<br />1) You should have someone who has lead a QFD before facilitating it<br />2) It's highly customizable, by cutting things out<br />It would've been nice understand how to go about a first QFD with no experienced facilitators, along with some warning signs about whether you're going right or wrong. Also, examples of the customizations folks have made for smaller or larger teams and less or more rigorous organizations would've made it more concrete how to roll it out on a team such as my own.	2004-03-08
US	42961399	R1WUBCCFYOW1W0	0201710897	115324846	Programming Ruby: A Pragmatic Programmer's Guide	Books	4	5	5	N	N	Quick and effective introduction to Ruby	The authors have a wonderful style for introducting the lanaguage Ruby, assuming that you have at least a small amount of prior programming experience. The order of presentation and the amount of polish throughout made this a joy to read and introduces Ruby at a very rapid, yet comfortable, pace.<br />It does seem to suffer from wanting to be both an introduction to Ruby and a reference manual as well; the last several chapters look (and read like) reference materials. While I'm not opposed to that, the book doesn't have the kind of binding that lets it easily lay flat on your desk open to the page, so I'm more inclined to just open the docs on a separate monitor instead. The book might as well have been lighter and just had a pointer to docs online.<br />Also, I wonder if some of the presentations of concepts like closures and contiuations aren't a bit too rapid for the casual reader. If you've had a programming background in Scheme or Lisp, it's old hat; however, as I was reading through their presentations and the relatively quick examples, it felt likely that many readers wouldn't get a lot of the subtelty in what was going on under the hood to make the language features work or in what kinds of real world scenarios those sorts of features are useful.	2004-03-08
US	42961399	RZ4CJBYABNV5B	1564145786	525587884	Invent Business Opportunities No One Else Can Imagine	Books	3	1	1	N	N	Business and management coverage, but little that's concrete	There's some excellent information about how to manage your teams, making sure that you and your people keep an eye on trends in the industry, and also good cautionary tales about not getting too wrapped up in your current success.<br />Unfortunately, history has proven parts of this book to be risky if taken literally. For instance, Enron is given as an example of a great, innovative company. I know that it's hard to have seen the failure coming, but still, it points out some risks in getting too caught up in broad ideas without properly estimating the real business opportunity. There's a lot of talk in the book about how to brainstorm markets and user needs, but very little about what to do with it. The implication is that you should just run off and go with an idea as soon as you imagine a trend; however, it's worth thinking about how you should transform your business and whether you could actually be profitable in your new venture. There are a lot of other great books in this space; I'd look at least at _Innovator's Solution_ to get more information about running your company without getting too stuck on your successes.	2004-02-27
US	42961399	R2L3BW6VMLYRK9	0393058549	20116327	The Random Walk Guide to Investing: Ten Rules for Financial Success	Books	5	7	9	N	N	Practical investment advice for people in any stage of life	This book provides an excellent framework for planning out your course of investments over the next decades, making sure that you're balanced correctly for the amount of risk you're willing to have now and the goals that you have in the future. It helps you understand why heavily trading stocks daily or monthly can work for some people but, for most people, it's better just to play the whole market and rely on the aggregate behavior in the long term.<br />I also loved that he took the time to debunk analysts, heavily managed mutual funds, and helped explain some of the details to look at in prospectuses -- I know that I personally had trouble understanding them in great detail when my 401k gets updated or they revise the rules.<br />For people who don't think they're going to magically get rich in the next 5 years, I'd highly recommend this book.	2004-02-27
US	42961399	R2CXRXCESIQWW3	0764526413	347603676	About Face 2.0: The Essentials of Interaction Design	Books	3	26	37	N	N	Good techniques on design, but sometimes a bit preachy	Personas and goal-directed design are great techniques for putting together a quality product and really making sure that you're building the right things for your users. In particular, this book provides a process for doing design that would help most teams do a better job of being more customer-focused.<br />Unfortunately, this book has a few bones to pick with the current ways that users work. In many cases, while I may agree with statements such as that the File menu is not strictly necessary, users of many programs already understand how things work under the hood and want to know about it directly. He sometimes preaches design as if all customers of software are and should be ignorant of the system they're working on. I write software for other developers, so a lot of the tips and advice he gives are actually things that would cause my customer to become quite angry -- they understand the system, want to work in terms of it, and want to be able to to understand how your program deals with it. There are a number of commercial software tool failures to prove the mistakes of those who've tried to force a model the designers thought was superior on developers who knew better (ever used Visual Age Java?).<br />There's also a lot of material duplicated from his earlier book, _The Inmates Are Running the Asylum_. If you're only going to read one of the two, I'd advise reading that one, and skipping this one.	2004-02-08
US	42961399	R3CLV7E383QKO7	1566091594	89907476	The Non-Designer's Design Book: Design and Typographic Principles for the Visual Novice	Books	5	0	1	N	N	Approachable and immediately usable design information	For all forms of static (non-interactive) design such as web page layout and any print copy, this book is an excellent read. Basic typography, layout, and subjective criteria for assesing the quality of a design are all taught in just enough depth to be useful without going so deep as to be overwhelming for first-timers.<br />I would've liked to see a little more both about how interactivity changes design decisions (i.e. what do you do to indicate clickable, draggable, etc.?), and also might have liked to see a little bit more about how you make structural decisions based on the type of audience you're targeting. However, it's still a great book because of the huge amount of instantly useful tips for such a small size.	2004-02-01
US	42961399	R3F7XFYZ57PJSQ	0672316498	301011583	The Inmates Are Running the Asylum	Books	4	34	40	N	N	Great design approach, but arrogance and repitition hurt	It's worth reading this book -- even despite the painful tone he often takes -- just to pick up on the ideas of creating concrete personas and how you use them to develop your product. We do that today at Microsoft (at least in Developer Tools), and it's a highly successful way of not only building a good product, but also in helping hundreds of developers understand why a feature is 'in' or 'out', no matter how much they might like it personally.<br />It's also mentioned quickly, but the idea of how much work customers are willing to do for an amount of benefit can affect your designs for the better as well. Fundamentally, you should add value with no documentation and no setup -- if somebody paid money, they should feel rewarded as soon as they start to use your application. Then, after they want to do new things, you can require more work of them to do it. However, it should never be more work than the benefit that they derive! This is an important lesson that, say, most media player application writers would be advised to learn...<br />Of course, as many other reviewers have pointed out, it might have been nice if he had created some personas for who his readers were. I doubt that any of them would have had a goal of being preached to.	2004-01-31
US	42961399	R1327UMMM0GU2P	0321154959	687800358	Software Architecture in Practice (2nd Edition)	Books	3	10	15	N	N	Some good advice on 'ilities' trade-offs, but not much else	This book will be useful for people looking for tactics for architecting particular 'ilities' into a system, deciding whether or not product lines are relevant, and many of the management / business aspects to maintaining architectural conformance.<br />I particularly enjoyed the breakdown of concrete architectural tactics to achieve the most important 'ilities' and the tradeoffs involved in implenting them. There were even nice tie-ins later to the cost of implementing them and what the ROI is for making a decision to support, say, a certain level of modifiability, through the CBAM process they present.<br />The less impressive points in the book were some of the case studies and the software reconstruction chapter. A couple of the case studies discussed projects that failed to produce a real product that deployed and was successful in the real world. While I agree with the authors that there was still research value in them and that good lessons were learned, I question their relevance in a book that contains the words &quot;in Practice&quot; in its title. It would've been nice to instead see more real stories around the tactics and how people really traded off the various architectural decisions, how it affected what they built, and how those decisions impacted the products in subsequent versions.<br />I also didn't find the architecture reconstruction chapter very compelling. There were a lot of good ideas, but they were interspersed with a lot of confusing diagrams, counts of clusterings of classes and relationships, and talk about manual hypothesis generation and validation. It would've been better for me to see a few scenarios around reconstruction (i.e. &quot;validation of implementation architecture&quot; and &quot;code dropped in your lap&quot;) and then some discussions of where there are good tools in place and where the state of the art isn't yet good enough. I didn't get a good sense of whether anything was useable in practice yet and, if it was, what value I could actually get.value I could actually get.	2004-01-08
US	42961399	R291E0JOI4A5A9	0961392126	648447989	Visual Explanations: Images and Quantities, Evidence and Narrative	Books	4	13	15	N	N	Learn how human information capacity affects your designs	An amazing book! While I'm not sure that it's worth giving up shelf space for, it's more than worth borrowing from your local library and reading.<br />The biggest things I pulled out of this were around information density and the capacities that humans have. This book provided me with a framework for looking at mediums of display to the user and to better understand how I can choose how much data and how to present it to best allow them to reason around it.<br />The examples are also beautifully produced and masterfully composed. The book itself is an amazing artifact!<br />Near the end, he talks about 'confections' and, while it was an interesting section, it was the one section of the book that it was difficult to pull out prescriptive guidance from.	2003-12-24
US	42961399	R3K52O9TZFGIMP	0932633609	996202866	Waltzing With Bears: Managing Risk on Software Projects	Books	4	14	18	N	N	Useful for managers of medium to large groups of people	There are a ton of wonderful anecdotes and motivational examples for doing risk management. Also, he takes a very pragmatic approach towards what's actually possible in different corporate climates. Rather than only telling you what right thing to do is, he helps you decide what the appropriate thing is.<br />The explanation of the relationship between risk and benefit analysis was both insightful and seemed like it would be useful. It provides a pragmatic framework for a lot of what are considered 'good engineering practices', such as incremental deliverables that can be measured and verified in meaningful ways.<br />The only downside is that it's very difficult to understand how to take advantage of some of the frameworks he provides without being in a management position already. Individual contributors won't get a lot out of this.	2003-12-24
US	42961399	R32KQMLGQQL34T	0671708635	783953685	The 7 Habits of Highly Effective People	Books	5	3	4	N	Y	Life-enhancing, but occasionally feels like an ad	This book provides an excellent framework for objectively assessing your maturity level as a person and really getting a better hold on your life. The incremental buildup as the book progresses doesn't feel that overwhelming, but at the end, you really feel that you've come a long way and that you never want to go back to the old way of doing things.<br />The only downside was that you occasionally feel like you're reading a product catalog from Franklin Covey. Everybody's got to make money, though, so it's not a huge detraction.	2003-12-24
US	42961399	R1S19FQ5577ZCF	0375505784	608863601	The Future of Ideas: The Fate of the Commons in a Connected World	Books	4	2	3	N	N	Good historical and future views, but neglects the present	Rather than just looking at what the intellectual property law is today, he does an excellent job of framing what all of the different types of intellectual property are, how they were intended to be protected (or not!) by the framers of the Constitution, and where we've strayed since then. He provides a very interesting and compelling argument that much of the direction we're headed in today is being forced by corporations who really should be doing that sort of thing -- it's in their charter! However, he points out that it's the responsibility of the people and the government to take actions to ensure a level playing field where people can still make major, field-shattering innovations. It's a great argument, and one that I highly recommend reading through and thinking hard about.<br />Unfortunately, he doesn't talk much about what kinds of innovation DO happen in the current model (in the large), and how it contrasts with the kinds of innovation that happen in the other model (in the small) that he wants to try to enforce. The implication is that it's as little as possible while maintaining status quo, but that seems hard to believe. Maybe I'm just overly optimistic.	2003-12-24
US	42961399	R2Z73SNBJIDMJ5	0201379430	415433951	Object Design: Roles, Responsibilities, and Collaborations	Books	5	6	6	N	N	Effective methods for design, tunable for your agility level	Generally excellent language and flow. The book manages to bob nicely at a readable level, ducking deep when necessary for some details, and popping back up for abstract concepts at appropriate times. Throughout, it's filled with reasonable examples about how to really design systems. The examples are nicely balanced between being trivial and too complex. They get a lot of richness out of the analysis without burying the reader in domain-specific details.<br />What they present seems to be compatible with most development processes. It's highly tunable to the level of 'agility' you're looking for, even from component to component.<br />One downside is that it only talks about the dangers of over-engineering when it gets to the flexibility chapter (late in the book). It would've been nice to see this earlier, particularly when talking about identifying candidates. Also, the discussion of flexibility also ignore versioning. I don't know anybody who owns something they can just change as they please, and it would've been nice to have a framework for the kinds of things you can expect to be able to change in subsequent architecture versions and the kinds of decisions that you're making and won't be able to change without major system incompatibilities.<br />Finally, the chapter that used UML said something like &quot;we're not going to introduce UML&quot; and then spewed UML at me for twenty pages, gently lulling me towards sleep. It killed the otherwise stellar pace that the book had going for it, but immediately recovered after that.	2003-12-24
US	42961399	RLB7JSTZQYKOD	020161622X	158694092	The Pragmatic Programmer: From Journeyman to Master	Books	5	5	5	N	N	Comprehensive and approachable path to becoming an expert	Provides a lot of what experienced developers would consider &quot;commonsense&quot; advice and philosophies. Also gives an excellent language for talking about this sort of stuff with others.<br />Short and to the point. It's sometimes hard to get &quot;I'm too busy&quot; developers to read, especially the big, dense books lots of folks like to produce around the programmer management area. It's easy to find sections in this book that are useful, can be thrown at someone and be consumed by them in a half-hour (not fully digested, though!). Absolutely wonderful.<br />What can I say? It's hard to find fault with this book. The only thing I can say that might have helped are a few stories about the risks of not following the practices, though it's questionable how much that would help things. If programmers were horses, you could lead them to water, but not until they'd suffered severe dehydration and a hospital trip or two would they convince themselves that advice you'd given around appropriate water consumption was actually useful...	2003-12-24
US	42961399	R21KKUBYTUHU3Y	0201379376	150887574	The Humane Interface: New Directions for Designing Interactive Systems	Books	4	9	11	N	N	Must-read for developers, even those with ddesigners	This book provides some simple rules to apply to almost any situation in interaction design. Like Design Patterns, it's very text-editor-centric. Also like Design Patterns, though, that's incidental to the fact that it has a ton of wonderful information to provide within that example that apply much more broadly! It should be required reading for anybody whose code interacts with the user.<br />Unfortunately, it can be a little tough to get a good idea of the tradeoff between habits that the user has already gotten and habits that would be better for the user. It's clear there's a tradeoff there, and while the book acknowledges it, it fails to provide much guidance on making designs choices about when you can actually try to 'teach the user something new'.	2003-12-24
US	42961399	R3H0VRBQM0ZTV6	0201699699	615308119	Agile Software Development	Books	4	3	3	N	N	Good agile overview, but a bit longer than it needs to be	The high points were all of the great attitude around how to tune a methodology to your specific team, project, and environment. It emphasizes a lot of the crucial points around the people differences that are critical to success.<br />The downside is that a cover-to-cover reading will feel a bit belabored; the point could've been made in a bit less space. Especially noticiable were the places where sections had been copy/pasted from earlier sections of the book. I can see where it adds to random-search readability, but the third time I read the same anecdote, I was feeling a bit abused.<br />Also, there was a very interesting framework around 'levels of criticality' that I was really interested in. However, he had one category that implied loss-of-life. Okay, I got that. Then, later in the book, he talks about categorizing a financial project (that nowhere involved mafia hitmen) as that level! I guess I understood the analysis process, but the labeling of the levels totally lead me down the wrong path. I was thinking space shuttle, and he went RC racer. Not necessarily a bad thing, but I left the book not too confident that I was as grounded in the categorization process as I could've been.	2003-12-24
US	42961399	R364O7GYG37SUV	0767907698	636160479	Slack: Getting Past Burnout, Busywork, and the Myth of Total Efficiency	Books	4	4	4	N	N	Persuasive that slack time is needed, but lacks measurements	Great general advice about the importance of slack-time and managing the production of schedules. It also has some really startling, yet obvious after-the-fact, advice about the lack of quality that happens when people feel rushed. Even if they're only working their day job hours, if there isn't slack time in their days, it'll affect their output.<br />The missing piece was really, in my opinion, how to measure 'how much' slack time to have. It seemed hard to get a metric for whether it's being used effectively or not.<br />As a warning, this book basically ignored low-level folks (like myself!), concentrating exclusively on middle-level managers.	2003-12-24
US	42961399	R2XXQZAM1RS2H9	0932633323	225446867	4: Quality Software Management: Anticipating Change	Books	3	2	2	N	N	Lengthy, but good for managers who want to enable change	Well, it's for managers who want to enable change *and* have a lot of free time. This book is fairly long for the amount of information in it, and drags on, even if you're a speed reader. Still, there are some great ideas early on about change agents, how they work, and the environment they require to succeed. It's worth reading at least that part of the book, if you're a manager. However, as a technical leader or 'change agent' yourself, there's not much in this book for you.	2003-12-22
US	42961399	RVN48V7OZAJFW	0131424602	623031878	Agile Management for Software Engineering: Applying the Theory of Constraints for Business Results	Books	2	19	25	N	N	Nice theoretical grounding, but plodding and poorly edited	The accounting-based framework for assessing the value contributions of a team seem like an effective way of measuring Agile products and whether or not they're good for the company.<br />Unfortunately, the book was full of distracting grammar and even *spelling* errors. It also had a serious tendency to use a lot of acronyms / variables for concepts, but didn't bother to even quickly re-expand the name when they hadn't been used for a couple of chapters and jumped back up again. Plodding from chapter to chapter, it builds up formulae with just enough description to bury you in the details of the relationships between the variables, without actually conveying examples of what the variables represent in real life projects.<br />For being as formula-oriented as this book was, I would've expected to see a detailed example of a project, assessment of it as it went along, and the calculations of the value being delivered by the project. There were a few hypothetical examples, but nothing that actually sounded like a real evaluation of a project as it progressed.<br />Finally, they might as well have cut out SCRUM and XP. I would've been much happier if this book had just been an application of TOC (Theory of Constraints) to FDD (Feature-Driven Development) and if it had concentrated more on real examples of the two in practice, rather than trying to extract some theory and try to convey how one might apply it to other methodologies.<br />I just couldn't say that, having read all of it, I could correctly measure what they state, compute the numbers the the way they suggest, and then have any confidence in any decisions I made based on those numbers.	2003-12-22
US	42961399	R1UW7RC1CEFUDO	1578518377	203778685	Open Innovation: The New Imperative for Creating and Profiting from Technology	Books	2	9	15	N	N	Interesting, but incomplete and idealistic	There's a wonderful introduction to a variety of research and development styles, along with analyses of how they affect the company and its place in the industry. It also has a great discussion of why publicly traded companies that have made certain innovation-style choices are compelled to act they way they do, simply in order to maintain shareholder value.<br />Unfortunately, the suggestions are marginalized by what seems to be a complete omittance of today's patent laws and their effects on workers (i.e. most legal departments do NOT allow their technology workers to search or look at patents). There's also a whole proposal around rewarding for finding patents and finder's fees that just seems a bit preposterous, at least in the software field. I've never heard of a software patent that detailed something that was non-obvious; merely of ones that patented things that hadn't yet been patented. In any case, I'm no expert in that area, but without an analysis of IP laws and the usefulness of the licensing of patents, I'm hard-pressed to call this anything but a sort of reality-disconnected idealism.	2003-12-22
US	42961399	R3SBXVQCDF4YML	0201741172	821883376	Software Configuration Management Patterns: Effective Teamwork, Practical Integration	Books	4	4	4	N	N	Accessible, and well suited for smaller teams	The writing style is excellent and flows nicely, suiting a wide range of SCM folks from newbies to old hands. There's a lot of really good advice for small teams, well.<br />Some examples of real-world setups would be nice, as I'd assume it's hard to go from this text directly to concrete details. Additionally, some of the patterns encouraged don't scale well past teams of about 50 developers or when you're dealing with a long-term multi-version piece of software that has folks working on  the version 2 but also issuing QFEs, GDRs, and SPs concurrently on the old version and trying to keep them in sync on the new version. Of course, not many folks but MSFT have to do that! Still, making sure that your SCM story will work in servicing is arguably the hardest thing after making sure that you've got something developers can understand and use on a daily basis, and it's something that can really bite you if you do it wrong.	2003-12-22
US	42961399	R22PQXXIW031VS	0932633021	809077383	Becoming a Technical Leader: An Organic Problem-Solving Approach	Books	4	6	8	N	N	Best guide to becoming a tech. lead I've read	Concrete advice about both how to assess where you are today, and what to do to become and be a technical leader. There are also some fun anecdotal pseudo-conversations that work as a nice interlude, and a great description of the tradeoffs between technical and personal strenths.<br />While a light read, I couldn't help coming away from this book feeling that it was longer than it needed to be -- the information density isn't terribly high. A few of the pseudo-graphs that appeared in the book also seemed to have mislabeled axes, though that may have been corrected in subsequent editions.	2003-12-22
US	42961399	R2IO3N9WEY7HZQ	1886411840	14961708	The Art of Interactive Design: A Euphonious and Illuminating Guide to Building Successful Software	Books	2	7	9	N	N	Whole book, three words: interactivity over features	This book definitely has a drum to beat, and it's around the value of interactivity over just pure featuritis. However, it goes on and on, littered with what feel like pseudo-scientific statements. It would've been nice to see a few studies of real people, research citations, or even just opinions of somebody other than the author. It felt like he was rewriting the evolution of software over time from his own frame of reference, and then extrapolating about where he thought it was going.<br />Still, there was at least one point I agreed with; interactivity (and, in general, providing value to the user) is more important than additional hanger-on features.	2003-12-22
US	42961399	R1JUFT75L35936	0321186125	854110354	Balancing Agility and Discipline: A Guide for the Perplexed	Books	4	16	22	N	N	Knowledge you should have before starting a project	Agility and discipline are not absolutes, but should be dosed out appropriately based on your project. The risk-management approach explained in this book is familiar to most business management folks, and provides a framework for making the right decision. This is a great way to cater a methodology to your project.<br />There were some &quot;day in the life of&quot; sections in this book that felt like fake stories -- it was almost like reading a DeMarco novel. Entertaining, but not entirely convincing. Also, contrary to Lean approaches, this risk management framework doesn't seem to lend itself to self-tuning as the project moves along (unless I missed something). There's a lot to be said for measuring how effective you're being and reacting to changes in your environment and product. The idea of doing all of your risk assessment up-front and choosing your methodology for the life of the project sounds exactly like the kind of thing that any &quot;Agilist&quot; would claim is not going to work!	2003-12-22
US	42961399	RV6D0J14JR4F6	0684841460	927601731	Competitive Advantage: Creating and Sustaining Superior Performance	Books	4	17	19	N	N	Dated, but accessible even to non-MBA types	A comprehensive introduction to how you can create advantages in your industry, even if you're not an MBA-type and just an engineer (like me). It'll also give you a useful framework for assessing what your current company and group is doing, what its vulnerabilities are, and how it relates to what the rest of the market is doing so you can make recommendations.<br />The only downside was the dated feel of the examples, which really made it difficult for a younger person to relate to.	2003-12-22
US	42961399	R2IC763CX296T6	0131016490	382772231	Test-Driven Development: A Practical Guide: A Practical Guide	Books	4	5	9	N	N	TDD with some UI examples!	The single best thing that distinguishes this book from the other TDD books on the market is its effort to produce a believable application during the course of using TDD. It even showed a way of unit testing GUI applications, which is easily the hardest thing in-practice about TDD.<br />On the bad side, some nicer abstractions around the UI and any patters he'd come up with to make UI TDD better would've been a great takeaway. Also, he said that he'd be using Smalltalk-style names because that was what it was familiar with, which is totally bogus. The book should be written for the reader, not for the writer -- if he was that attached to and unwilling to give up Smalltalk, then why write it using Java?	2003-12-22
US	42961399	R11R6X62CWGS1C	073520019X	927924008	Breakthrough Rapid Reading	Books	5	167	176	N	N	Anyone who can't speed read is at a disadvantage	I was already what was considered a pretty fast reader by its tests; in the 400wpm (words per minute) range at maximum speed. After going through the first half of the book, I was well over a thousand for the vast majority of all text. This has enabled me to go from a book or two a month to reading two or three a week, and has fundamentally changed my life. Even after the first couple of weeks I was dramatically improved, and after a couple of months of daily use, I was just flying.<br />On the bad side, I had trouble staying at the chapter per day pace, given a job, working on my Master's, and trying to spend time with my family. Still, I practiced, kept up with the new techniques, and continued to improve. Even though I left off just after I learned how to read at diagonals, it's stuck with me and been the best expenditure of time I've made.<br />I can't believe this isn't taught in school; it would've made college a completely different experience for me.	2003-12-22
US	42961399	RK2JCSVPNFJXN	0743223209	673438274	Practice What You Preach: What Managers Must Do to Create a High Achievement Culture	Books	2	1	4	N	N	Managers can skim for value, but probably not worth the time	While there's definitely some value in the things he says about the relationships between work environment and client respect, it was hard to say that his use of statistics matched what I remember from college. It would've been worth either eliding the high-level use of statistics entirely or just subjugating larger sections on the correlations and significance to a detailed appendix -- like papers on new type systems, people want to know that the semantics are sound in detail, but don't necessarily want to see every proof of every lemma interspersed with the text.<br />Additionally, it wasn't clear how to turn this into anything other than personal action items. It was easy to understand that you should change things in your company, but there wasn't a ton of advice around how to actually make the changes suggested.	2003-12-22
US	42961399	R18XAQ9OABQBO4	1578518520	621368309	The Innovator's Solution: Creating and Sustaining Successful Growth	Books	5	5	8	N	N	Even better than _Dilema_, provides a framework for growth	Even software developers should read this book; much like the better books on Agile methodologies, the major contribution is a framework for finding the right kinds of processes for the particular situation that your product and market are in. Naturally, it's also filled with a ton of business information relevant for anybody who cares about the bottom line, but I particularly enjoyed that the text remained a readable set of strategies while still feeling like all sides of the arguments had been thoroughly researched and referenced. Most research paper writers would do well to read this book just to get a feeling for their approach.<br />The only negative comment I have is around the lack of advice for folks who are running successful sustaining products so that they can assess competition -- it's hard to differentiate crackpot ideas from real threats to the business model, and reacting to every single idea with a competitive solution isn't practical.	2003-12-22
US	42961399	R2M62Q1JBL1OT7	0471202827	75825827	Agile Modeling: Effective Practices for eXtreme Programming and the Unified Process	Books	3	11	14	N	N	If you live in a world of too much documentation, read this	For those few places left that steep themselves in documentation and don't have a legally-required reason to do so (do they exist?), this book should help motivate why producing too much documentation and doing too much modeling up front can hurt rather than help. Even for a company that sees itself as lightweight, he's got some rough assessments you can do to see if you're overdoing things, which were relevant even where I work.<br />The only bad thing is that it was a very theory and ideal oriented book. It didn't contain concrete examples of what Agile Modeling would look like on a real project, how it would feel, and how what models were produced would evolve. This made it a bit difficult to verify my interpretation of the book.	2003-12-22
US	42961399	R9MV5W90GB988	0932633420	457787035	The Psychology of Computer Programming: Silver Anniversary Edition	Books	3	25	30	N	N	Good info on collaborations, but short on details and dated	This book has a wealth of information on how programmers work when in groups, and is a useful read for both managers and individual contributors alike. Many of the fuzzier, less-quantifiable people issues that affect programmers are covered well.<br />However, it really suffers in three ways:<br />- All of the examples and technology details are dated to the point of distraction.<br />- The typography appears to be photocopies of the original text, and really looks terrible. Couldn't they have reset it?<br />- Not a lot of concrete advice.	2003-12-22
US	42961399	RMUTHL3Y6097G	0060521996	116704127	The Innovator's Dilemma: The Revolutionary Book that Will Change the Way You Do Business (Collins Business Essentials)	Books	5	3	3	N	N	Rethink how you handle your current and future products	What more can be said about this book that hasn't already? Even an individual contributing developer like myself in a non-management role benefits from it, as there are great examples of how new products move from niche to mainstream and upset their competitors. After reading it, you should understand why it's so dangerous to keep your head down and *only* listen to your current and up-market growth customers.<br />The only downside to the book is the lack of practical advice on how to avoid being out-innovated, and Christensen's follow-on book, _The Innovator's Solution_, nicely addresses even that.	2003-12-22
US	42961399	R1ASJ45E06JAGN	0787969133	67333117	Authentic Leadership: Rediscovering the Secrets to Creating Lasting Value	Books	5	1	1	N	N	Defines what a leader and company should aspire to	This book restored my faith in CEOs and corporate America, just knowing that there was one person in the world who could write a book this motivating. It also gave me a much better understanding of the pressures and choices that they have to make on a daily basis, while still trying to hold true to a company's mission and deliver value to shareholders.<br />The only bad thing is that this made me a little bit depressed about my current place of employ; I couldn't tell you that I &quot;feel&quot; our mission, or even that I've ever met anybody above my current manager in the hierarchy to understand what they feel about it. Sure, I have my personal motivation, and my product has a mission, but as a company, I'd love to have what he brought to Medtronics.	2003-12-22
US	42961399	R3KX7Z6IV4GRLX	0738204315	559170405	The Cluetrain Manifesto: The End of Business as Usual	Books	2	9	15	N	N	If you've been asleep for the last four years, read this	I think the target audience is somebody who completely missed out on the late nineties, but who would like a very light read to understand the change in openness and freedom in conversations that most folks now take for granted. There's not a lot of content here -- you can skim about 10% of the book and get seemingly 99% of the content. If you're really &quot;clueless&quot;, hit the web version instead and save the effort of grabbing this book.	2003-12-22
US	42961399	R19NR2IAOVHA8V	0321193679	913658108	Professional Software Development: Shorter Schedules, Higher Quality Products, More Successful Projects, Enhanced Careers	Books	2	24	42	N	N	Heavy on opinion, light on content	The assessment of engineering, especially around how many people will be certified, leave nothing to argue with, though they're so forward-looking as to be somewhat irrelevant to a developer today. More interesting are his statements about running projects and professional development -- his company has the most compelling reward structure I've ever seen, and far outshadow's MSFT's baroque system.<br />Unfortunately, the lack of *any* mention of Agile methodologies made this book look like either the author has been in Tahiti for the last few years or is trying to subtly discount them. Either way, you read it and say, &quot;yes, this is exactly what Lean addresses; so what's your point?&quot;. It was also a little short on concrete recommendations, and comes off more as a position statement on where he'd like software development to be N years from now.<br />I'm glad that I read it because I generally like McConnell's writing and like to hear different opinions on certification of software developers, but I can't say that I'd suggest anyone else bother.	2003-12-22
US	42961399	R2O7XGEHDEVJLX	0130676349	789816571	Agile Software Development with Scrum (Series in Agile Software Development)	Books	4	4	5	N	N	Short introduction to a great system and how to get on it	A very practical guide, with easy to follow steps, great motivating arguments, and a logical presentation style make this book really work, especially given its short length. I also really enjoyed the examples given of team transitions. SCRUM itself is a very useful methodology for certain types of projects, and this book makes it clear what those projects are and how to adopt it for them.<br />On the bad side, the style change is pretty obvious and jarring when they switch authors, and some of the other-author chapters are interesting, but not necessarily as useful.<br />Missing from the book is a description of how to get buy-in and how to convince folks using a current process to switch (i.e. how to make and express a logical decision between two processes). It also neglects a bunch of the people issues, such as how to prioritize in career development, training, or even team-building / morale events. The book claims to be about the people and energizing them through shipping products, but I really think that's only one part of making your developers happy. A very important one, mind you, but not the only one.	2003-12-22
US	42961399	R1A2RCQP5378PA	0201760436	627589776	Agile Software Development Ecosystems	Books	4	2	2	N	N	Good first introduction to Agile methods	If you're new to Agile methods, this is a great place to start. The overviews and perspectives brought by the interviews provide an excellent introduction. The most useful thing in the book is the section near the end with a discussion of how to shape your own Agile methodology -- it's short, but a really useful set of practical steps.<br />Unfortunately, the interviews drag on a little bit and also start to feel a little bit repetitive. One or two of the high-level overviews are *so* high-level that you come out of them wondering what a concrete picture of it really looks like, especially since, if you go high enough, several of the approaches start to look the same.	2003-12-22
US	42961399	R1N8MKRJAP3KS3	1930110979	429533904	Code Generation in Action	Books	4	8	10	N	N	Great introductory material on code generation	The introduction and motivation are quite compelling, though a bit more detail on the dismissal of passive code generators (i.e. wizards) and focus on active code generators would be nice. The examples are also quite practical and seem high quality, though the use of Ruby is going to be a barrier to some.<br />There was one guest-written chapter that might as well have been elided, or should at least have been more edited to integrate cleanly. It repeated a lot of what had been said earlier, and could've just jumped straight to the point instead.<br />Finally, the code samples were a little repetitive in places. I would've preferred the book were shorter, with more info at the level between high-level and code (i.e. what does it make sense to paramaterize, and how should your generator work) rather than focusing either at the high level of 'architecture' or the low-level of 'how a single variable replacement works'. Still, an excellent book, and quite a good introduction for those who don't use code generators already.	2003-12-22
US	42961399	R2F4NL2TIFVUA5	0321150783	818520423	Lean Software Development: An Agile Toolkit	Books	5	6	7	N	N	Ignore particular methodologies; think about efficiency!	The word 'Agile' is in the title of the book, guaranteeing a place on the most important shelves and conferences. However, the contributions are much wider than just a buzzword of the day, and some of the chapters that aren't directly about Agile are applicable even in pre-Agile methodologies. Coverage of the Lean manufacturing principles and how they relate to software methodologies gives a good enough introduction to the field to get a nice feeling for how it all works and an intuition for why this style of development works better than ones that don't use feedback, continuous improvement, and the other techniques presented.<br />Unfortunately, the section on contracts was weak and pretty under-motivated. One of the 'case studies' in it was even completely fabricated, in a departure from the rest -- I would've preferred seeing the chapter left out! Also, the book in general could've used some smithing by an editor, as some of the chapters didn't seem to have a good reason for grouping together the concepts that they did, making it hard to tie them into a single group rather than the many mini-chapters that they felt like.<br />Still, a great book -- possibly the best single overview of Agile methodologies and their groundings on the market today.	2003-12-22
US	42961399	R1KHU2KEMPR3AQ	0961392118	1623997	Envisioning Information	Books	5	7	8	N	N	Everyone doing UI design or implementation should read this	As in all Tufte books, this is beautifully presented and wonderfully content-filled. In particular, you'll learn:<br />- All about the tasteful use of color in the design of interfaces<br />- How to maximize data visibility in interfaces, as opposed to the widgets, frames, and borders around the data<br />The only bad side is that some of the chapters end just when you feel like they're about to wrap up in a statement of a best practice, leaving you to sit around and solve the puzzle yourself. While I'm all in favor of mental exercise, I would've liked to at least have a solution to double-check against.	2003-12-22
US	42961399	RHBZQUL8CE3QZ	0321109295	202175890	Refactoring Workbook	Books	5	3	3	N	N	Required reading to get effective at refactoring	The concrete identification of smells, working examples, and straighforward but useful exercises make this book a must-have to really understand how to refactor your code -- even if you're a non-Java guy like myself.<br />It would've been nice to have examples inline for some of the refactorings -- more of the feel of _Design Patterns_. I also didn't agree with him everywhere; he asserted that there were some smells that had no known justitications and had to always be addressed. However, unit tests look like they would set off his 'too much internal knowledge' smell, but I probably wouldn't just go chopping them out because of that.	2003-12-22
US	42961399	RGK3IU1X1MKGI	0201776391	417529307	Winning with Software: An Executive Strategy	Books	4	4	4	N	N	Good overview of problems, but tough to get  traction from	This book is targeted at executives, but it's also useful for developers who might be curious about what Humphrey's been talking about for the last few years in his PSP and TSP processes. Value comes in this book from understanding what many problems in software development are, why you have to address them, and at what level they need to be addressed. That said, it was difficult to really 'close the loop' and get the end-to-end on how one would go from having recognized the problems to organizing people to solving it, to actually rolling out solutions. Still, a good book nonetheless, and more than worth reading, especially if you don't feel like sitting through one of the PSP/TSP books.	2003-12-21
US	42961399	RBEEM6TSZJYWP	0738208175	33712972	On Becoming a Leader: The Leadership Classic	Books	5	11	14	N	N	Both find meaning and understand how to lead	Great book not just for managers, but also for those being managed. It clearly articulates how to improve yourself, through a variety of motivational stories and excellent advice. Make sure to read the last chapter, though! The one ding I had while reading the book was that a lot of the advice wasn't actionable -- until I reached the last chapter, which closed off the book with a clear path forward for the reader.	2003-12-21
US	42961399	RK0JRNRUXDQD2	0961392142	707128479	The Visual Display of Quantitative Information	Books	4	4	4	N	N	The best for data display; missing how to tie displays in	Tufte isn't considered the master of this field for nothing; this work debunks a lot of common practices in data display, including use of color, composition of images, and the importance of scales and labels. An excellent grounding is provided in theory about how to effectively present quantitative data, but the practical advice and examples are also comprehensive.<br />The only thing this book was missing for me was how to tie in data display with the rest of a writing -- how to best visually display your data near descriptive text, but get the flow right so that readers will get the most value from it. Of course, you can get some of that information by osmosis merely by reading his beautifully-composed book.	2003-12-21
US	42961399	R1WCKGT0SE8CS	0787961485	417620942	Leading Geeks: How to Manage and Lead the People Who Deliver Technology	Books	4	22	24	N	N	Useful tips on leading, poor sections on management	There's excellent advice and concrete suggestions for a lot of the important things about leadership, particularly for those at the top of the hierarchy. Everything from the concrete pieces such of the work environment like the office space to the fuzzy pieces like the vision, mission, and keeping the team working well together are dead-on.<br />The management sections (chapters 10 and 11) delve deeper into management and organizational practices but aren't effective. IT describes methodologies at a high level (&quot;waterfall&quot; is usually bad, &quot;RAD&quot; is usually good), but goes into enough detail that you start to get lost in the descriptions of them and miss out on what is trying to be conveyed about what makes a good or bad methodology for a team. A similar thing happens when &quot;project roles&quot; are mentioned. There's also a pretty nasty technical error -- it describes the Microsoft Solutions Framework, then states that it's used internally at Microsoft. If so, I've never seen it, and it's not identical to our best practices.<br />Still, don't let that get you down. The first nine chapters make this well worth reading.	2003-12-21
US	42961399	R20W1AT0ETO59K	0201703327	461149122	Software Product Lines: Practices and Patterns	Books	3	7	8	N	N	If you're already doing this, a great book; otherwise, not	So, if you've already made the decision to go with software product lines, this is an excellent book. It's got a huge amount of reference material, is well-edited, and clearly has the benefit of a lot of practical experience.<br />Unfortunately, if you're debating with or just want to learn about software product lines, this book isn't for you. I didn't see a single example of when software product lines are *not* appropriate for a set of work that needs to be done and, in general, this just assumes that you already have the sort of work that fits this model and dives right into the details. Also, the &quot;29 practices&quot; are spread over just under 300 pages, and make it hard to understand the big picture. It would've been nice to see even one-page descriptions of the patterns in context to be able to pull it all together more easily.	2003-12-21
US	42961399	R32ZCISPL0R3E2	0201775948	319379482	Beyond Software Architecture: Creating and Sustaining Winning Solutions	Books	4	6	7	N	N	Good high-level coverage of issues in shipping software	Real software takes a lot of work to build and ship. This book covers the parts of your team's work that doesn't fall under either the umbrella of your development processes or your gritty technical details. The myriad of issues around involving marketing, understanding releases, determining security, logging, and configuration requirements are introduced nicely.<br />Missing were some coverage of accessibility and a lot of the people issues that creep up when working on these issues. It would've also been nice to see encouragements to get more real-people validation for your systems through alpha and beta programs. They're a great way to make sure that your configuration, logging, versioning, and support infrastructure is able to handle what you think you will need to do.<br />Overall, though, it's definitely worth giving this a read, particularly if you're in a role that requires you to have a broader set of responsibilities for your product (architectural, management, release, etc.) to make sure you're thinking of the right things. This is stuff that you just have to get right.	2003-12-09
US	42961399	R12QUF6NOERTU	0767907698	636160479	Slack: Getting Past Burnout, Busywork, and the Myth of Total Efficiency	Books	3	3	3	N	N	Motivates need for &quot;slack time&quot; well, but no implementation	Great general advice about the importance of slack-time and managing the production of schedules. It also has some really startling, yet obvious after-the-fact, advice about the lack of quality that happens when people feel rushed. Even if they're only working their day job hours, if there isn't slack time in their days, it'll affect their output.<br />The missing piece was really, in my opinion, how to measure 'how much' slack time to have. It seemed hard to get a metric for whether it's being used effectively or not.<br />This book follows in the rich tradition of &quot;Lean&quot; processes -- there's a whole wealth of literature out there on how to measure and assess the amount of &quot;slack&quot; in use and its effectiveness. It would've been good to make references to some of that information, though I'll be the first to admit that the dryness might have impacted the light tone of the book. Still, without better concrete tips on how to take action, the book does a good job motivating slack, but fails to really provide the concrete tips needed to execute on it.	2003-11-28
US	42961399	RWO18W5VHNB0K	0201485672	532976631	Refactoring: Improving the Design of Existing Code	Books	5	1	1	N	N	Great reference for when and how to change existing code	Great advice on when, how, and where to refactor. It also surprised me by having a bit more relevant stuff for big projects than the usual software principles and practices books do -- I'm used to having to extrapolate for myself. In addition to the great text, there's also a wonderful encyclopedic list of transforms. They're understandable enough to read and perform as a human, but also semantically well-defined enough to make tools almost directly on top of.<br />The last few chapters unfortunately felt 'stapled' onto the end. They all had a very different feel from the rest of the book and, while they were interesting viewpoints, they made it lack some consistency. It would've been good to have either Fowler-ized them or just left 'em out. I'm not clear how much value they added, other than saying, &quot;Tools are good to do refactorings. Without them, people aren't too religious about it. But don't trust the tools too much; baby-steps and test verifiction is still crucial.&quot;	2003-11-28
US	42961399	R1D83L67JWK0LQ	0135974445	115656945	Agile Software Development, Principles, Patterns, and Practices	Books	2	41	63	N	N	Book in two parts fails to excel at either	This is really two books; one is on agile development. The other is on design pattern examples. Unfortunately, it fails to be really tremendous at either.<br />The agile development part lacks much of the pragmatism of more recently published books on agility, espousing principles quite nicely, but avoiding all of the tricky issues around larger teams, products where the architecture -- as well as the product itself -- is a deliverable, etc.<br />The design pattern examples were pretty reasonable, but there are already more comprehensive tomes available online for free. The examples provided were just large enough to obscure the reading of the patterns themsevles and inhibit browsing (unlike the GoF book, which treads that line quite nicely).	2003-11-28
US	42961399	R397R8M2CVVSFM	0321146530	540051033	Test Driven Development: By Example	Books	4	52	57	N	N	Good introduction, but light on real-world development	If you've never done or are curious about TDD, this is a great book to carefully walk you through learning how and why to do it. After following its practices a bit, I've also found it an indispensible way to write new projects, modules, and code. However, the book doesn't address what happens when:<br />- The code base is old, and doesn't have any tests or isn't designed testable. It makes it hard to do anything other than introduce integration-level tests and tweak to success.<br />- You're writing UI code for a serious application. It's straightforward to solve for a dialog framework, but when you're integrating with a major windowing framework that embeds serious functionality (Avalon, in my case), there are a whole set of issues he doesn't talk about.<br />- Design is part of your deliverable. I don't disagree that you can get pretty reasonble designs out of TDD &amp; refactor. But I *do* disagree that, in practice, you get designs intended to version well, that your company is willing to support for the next decade or more. I've seen the code produced, and it just doesn't happen.<br />A good introduction, nonetheless. But watch out before you put on the preacher-hat after reading it and doing the exercises -- at least try to do it in part of one large, real-world product.	2003-11-28
US	42961399	R3C0NEBK2BVORX	0201844575	63402195	Questioning Extreme Programming	Books	3	5	5	N	N	Entertaining debunking of XP mythos, but not concrete enough	The biggest thing I liked was that it didn't just focus on XP, but also hit on a lot of other methodologies, doing some comparisons and contrasts. Expect to understand what all the hubub is about after going through it, without needing to buy into any of the other Agile background books first. You will probably also be able to take away a high-level piece or two of advice from it.<br />It's not something I would purchase, though, because it stays pretty high-level through much of the book, and doesn't really have much reference material value. I was also a bit dismayed that he hadn't run a project with XP yet. He cheerfully admitted it in the introduction, and his reviewers were all of the hardcore folks associated with XP; however, that still gave me the same feeling as I would get reading a book entitled Questioning Low-Fat Recipies from the Two Fat Ladies, where they claimed they'd never tried any. Sure, they're FAR better cooks than I am. And probably see more different types of recipies in a given week than I will in a year. But I just would get the feeling I might be missing the whole picture and that too many of the judgements are value-laden and not backed by concrete examples of things that went wrong in his XP projects.<br />Also, it was weird for a book this small, but I felt like it repeated itself in a couple of the 'summary' end of chapter sections, especially near the end of the book.	2003-11-28
US	42961399	R3JYKOAD3UFAG9	0201733862	497169336	Software Craftsmanship: The New Imperative	Books	3	3	6	N	N	Good, but not the best in a market with many to choose from	The empasis in particular on career growth through lifelong improvement as a developer instead of through transitions to management is crucial. I've seen way too many folks allow themselves to stagnate intellecually and then try to get promoted by moving into management, since they see that as the only avenue left to them.<br />However, the reason for the relatively low rating is that _The Pragmatic Programmer_ is a good deal better; Pragmatic is both more approachable in simple chunks for those who can't sit down and read it cover to cover and covers a few aspects of development and lifestyle that Craftsmanship avoids.	2003-11-28
