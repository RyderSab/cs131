US	39773668	RGWEBGATU4EJ	1590594851	441860653	Expert .NET Delivery Using NAnt and CruiseControl.NET (Expert's Voice in .NET)	Books	3	16	16	N	N	A decent introduction to NAnt and CC.NET	I picked up \\"Expert .NET Delivery Using NAnt and CruiseControl.NET\\" as a developer familiar with the original open source projects, Ant and CruiseControl, from the world of Java development. I have been long interested in how \\"the .NET people\\" do things even though my personal experience with .NET technologies has been limited to doing a day of training every now and then. From this perspective, I have to say I find a lot of good stuff in this book but it's still missing that something. The author, Marc Holmes, clearly states in the introduction that the book's goal is not to be a comprehensive guide for the tools being used. Instead, his focus has been to show the reader a practical approach to tackling problems involved in \\"delivering software.\\" I had some difficulty seeing that focus while reading.<br /><br />The first chapter titled \\"A Context for Delivery\\" is actually an excellent albeit short overview of the variety of aspects involved when discussing how to manage software configuration, the build process, and the deployment process. The next couple of chapters<br /><br />introduce the NAnt build tool and its essential built-in tasks. As a tutorial to NAnt, these chapters felt a bit too lightweight. Chapter 2 is an excellent tutorial for getting started with NAnt and chapter 3 briefly enumerates the most important built-in tasks available. These first three chapters were definitely the ones I liked the most.<br /><br />Chapter 4 presents a simple case study, getting a GUI application for performing XSLT transformations to build with a NAnt script. The author follows through creating the script from scratch, all the way from the classic \\"clean\\" target to checking out the project from Visual SourceSafe, incrementing a version counter on assemblies, running automated tests, static analysis, and packaging the build output into a .zip file for deployment. There's some discussion of NAnt features that weren't illustrated in the previous chapters but not much more than that.<br /><br />Chapter 5, titled \\"Process Standards\\", talks about the case study team refactoring their build scripts towards a structure that supports a \\"standard\\" build script to be used throughout the company's .NET projects. Very little meat in there. Most of this chapter seemed to present a topic of interest only to move on right away, without giving solutions beyond tiny snippets of NAnt tasks. As someone not familiar with most .NET concepts, I found it very difficult to follow.<br /><br />Chapter 6 brings continuous integration into the picture. After a brief explanation of why one would want to implement a continuous integration process, Holmes proceeds to describe CruiseControl.NET and how to configure it to build your .NET project. Again, only superficial coverage of the configuration options available which is consistent with the stated goal of the book not being about the tools themselves. Yet, at this point I realized that the good stuff had all been about the tools -- NAnt and (to a smaller degree) CruiseControl.NET. This pattern continued through chapter 7 which talks about extending NAnt with your own custom tasks. In fact, this chapter does a good job in showing the ropes through developing a FxCop task.<br /><br />Chapter 8 is a good one. It talks about techniques for dealing with the database schema in the context of continuous integration and incremental development. The example scripts do leave a sense of \\"magic\\" happening that I would've liked to know more about, but even as such this chapter can be useful for getting started with automated integration of the database alongside the application.<br /><br />Chapter 9 talks about code generation (with XSLT and CodeSmith) and how to incorporate it into the build process. The examples were a bit difficult to follow and there wasn't much background on the tools (CodeSmith and XSLT) themselves.<br /><br />To finish off, chapter 10 presents some closing thoughts as a summary for all the things discussed in the body of the book. Good stuff, makes a lot of sense. I find it interesting, though, that beyond the first and last chapters I found very little content that I could associate directly with practical delivery other than from the tool perspective.<br /><br />As a summary, I consider \\"Expert .NET Delivery Using NAnt and CruiseControl.NET\\" to be a nice tutorial for NAnt and CruiseControl.NET. Having said that, a large part of the book seemed to be somewhat disconnected from the stated goal of showing a practical approach to problems in delivering software.things discussed in the body of the book. Good stuff, makes a lot of sense. I find it interesting, though, that beyond the first and last chapters I found very little content that I could associate directly with practical delivery other than from the tool perspective. <br /> <br />As a summary, I consider \\"Expert .NET Delivery Using NAnt and CruiseControl.NET\\" to be a nice tutorial for NAnt and CruiseControl.NET. Having said that, a large part of the book seemed to be somewhat disconnected from the stated goal of showing a practical approach to problems in delivering software.	2005-08-13
US	39773668	R8YOMTI68QI5J	0672327465	894624125	Mac OS X Tiger Unleashed	Books	5	37	38	N	N	Good for a Windows/Linux convert	An \\"ultimate reference\\" type of bible for an operating system must be one of the most difficult books to get \\"right\\" simply because the volume of potential topics and details to cover is enormous and yet the skill level and knowledge of the reader varies significantly. From the perspective of a long time Windows and Linux user who's about to make the switch for personal (geek) use, I was delighted to realize that the Ray brothers have done a pretty good job at hitting my sweet spot.<br /><br />This 1400-page tome is split to seven parts and nearly 30 chapters. The first chapters introduce the desktop and some of the basic applications and utilities like the Safari web browser, Mail, iChat, the Spotlight search utility, and so forth. Very basic stuff, explained quite nicely with a couple of screenshots here and there. For me, these introductory chapters had a pretty good match for my preferred verbosity level, although I did tend to start skipping pages with a superficial glance on parts I would probably not be using all that much. The first part ends with a chapter dedicated to the new Automator utility for scripting OS X applications with the AppleScript language. I did feel like I would need some kind of a command reference in addition to the chapter, but it does a good job in getting past the steepest part of the learning curve.<br /><br />The second part talks about hardware. Starting from how to calibrate your display, the authors describe how to configure your accessories like keyboards, mice, Bluetooth devices, digital cameras, and such--as well as some less ubiquitous devices such as redundant disk arrays. It's mostly screenshots after screenshots and very understandable. I'm tempted to believe my mother could manage with these instructions. The chapter on printer setup is a lot less graphical (which isn't a surprise, really) as it talks about the various print settings and the CUPS printing system in detail, using the web interface for configuring printers. Networking, a topic near and dear to any geek, is also covered in the second part. Again, the authors have provided plenty of screenshots as everything is configured through wizards. I would've preferred more focus on networking, such as on the low-level tools available for determining what's wrong when \\"the Internet is broken\\", as well as a bit more instructions on how to configure the built-in firewall. The part finishes with a brief chapter on user management and basic security features like the FileVault.<br /><br />Speaking of low-level tools, part IV is completely dedicated to all the UNIX (BSD) stuff. File permissions, moving in the file system, inspecting running processes, and so forth. These chapters are written for someone not familiar with the UNIX shell and file system but there are some utilities that I at least wasn't aware of, such as the pushd and popd commands, for example. For a UNIX-newbie, these chapters are probably an excellent introduction. An especially useful piece is the introduction to text editors vi, emacs, and nano--I could imagine a reader unfamiliar with UNIX being a bit lost trying to figure out how to edit a file from the terminal. This part also talks about dealing with printers using command-line tools such as lpr and lpadmin. All in all, the whole of part IV is excellent material if you're new to the UNIX command-line or feel like getting some brushup before getting down to business. One specific aspect that surprised me (positively) was that the authors included material on installing software from the command-line all the way from downloading packages with lynx to building from source using configure and make, not to mention installing and using fink--an apt-get/yum/up2date look-a-like package manager for OS X. I also feel I should mention that the authors have really provided more help than just \\"first type ./configure, then make, and then make install\\"--they actually tackle common issues like installation locations. Havingsaid that, I did find it odd that the authors would describe the use of GDB (debugger) in this context...<br /><br />Part 5 continues the UNIX theme by diving deeper into shell scripting, starting and stopping services manually and upon startup, locating configuration files, and so on. This is all good stuff and well explained (although I'm sure my mother wouldn't quite grok xinetd services without some more help). To finish part V, the X Window System (including the use of remote X11 sessions) is mentioned in passing as well as the Perl and Python scripting languages. A bit odd choices, perhaps. I would've probably left these out in favor of less weight.<br /><br />Part 6, taking up a hefty 350 pages, is dedicated to configuring a MySQL database server, an Apache web server, an FTP server, a mail server, setting up remote access, and interoperating with Windows file shares using Samba as well as mounting and sharing NFS shares on Tiger itself. The remote access part shows not only how to use familiar tools like ssh, scp, and telnet, but also how to manage public and private keys for certificate based authentication. These topics are covered very nicely as basic tutorials with everything included that's necessary to get started although a lot of space is used for superficially mentioning, for example, how to compile some exotic Apache module. Again, something I would've personally preferred left out completely--just like the whole chapter on programming web applications with Perl and PHP. On the positive side, the chapter showing how to set up the open source Darwin Streaming Server is definitely of assistance when you're in need of streaming QuickTime movies from your OS X powered web server. Similarly, I was delighted to see instructions for configuring SpamAssassin along with the mail server.<br /><br />The final part starts off by introducing a couple of essential networking diagnostics tools such as traceroute, ping, and lookup. From there, the discussion moves to network security, firewalls, intrusion detection, and some routines with which to avoid the worst case scenario of someone taking over your machine. One essential routine is, of course, regular backups and the authors show a couple of different ways of taking backups of your data.<br /><br />I haven't yet mentioned one of the most important things SAMS has done right with this book--the binding. You can actually lay the book down next to your keyboard without losing the page every 15 seconds (with the rather obvious exception of the 25 or so first and last openings of the book). Well done indeed. I am definitely happy with this book as my guide to the world of OS X. There's the necessary visual quickstart stuff for getting going with the OS X user interface, and there's the nitty gritty low-level stuff for the inner geek. The only reason why I considered not giving it a full rating is because I felt there was too much \\"extra\\" that doesn't really belong into a book about an operating system.aving said that, I did find it odd that the authors would describe the use of GDB (debugger) in this context... <br /> <br />Part 5 continues the UNIX theme by diving deeper into shell scripting, starting and stopping services manually and upon startup, locating configuration files, and so on. This is all good stuff and well explained (although I'm sure my mother wouldn't quite grok xinetd services without some more help). To finish part V, the X Window System (including the use of remote X11 sessions) is mentioned in passing as well as the Perl and Python scripting languages. A bit odd choices, perhaps. I would've probably left these out in favor of less weight. <br /> <br />Part 6, taking up a hefty 350 pages, is dedicated to configuring a MySQL database server, an Apache web server, an FTP server, a mail server, setting up remote access, and interoperating with Windows file shares using Samba as well as mounting and sharing NFS shares on Tiger itself. The remote access part shows not only how to use familiar tools like ssh, scp, and telnet, but also how to manage public and private keys for certificate based authentication. These topics are covered very nicely as basic tutorials with everything included that's necessary to get started although a lot of space is used for superficially mentioning, for example, how to compile some exotic Apache module. Again, something I would've personally preferred left out completely--just like the whole chapter on programming web applications with Perl and PHP. On the positive side, the chapter showing how to set up the open source Darwin Streaming Server is definitely of assistance when you're in need of streaming QuickTime movies from your OS X powered web server. Similarly, I was delighted to see instructions for configuring SpamAssassin along with the mail server. <br /> <br />The final part starts off by introducing a couple of essential networking diagnostics tools such as traceroute, ping, and lookup. From there, the discussion moves to network security, firewalls, intrusion detection, and some routines with which to avoid the worst case scenario of someone taking over your machine. One essential routine is, of course, regular backups and the authors show a couple of different ways of taking backups of your data. <br /> <br />I haven't yet mentioned one of the most important things SAMS has done right with this book--the binding. You can actually lay the book down next to your keyboard without losing the page every 15 seconds (with the rather obvious exception of the 25 or so first and last openings of the book). Well done indeed. I am definitely happy with this book as my guide to the world of OS X. There's the necessary visual quickstart stuff for getting going with the OS X user interface, and there's the nitty gritty low-level stuff for the inner geek. The only reason why I considered not giving it a full rating is because I felt there was too much \\"extra\\" that doesn't really belong into a book about an operating system.	2005-08-13
US	39773668	R1M96H72XYCJ6	1590594444	813221867	Hardening Linux	Books	5	31	33	N	N	Excellent. Couldn't ask for more.	I haven't run a Linux box since 2002. Some time ago, realizing that I'd soon have a chance to migrate to using Linux for everyday work, I decided I should start refreshing my *NIX commands and shell scripting. Then, I saw \\"Hardening Linux\\". Rather spontaneously, I decided to start with this security-focused title instead of the perhaps more intuitive path of installing the latest distro, setting up a bunch of daemons, installing databases, etc. That proved to be an excellent decision. \\"Hardening Linux\\" is not a small book. Yet, I read the 500 pages more or less cover to cover. Even though we're talking about a book of which purpose is to help you to secure your Linux server, I felt like I learned more about Linux reading this book than I've learned during the last year at work.<br /><br />Turnbull kick starts the book by explaining user and group management, basics of the Linux file system security, how to verify downloaded packages, which tools and packages you probably should remove from a production server. By page 50, he had also shown how to compile your kernel with security flags and the Openwall project.<br /><br />After the rather intense first chapter, the rest of the book's chapters each focus on a certain aspect of a system or a specific product, showing how to secure your system from that particular perspective. Most of these chapters are really top-notch compared to most of the online material I've resorted to in the past. For example, Turnbull presents the most intuitive tutorial on configuring the iptables firewall I've seen so far.<br /><br />Another excellent description is the chapter on file system security. In my experience, the majority of developers dealing with Linux -- myself included -- don't really know much about Linux file system security beyond the basic file permission attributes. Thanks to chapter 4, I know twice as much about what's possible and what to look out for with regards to file permissions and ownership, and all those mysterious \\"special\\" characters that don't have to do with the basic read-write-execute stuff.<br /><br />The author also covers the topics of syslog (and syslog-ng), secure remote connections (including SSL/TLS and SSH among other things), and gives a broad overview of common security analysis tools such as NMAP, Nessus, Ethereal, and tcpdump. Beyond those I already mentioned, Turnbull has written excellent chapters explaining how to secure your email servers (both sendmail and postfix), putting your FTP server into a chroot jail, and how to set up your DNS server and protect yourself from common attacks such as cache poisoning.<br /><br />All in all, an excellent book on not just Linux security but also on Linux fundamentals. Highly recommended reading if you're running a Linux box you wouldn't want getting \\"0wn3d.\\"ysterious \\"special\\" characters that don't have to do with the basic read-write-execute stuff. <br /> <br />The author also covers the topics of syslog (and syslog-ng), secure remote connections (including SSL/TLS and SSH among other things), and gives a broad overview of common security analysis tools such as NMAP, Nessus, Ethereal, and tcpdump. Beyond those I already mentioned, Turnbull has written excellent chapters explaining how to secure your email servers (both sendmail and postfix), putting your FTP server into a chroot jail, and how to set up your DNS server and protect yourself from common attacks such as cache poisoning. <br /> <br />All in all, an excellent book on not just Linux security but also on Linux fundamentals. Highly recommended reading if you're running a Linux box you wouldn't want getting \\"0wn3d.\\"	2005-08-13
US	39773668	RTVKQ73XGE02	1932394354	679821634	Spring in Action	Books	5	43	50	N	N	Excellent coverage and an easy read	There's been a bit of a rush of books about the Spring Framework recently with a number of publishers releasing their own titles one after another. Without having read those other books, I feel confident in saying \\"Spring in Action\\" won't let you down. It's a wonderful introduction to the framework and a handy reference for those desperate moments with the Spring configuration files.<br /><br />What I especially like about \\"Spring in Action\\" is the style of writing. The book is largely about how to configure this and that and still I read most of the book in one sitting. The text flows well and the humor sprinkled throughout adds a nice touch. The other good things about this book include a good coverage of the Spring Framework itself. Only some parts of the Acegi security framework have been left out, as far as I can tell, and those features (ACL's and run-as) are not what I'd call essential so it didn't bother me much. In addition, the authors give a good comparison (brief, but a good overview) of Spring and other technologies and frameworks such as EJB, Struts, WebWork, Tapestry, PicoContainer, HiveMind, etc. Furthermore, the authors show you how to integrate with these other frameworks (except for the other IoC containers) and view technologies like JSP, JSF, Velocity and FreeMarker. Add to that, the index looks very comprehensive which is an important detail for a book that one might use as a reference afterwards.<br /><br />So, what separates this book from perfection? For one it had a lot of little typos, the text did exhibit a bit of repeat (didn't I just read this sentence on the previous page?) here and there, and I feel like mixing multiple ViewResolvers was covered too lightly. I don't consider these to be big issues, though, and I won't hesitate for a second in recommending \\"Spring in Action\\" for someone looking to get started with the framework.	2005-03-09
US	39773668	R2UNJ21VKBKFBM	1590593804	623611786	PHP 5 Objects, Patterns, and Practice	Books	4	29	32	N	N	A great introduction to object-oriented PHP	I haven't read a book on PHP in ages. In fact, I haven't programmed in PHP since 2001. With this in mind, I can say that Matt Zandstra's \\"PHP 5 Objects, Patterns, and Practice\\" was a very approachable introduction to what the latest version of the PHP platform has to offer to an OO developer from the Java scene.<br /><br />The book is split to three main sections: objects, patterns, practice. The first section runs through the new object-oriented features of PHP 5, the second sections introduces design patterns and includes a catalog of some of the more common patterns from the original Gang of Four patterns as well as from \\"Core J2EE Patterns\\". The third section is a set of tutorials on tools and assets that a modern day PHP developer really should know about and make use of: the PEAR installation tool, PhpDocumentor, and the Phing build tool. The author also squeezed in a bit about the PHPUnit2 library for unit testing PHP code which I especially appreciated.<br /><br />The design patterns catalog is far from comprehensive, covering only a small subset of published design patterns in the Java/.NET camps, but serves its purpose alright. Every included pattern is illustrated with an example that the author has crafted for the PHP context - in other words, these are not just direct ports from their Java equivalents, for example.<br /><br />While being an easy read, Zandstra's introduction to the object-oriented features is, I believe, perfectly adequate to get started with object-oriented PHP programming. Combined with the discussion about design patterns, the book feels like a valuable asset for getting up to speed after a break. A more up-to-date PHP developer might find the information a bit lacking but for someone new to PHP 5's object-oriented features, this is a good package to get started with.	2005-03-09
US	39773668	RF932GSMWADAR	1932394362	908934797	Subversion in Action	Books	5	3	3	N	N	Excellent work	Version control and configuration management is a topic that most software developers know just enough to get by. Branching, tagging releases, merging changes, etc. are all things people rarely feel comfortable with doing, largely because every version control system has different ways of doing these tasks. If you're one of those people (like me) and you happen to be using Subversion, this book should be high up on your shopping list.<br /><br />Jeffrey Machols does a great job in explaining the fundamental concepts of version control and has injected plenty of tips for how to accommodate configuration management in a software development process. That's something many tool-oriented books have lacked, in my experience. In addition to that, Machols gives the most thorough walkthrough of Subversion tools and features I've seen. File permissions, repository-wide revisions, client commands, administrating the repository, taking backups, setting up authentication, configuring the standalone server process as well as the Apache module, wiring up commit hooks. There's very few things missing from this book and the topics that are covered are covered well!	2005-02-14
US	39773668	R25H6RH2A4LHSA	0321303636	237745391	eXtreme .NET: Introducing eXtreme Programming Techniques to .NET Developers	Books	4	8	9	N	N	Great examples	Dr. Neil Roodyn's \\"eXtreme .NET\\" is a book aiming at showing how to apply the Extreme Programming development techniques to .NET development. The approach is very much example-driven, meaning that the book is full of examples both in the form of programming tasks and dialogs between the members of a fictional .NET development team.<br /><br />Looking at the table of contents, the book would seem to cover all the essential stuff, including Refactoring, test-driven development, pair programming and testing, as well as some supporting practices such as automated builds. While I enjoyed reading Dr. Roodyn's writing and the content is quite nice a mix indeed, I am still left with this itch that I'm missing something -- I suspect that something is more discussion about the low-level techniques, tools, etc. that I'm so at home with when doing Java. It also might be that while the book focuses so much on the examples with a relatively light overview on the forces driving the practices, I'm feeling like I'm being shown the \\"what\\" and \\"how\\" but not the \\"why\\". Having said that, the examples (both user stories and development tasks as well as the code snippets) used in the book are excellent and well chosen in terms of complexity. Dr. Roodyn managed to avoid the most advanced features of the language of choice, C#, which made my life a lot easier, being new to the platform.<br /><br />In summary, I wouldn't recommend this book as an introduction to Extreme Programming because it doesn't go down that road far enough. I also wouldn't recommend it as a reference or tutorial for setting up the development environment to support XP because it doesn't cover nearly enough details. I would, however, recommend it to follow up that introductory \\"generic\\" XP book a .NET developer should read first. Dr. Roodyn's description of the development process is definitely worth the effort if you're not quite sure about how test-driven development works in practice or about how those stories are broken down to tasks.e broken down to tasks.	2005-01-06
US	39773668	R2LJCQGS9EJVU2	0321278658	552375513	Extreme Programming Explained: Embrace Change, 2nd Edition (The XP Series)	Books	5	24	26	N	N	This is what a 2nd edition should be like	The release 1st edition of this book is still considered by many to be the kick start for the growing adoption of a software development process called Extreme Programming. After 5 years, the 2nd edition faces a much different world but also with much different content and approach. The world has learned much and so has the author. I'm glad to see that this 2nd edition reflects that development.<br /><br />Beck has revised his thinking throughout the book. Some obvious examples include his current preference towards using ideal time over abstract time units in estimating, the fifth value among the initial four, the new set of principles, and the rehash of the practices.<br /><br />Extreme Programming Explained is not a detailed how-to for adopting the process it describes. Actually, it doesn't really describe a process at all. What it does describe is a system of values and principles and a set of practices to support these. Even though Beck does give each practice (divided into primary and corollary practices in the 2nd edition) their share of explanation, the focus is still strongly on the \\"what\\" and \\"why\\" instead of the \\"how\\".<br /><br />As someone who has read a dozen books on the topic already, I was delighted to find almost every page to provide something intriguing that either created or challenged my own thoughts. Especially the latter half of the book, dealing with topics such as TOC, scaling, Taylorism, the Toyota Production System, and the hot potato itself -- offshoring -- offered a lot to think about.<br /><br />This is what a 2nd edition should be like, every single chapter reflecting new insight gathered over the years.	2004-12-23
US	39773668	RU5C63MZQ0P2N	0932633579	797493508	Agile Software Development in the Large: Diving Into the Deep	Books	4	6	7	N	N	Lots to think about, though not quite as detailed as I hoped	Most other titles on Agile Software Development repeat the mantra about lightweight processes and how they are only applicable for small teams of a dozen or so. This book is different. It sets out to offer the advice of someone who has been running software projects with over hundred people using an agile process -- to help others succeed in the same.<br /><br />While there aren't any hard numbers and the like, a formula to make a silver bullet, there's plenty of sound advice starting from structures to help scale up an agile process, the challenges one will encounter while scaling, and the peopleware issues evident in large, often distributed projects as well as large companies in general, with all the associated bureaucracy and policies. The discussions about building teams around features versus components, for example, and the division into domain teams and technical service teams are useful reading for someone facing such decisions.<br /><br />Also, this book does not expect you to know the slang of agile software development. It's written so that a manager familiar with software development -- but not necessarily agile software development -- has no problem understanding what the author is trying to pass on.<br /><br />What's missing from this book -- something one might wish to get support for, facing a larger than usual agile project -- is the deeper coverage of techniques to facilitate things like emergent architecture across a distributed development team. The project report from a 170-member software project was not quite as detailed as I would've hoped. Detailed case studies are something I am personally very interested in reading.<br /><br />In summary, while the advice in this book is relatively abstract, and you might think it doesn't have that much to offer if you are already familiar with Agile Software Development in general, I would certainly not dare to risk a large project by NOT reading this book.	2004-12-18
US	39773668	RJAB1LOW2TJV1	0974514055	510267474	Programming Ruby: The Pragmatic Programmers' Guide, Second Edition	Books	5	8	8	N	N	All you've ever wanted to know about Ruby...	This was another book that I picked up with the expectation that it would introduce me to a whole new programming language. It did. And it did it well. The overall quality of the writing is top notch and the pragmatic approach simply works. Not too much memorizing the language syntax, not too much talk about the history of computers. Instead, the book jumps to the Ruby world head on.<br /><br />So I just said \\"not too much memorizing the language syntax\\". What does that mean? Well, the first part of the book does indeed teach the reader to write syntactically correct Ruby code. However, the way it accomplishes this is not by focusing on the syntax but on the function behind the syntax. Also, the authors have paced the chapters so that you won't be spending too long a time reading about some single specific thing. For me, this approach fits like an old glove. I usually read books in short sprints, be it in a bathtub, a bus, or in bed. Having said that, I do believe that you can get the most out of this book by alternating with reading the book and the interactive Ruby interpreter. There is a downside to the fast pace, though. At times, a specific chapter doesn't quite give you the kind of sense of belonging as the others around it do.<br /><br />Looking at the wide range of topics listed in the table of contents, the book definitely looks like it covers everything under the Sun. Some of the topics got me panting, almost. Developing web applications with Ruby (one of my motivations behind deciding to read the book in the first place) and unit testing Ruby classes, for example, were topics that I was a bit disappointed about not getting more focus.<br /><br />Another thing I didn't like too much is the size. At 800+ pages, you're not likely to carry this book around with you. I would've personally preferred putting the 300-page the language/API reference online and left it out from the hardcopy. With the size thing out of my way, I have to admit that the reference certainly looks great compared to what I've seen in most Java books, for example.<br /><br />All in all, I'm confident that this is one of the best Ruby books out there if not the best, even. Regardless of the few gripes I listed above, there's more than enough absolute gems hidden within these covers. I am certain you won't have second thoughts picking this one to get started on your Ruby way.e certainly looks great compared to what I've seen in most Java books, for example. <br /> <br />All in all, I'm confident that this is one of the best Ruby books out there if not the best, even. Regardless of the few gripes I listed above, there's more than enough absolute gems hidden within these covers. I am certain you won't have second thoughts picking this one to get started on your Ruby way.	2004-11-23
US	39773668	R3D1ZTPCLZVL4Y	1590592905	543763869	Practical Subversion (Expert's Voice in Open Source)	Books	4	10	12	N	N	Nice coverage, good tips and an easy read	\\"Practical Subversion\\" is just that -- a no-fluff-just-stuff guide to using Subversion. It takes the reader from creating his first repository, importing his first project, checking out a working copy, and so on, to administering the repository and integrating with it using a number of programming languages -- briefly but still.<br /><br />Having said that, and even though it certainly covers a lot of ground, \\"Practical Subversion\\" is not a complete reference. The author covers all subjects in a pragmatic manner, covering the common needs well and giving enough hints to help the reader in finding answers for the edge cases.<br /><br />What I especially like about product-oriented books like this one is when the authors sneak in advice on best practices in using the product, the \\"tips and tricks\\" type of gems that make you go \\"wow\\" in a bathtub. In addition to learning how to take a backup, I now know how to add auto-completion for Subversion commands in Bash!	2004-11-12
US	39773668	R3M4INXIQYA2GK	1932394230	762247227	JUnit Recipes: Practical Methods for Programmer Testing	Books	5	4	4	N	N	Yet another must-have title	J.B. recently replied jokingly, \\"buy them their own copies\\", to my mentioning that my team would be all over my copy of \\"JUnit Recipes\\" like vultures if I was to leave it on the desk at work. I have to say that's not a bad idea. In fact, that's what you should do if you're determined to make your development team learn how to write effective unit tests in those non-trivial settings you inevitably encounter out there.<br /><br />\\"JUnit Recipes\\" is, as its name implies, not a tutorial for writing JUnit tests although it does start small with some 50 pages of basic conventions and fundamentals of writing JUnit tests. Instead, it's a huge collection of little recipes for tackling those everyday problems developers around the world encounter when trying to unit test their applications. Real world solutions to real world problems. The book is divided into chapters by coarse-grained topics such as organizing test suites, test data, XML, EJB's, JDBC, etc. all the way to testing web components and J2EE applications. The last hundred or so pages of the book talk about some more exotic topics such as unit testing design patterns, using certain popular JUnit Extensions such as GSBase and JUnit-Addons.<br /><br />The recipe approach fits the domain perfectly. One doesn't need to reach 30 some pages of prose before \\"getting it\\", which is the case with certain types of books discussing other problem domains. The recipes go straight to the meat of the subject with concise and clear problem statements and then quickly proceed to show how to go about solving them. The formatting of the provided code snippets is excellent as usual, with strong visual highlighting of important sections and careful indentation.<br /><br />Joe has managed to put out something that I believe will be known as the unofficial JUnit bible for years to come. What are you waiting for?	2004-10-19
US	39773668	R1L7OANHIHS4DD	0321228103	936034538	Open Source .NET Development: Programming with NAnt, NUnit, NDoc, and More	Books	4	7	9	N	N	A great overview, not a reference book	Brian Nantz's latest book, \\"Open Source .NET Development\\", strikes to me as a controversial title. On one hand, it's a fantastic tour for getting to know what tools you've got at your disposal when journeying into open source development using .NET. However, the depth of many of the chapters on a given tool or topic is a bit too far from what the back cover implies.<br /><br />There are some very good chapters (the overview chapters, NAnt, NDoc, Log4NET) and some that I felt disappointed with (NUnit, Continuous Integration, DB development, Web development). The chapters that I liked, I really liked. They gave me as a newbie to .NET development a very good handle on how the things I've learned to do with the Java counterparts work in the other side of the fence. On the other hand, the chapters I felt to be too superficial did too much talking and failed to give answers to many questions that came to me while reading. Then again, some of the topics covered are simply too big to even attempt to cover with a single chapter.<br /><br />I won't hesitate to recommend \\"Open Source .NET Development\\" to anyone looking for a picture of what's out there. For a reference, this title alone is not enough.	2004-10-16
US	39773668	RD3OV8NXS0ZHO	0974514039	671264813	Pragmatic Project Automation: How to Build, Deploy, and Monitor Java Apps	Books	5	4	5	N	Y	I'll be calling this my "precious"...	If you're involved in any type of commercial Java projects, you owe yourself to pick up this book. I'm not kidding.<br /><br />\\"Pragmatic Project Automation\\", the third book in the Pragmatic Programmers' Starter Kit series, authored by Mike Clark, is an invaluable asset for automating the grunt work of your Java development projects and raising your standards regarding quality, lead times in bug fixing, and eventually, the motivation of your whole team.<br /><br />I read the book over a weekend in two sittings and enjoyed every minute of it. Mike has put together a series of high quality tutorials for setting up a repeatable build process using Ant, scheduling the build process using shell scripts, cron/at, and eventually CruiseControl, while keeping in the spirit of pragmatic thinking. He then continues by showing how to automate your release process and software deployment -- with both simple shell scripts and an open source graphical installer tool. To finish, he talks about different techniques for monitoring your software for errors.<br /><br />I honestly couldn't find anything to complain about this book -- except that I wouldn't have minded reading another 150 pages of it.	2004-09-20
US	39773668	R1DXHH9OJSHM8I	1590592654	495680256	Decompiling Java	Books	4	8	10	N	N	Interesting and intriguing, but a bit too light on details	\\"Decompiling Java\\" is an interesting piece of work. In just 250 or so pages, you'll go through legalities related to decompiling Java code, learn the basics of Java's class file format, get a brief run-down of tools available for decompiling and obfuscating Java code, all the way through different methods employed by obfuscation tools. Finally, Nolan goes through the design of a basic Java decompiler implementation using JLex and CUP open source compiler compiler tools.<br /><br />The brevity of the book is both its best and worst characteristic. It's great because I certainly wouldn't have wanted a bible on copyright and patent laws in different parts of the world, but it's unfortunate because the topic you're interested in is bound to be slightly too superficial or detached from the rest of the book. For example, I would've liked to read a lot more about the actual class file format and the internals of a JVM in the book itself instead of having to read from a specification on the web. On the other hand, the author managed to light some bulbs in my head along the way and I actually enjoyed reading his text - especially the chapter about creating a decompiler using JLex and CUP (which I've also found a bit too intimidating to actually look into).<br /><br />In summary, \\"Decompiling Java\\" is a good overview of decompilation in Java and it has a couple of real gems inside, but if you're looking for a manual for dissecting class files or the JVM, it might not the book you're looking for.	2004-09-20
US	39773668	R3NS1JEKKSOVWW	1590593561	267967323	Dive Into Python	Books	5	8	9	N	N	Great choice for a Python-newbie	This was my first foray into Python. That is, beyond what I had picked up from random articles on the Web over the years. As more or less a complete newbie to the language, I most certainly valued the approach employed and I constantly had those little thoughts like \\"this is the way a programming language should be taught\\".<br /><br />Now what is this approach I'm praising here? In short, it's the good ol' get-your-hands-dirty-quick method of diving head first into actual, meaningful code to figure out what it does, why it works, and thereby figuring out new language features a couple at a time. For example, on page 11 you don't get a list of reserved words in Python or a brief history of how one programming language lead to another, but instead you get a code listing for a little program that takes a dictionary and constructs an ODBC connection string out of it. Simple? Yes, but much more interesting than seeing the syntax for a for-loop. Throughout the book, Pilgrim shows you how to use Python in parsing strings, processing XML, evaluating regular expressions, calling web services, and what not.<br /><br />\\"Dive Into Python\\" is not a reference you can turn to with any Python question imaginable. Instead, it's a very effective tutorial and overview of what (and how) you can do with Python.	2004-09-09
US	39773668	R35390MNRF08OV	0849321425	194171465	Software Architecture Design Patterns in Java	Books	5	37	42	N	N	My new favorite	Design patterns used to be the hottest topic around a couple of years ago. One of the side-effects was the \\"Applied Java Patterns\\" book which I very much liked and used to recommend to anyone looking for a \\"GoF\\" replacement using Java for code examples. Not anymore. From now on, I'm recommending Kuchana's \\"Software Architecture Design Patterns in Java\\".<br /><br />Why am I so pleased with this book? What makes it any different than other design pattern books? Well, first of all the volume is huge. Kuchana's book covers all the original Gang of Four patterns plus another 20 or so patterns, including a couple of multithreading related patterns. Second, the text itself is very readable and doesn't cling too much on fancy words. The explanations are concise and to the point. Further kudos goes to dealing with such frequently asked questions like the difference between Factory Method and Abstract Factory.<br /><br />To list some things I didn't like about this book, I have to say that having exercises without sample answers in the back was a tiny disappointment and I would've preferred a bit more condensed font for the code listings. That's about it.<br /><br />All in all, a very good choice for filling the gaping design patterns encyclopedia slot in your bookshelf. Highly recommended.	2004-09-09
US	39773668	R2FMA1DUAHDNA7	0072256591	112941966	Struts: Essential Skills	Books	4	7	8	N	N	Great tutorial, not much of a reference though	I've been playing with Struts ever since 1.0 came out. However, I haven't worked with Struts on anything more than simple applications, which made this book sound like a perfect match for my needs. Especially as it covers Struts 1.2 (beta).<br /><br />Mister Holzner does a great job explaining certain things that many other resources seem to omit, assuming that the reader can figure it out on her own (often by reading source code). In general, the book's contents feels like a good match for the book's stated target audience.<br /><br />The negative remarks I wrote down while going through the chapters included a lot of tiny issues like not explaining all attributes (even with a one-sentence mention) of the action mappings in a Struts configuration file. Also, it was weird to be taught how one uses &#34;javac&#34; -- the book clearly states that working knowledge of Java is assumed.<br /><br />Furthermore, many example code snippets in the book use horrible package and class names such as &#34;ch03.ch03_05&#34;, which makes it unnecessarily difficult to keep track of which file is which. Also, the decision to employ a custom taglib, &#60;ch03:toppings/&#62;, just to set up a list of items for testing when a simple scriptlet would do?<br /><br />Regardless of me whining about the smaller issues, I'd say &#34;Struts: Essential Skills&#34; is a great learning resource for Struts. It's far from sufficient as a reference, but I've never seen as effective a Struts tutorial than this.	2004-08-15
US	39773668	R3A9XA0M2VP4ZW	0072258543	153589996	Java 2 v5.0 (Tiger) New Features	Books	4	10	10	N	N	You can't go wrong with this book	\\"If you already know Java and want to utilize the impressive array of innovations contained in Java 2, v5.0, this book is for you.\\" That's actually from the back cover of the book and I have to say I fully agree. Schildt has brought us many useful titles and \\"Java 2, v5.0 (Tiger) New Features\\" is no exception.<br /><br />The delightfully small book (a hair below 200 pages) packs just enough information to upgrade your know-how to the level of the latest Java version. Each topic (generics, autoboxing, enums, for-each, static imports, varargs, annotations, formatter, scanner) is explained clearly and concisely with expressive code samples. Schildt even lets you in on how the compiler handles some of these syntax enhancements, which I especially enjoyed reading about. The major features of each new addition is discussed in more detail and the less common methods are given a one-sentence description, which suits me, personally, quite well as long as I agree with what's common and what's not.<br /><br />Talking about agreeing on what's common, the only real gripes I have with \\"Java 2, v5.0 (Tiger) New Features\\" is that the author completely by-passes the addition of java.lang.instrument and java.lang.management packages, only mentioning that those have been added. I would've certainly expected to read at least a page worth of overview on the actual services those packages provide.<br /><br />In summary, I'd say you can't go wrong with this book. It's not a \\"complete reference\\" nor is it intended to be. It's a quick path to knowing just enough to feel comfortable diving into Java code written \\"Tiger style\\".	2004-08-08
US	39773668	R2MZ23M8SANR84	1590593251	544907324	The Definitive Guide to SWT and JFACE	Books	5	21	23	N	N	Great choice for starting your SWT learning path	I won't be needing another SWT book in a while... \\"The Definitive Guide to SWT and JFace\\" is indeed definitive and proved to be a nearly perfect choice for starting my journey inside Eclipse's much hyped GUI toolkit(s).<br /><br />The book starts from scratch, explaining the history and motivation for a different approach to a GUI toolkit (SWT's native peer widgets vs. the emulated widgets of Swing, etc.), proceeding to your typical Hello World app with a single window and a single label, and ends up covering most everything I can think of needing to build even a relatively complex GUI using SWT and JFace. The book is a huge tome, partly because it includes listings of all the various methods provided by the classes introduced along the way. On one hand, it's a good thing because the book is pretty much all you need (i.e. a decent replacement for Google;), and on the other hand, the book would be a lot more pleasant to read if you'd drop a few hundred pages...<br /><br />One thing I specifically liked about the book is that the authors have done a good job employing screenshots where needed -- especially in the chapter about layouts.<br /><br />I'll definitely recommend this book for anyone looking to learn SWT. I'm not really a GUI developer (only having done Swing for personal stuff) and the book works for me as an introduction, tutorial, and a reference.	2004-08-06
US	39773668	RK4PICQ0LKORA	0321219775	435264386	Agile Project Management: Creating Innovative Products	Books	5	4	6	N	N	Highly recommended	Jim Highsmith has managed to write quite a piece of work. &quot;Agile Project Management&quot; contains a valuable catalog of simple practices that combine to support Highsmith's vision of an agile project's phases: Envision, Speculate, Explore, Adapt, and Close.<br /><br /> The book follows the &quot;APM Framework&quot; through each of the phases, illustrating what the phase is all about and enumerates through the practices in the APM toolbox. Also, the beginning of each chapter carries a nice little conversation between two fictional characters which asks the tough questions just when you are about to ask them and gives you a rough answer to guide your thoughts to the right direction -- with the chapters themselves discussing the topic in detail.<br /><br /> This is one of those must-read titles for someone who's serious about improving on his craft.<br /><br /> I have to confess that Highsmith's award-winning &quot;Adaptive Software Development&quot; has been waiting on my bookshelf untouched for a long time. Having read APM -- and thoroughly enjoyed every aspect of it -- I can't help but pick it up soon.	2004-08-01
US	39773668	RRGIGORZ66231	0321205685	193567896	User Stories Applied: For Agile Software Development	Books	5	69	71	N	N	The user story bible	'User Stories Applied' was a book that long stood on my Amazon wish list with a 'must have' rating. I'm not disappointed. I loved the book. Now let me explain why.<br /><br /> First of all, running the planning aspect of an XP project, for example, well is essential for reaping the benefits of agile software development. Yet, relatively little has been written to guide practitioners in doing that. I, for example, have made all the mistakes Cohn enumerates in the chapters for guiding the user towards writing *good* user stories (usually more than once). These sorts of things make you realize you shouldn't put the book on the shelf to gather dust! The author doesn't cover just writing good user stories, but the whole spectrum from putting together the customer team to estimating stories to discussing the stories to writing acceptance tests for the stories.<br /><br /> Second, it's a pleasure to read. The structure makes sense, each chapter is followed by a useful summary, and there's a set of questions -- along with answers -- to make sure you understood what the chapter talked about. Usually these kinds of Q&A sections simply force me to skip them over. The questions in this book did not. I read each and every one of them and I think there was only one set of questions that I did 'pass' with the first try, usually having forgotten some rather important aspects to consider (concrete evidence of their usefulness to me). To finish, the last part of the book, an example project, nicely ties together all the threads.<br /><br /> As usual, there were some things I experienced not so well. I believe the chapter on applying user stories with Scrum could've been left out without breaking the plot. Also, I think a typical user wouldn't have been bothered about dropping the appendix introducing Extreme Programming.<br /><br /> In summary, this is the book to get if you're involved with user stories. I had to pause reading every few pages to scribble down some specific tips. I'm confident that you will too.ic tips. I'm confident that you will too.	2004-07-25
US	39773668	R1HTWNZW1DBA41	0131407287	63068537	Software by Numbers: Low-Risk, High-Return Development	Books	5	10	10	N	N	Ground-breaking	&quot;Software by Numbers&quot; is yet another book I would like any manager involved in my working life to read and re-read.<br />The authors describe an Incremental Funding Method (IFM) for scheduling incremental development of software which optimizes the Return on Investment (ROI) by having the requirements engineered into Minimum Marketable Features (MMF) with concrete, monetary value.<br />The book is very light (less than 200 pages) but packed with interesting material. I read most of the book during a flight from Finland to Germany and finished the book on my way home. Despite the minimal page count, the authors manage to explain why their method is desperately needed and how it fits to existing software processes such as RUP and XP. They also describe the business case for incremental architecture and different strategies for sequencing MMFs and Architectural Elements (AE) for maximum ROI over the project's lifetime.<br />The only downside I found for this book is that I would've needed some more baby-steps support for the actual calculations (sequence-adjusted net present values etc.). I'm sure others will be hoping to see some more real world examples of feature deconstruction and sequencing as well. On the other hand, I really appreciate the fact that the authors made the effort of putting up a spreadsheet online for supporting their method.<br />Overall, an excellent book. Highly recommended.	2004-06-13
US	39773668	RJOGAP2UJDFWR	1590591011	549297845	Pro JMX: Java Management Extensions (Expert's Voice)	Books	3	10	10	N	N	Not for newbies	I wasn't completely new to JMX when I picked up this book. Yet, I felt uncomfortable with how fast the author dove into details that would be relevant to someone who's about to write a JMX implementation, not to a regular user of the technology.<br />The book's structure is also a bit inconsistent, in my opinion. For example, the author jumps into describing the history and patterns of distributed management system design in chapter 5 -- after two introductory chapters and two very code-focused chapters.<br />As an advanced manual to itty bitty details of how connectors etc. are implemented, this book is excellent. It's too bad that the back cover doesn't give any indication of this focus. If you're looking for a guide to learn or &quot;just&quot; use JMX, I'd suggest looking elsewhere.	2004-05-13
US	39773668	R1B8TABT59ZUME	0321227220	746288733	Developing Series 60 Applications: A Guide for Symbian OS C++ Developers: A Guide for Symbian OS C++ Developers	Books	5	4	4	N	N	Packed with information	I picked up this book with the purpose of learning about Symbian development on smart phones and to refresh my C++ grammar. Having heard of other Symbian and Series XX books, I had my doubts regarding the quality of the book's content. As a pleasant surprise, the authors have done a good job in creating a well-structured book that leads a newbie into the world of Series 60 programming.<br />First of all, as the authors state in the preface, prior knowledge of C++ is a prerequisite for getting the most out of this book. On the other hand, because the APIs use a lot of constructs specific to Series 60 development (e.g. how to allocate memory, how to do I/O, string/descriptor classes, etc.), even a beginner like me can quickly build up basic skills with the sole help of this book and some old-fashioned hard work.<br />The book starts out with chapters describing the development environment, including basic how-to's for building Series 60 applications with the command-line tools, Microsoft Visual Studio, Metrowerks CodeWarrior, and Borland C++ Builder. Important stuff that could've warranted more attention -- my first gripes with this book.<br />Next, the authors introduce Symbian/Series 60 specific concepts such as the naming conventions, the new memory allocation scheme and exception handling, descriptors, collection classes, Active Objects (asynchronous services), file I/O, and the client/server architecture that forms the basis for all Symbian applications. I was especially delighted about the clarity of this section although I would've preferred seeing more code snippets.<br />After introducing the different architectures to choose from (control-based, dialog-based, view-switching), the vast majority of the book is dedicated to describing how particular APIs of the Series 60 platform are used for creating UIs, networking, and manipulating multimedia content. Key system APIs for accessing the phonebook, calendar, etc. application engines are also explained although not in too much detail considering how essential these services can be for many potential applications.<br />The last chapter also describes some best practices and tools for quality assurance, which is no doubt a useful addition to a book like this (although more attention could've been given to unit testing, which is only mentioned in passing).<br />I am very satisfied with this book. Even though I would've wanted more sample code and more detail in many parts of the book (the authors refer to sample applications distributed along with the Series 60 SDKs, which was a bit annoying), this book is packed with information and the content is well balanced as a whole. I won't be looking around for another Symbian/Series 60 book now that I've got this one.not in too much detail considering how essential these services can be for many potential applications.<br />The last chapter also describes some best practices and tools for quality assurance, which is no doubt a useful addition to a book like this (although more attention could've been given to unit testing, which is only mentioned in passing).<br />I am very satisfied with this book. Even though I would've wanted more sample code and more detail in many parts of the book (the authors refer to sample applications distributed along with the Series 60 SDKs, which was a bit annoying), this book is packed with information and the content is well balanced as a whole. I won't be looking around for another Symbian/Series 60 book now that I've got this one.	2004-05-02
US	39773668	R3IKPCLEDBMLWC	0321118898	741230462	Enterprise Java¿ Security: Building Secure J2EE¿ Applications	Books	4	9	10	N	N	A solid resource	Security is a topic which often seems to be given too little thought. This book gives a hand for the J2EE developer new to security on a Java platform and, especially, on the J2EE platform.<br />The book has been split into five parts. I have gathered my thoughts about each in their separate paragraphs below.<br />Part I discusses about the needs of enterprise application security in general, and how these needs are associated with the J2EE components on a two or three-tier architecture, illustrated with pretty pictures of firewalls etc. The discussion is high-level in nature and acts mainly as a smooth entry into the mind-set of implementing security into your application.<br />Part II takes the focus inside J2EE and shows what kind of handles the J2EE architecture provides for security-related services such as authentication and authorization. Basically, this part of the book explains the programmatic and declarative security for web applications and Enterprise JavaBean components. The writing is very easy to understand but I would've liked to see one or two complete examples of a deployment descriptor instead of just small snippets. To me, seeing a full example would seem like a great way to tie things up in the context.<br />Part III, titled &quot;The Foundations of Java 2 Security&quot;, is something I'm sure I'll come back to when I have to deal with J2SE security. The authors describe the whole shebang from class loaders to security managers and the horde of different types of permissions. This part also includes a chapter about the Java Authentication and Authorization Service (JAAS), which is top-notch amongst those I've seen about the subject. Clear writing combined with precise and illustrative examples. The one topic that could've deserved some concrete usage help were the command-line utilities such as keytool and jarsigner. Also, applet security was only mentioned in passing (the word &quot;applet&quot; can't even be found from the index), which may or may not be significant for the reader.<br />Part IV is dedicated to the art of cryptography. After presenting the basics of cryptographic algorithms, secret and public-key cryptography, the authors continue by discussing how the selected algorithms affect the confidentiality, integrity, authenticity, and non-repudiation properties of data. The chapters also discuss digital signatures, certificates, and key distribution on a high level. The rest of the fourth part shows how the JCA and JCE frameworks are built (i.e. how the pluggable implementation architecture works) and how the relevant APIs are used. The Java Secure Socket Extension (JSSE) for SSL is also presented with a couple of very nice examples including server and client authentication.<br />The fifth and final part talks about &quot;advanced&quot; topics such as web services security and some security considerations for container providers (which seems a bit out-of-place in this book). The subjects are covered only very superficially, which is understandable because the area of web services security admittedly requires a whole book to discuss in detail.<br />I can recommend this book as a solid source of information for J2EE security topics. Accompanied with vendor-specific documentation on deployment and configuration issues, you probably won't need anything else for your security needs. Its biggest weakness, in my opinion, is the lack of more complete sample code which could've at least been published online.may not be significant for the reader.<br />Part IV is dedicated to the art of cryptography. After presenting the basics of cryptographic algorithms, secret and public-key cryptography, the authors continue by discussing how the selected algorithms affect the confidentiality, integrity, authenticity, and non-repudiation properties of data. The chapters also discuss digital signatures, certificates, and key distribution on a high level. The rest of the fourth part shows how the JCA and JCE frameworks are built (i.e. how the pluggable implementation architecture works) and how the relevant APIs are used. The Java Secure Socket Extension (JSSE) for SSL is also presented with a couple of very nice examples including server and client authentication.<br />The fifth and final part talks about &quot;advanced&quot; topics such as web services security and some security considerations for container providers (which seems a bit out-of-place in this book). The subjects are covered only very superficially, which is understandable because the area of web services security admittedly requires a whole book to discuss in detail.<br />I can recommend this book as a solid source of information for J2EE security topics. Accompanied with vendor-specific documentation on deployment and configuration issues, you probably won't need anything else for your security needs. Its biggest weakness, in my opinion, is the lack of more complete sample code which could've at least been published online.	2004-03-09
US	39773668	R10X76VJXKR38F	032118579X	703373450	Enterprise Java Programming with IBM WebSphere (2nd Edition)	Books	4	21	23	N	N	Great first or second book about J2EE	Enterprise Java Programming with IBM WebSphere is a solid overview of J2EE technologies and a great tutorial for using IBM's top-notch IDE for developing J2EE applications.<br />The authors (all 9 of them) go through the whole J2EE architecture from JavaServer Pages to Enterprise JavaBeans to Web Services one element at a time, including &quot;bonuses&quot; here and there, such as testing certain types of J2EE components, the Apache Struts framework, building a presentation layer using XML and XSLT, and mapping objects to data sources.<br />Each chapter includes a brief introduction to the technology, starting from the basics, and proceeds through the development steps in WSAD using lots of nice screenshots (which are mandatory for such a topic) and plenty of example code. Although some of the plain text is simply describing the wizards and dialogs of WSAD, the why's are always explained.<br />My biggest glitch with this book was in fact how the code snippets are rendered. Besides the mandatory typos and occasional weird wordings, the code snippets were often badly formatted and double-spaced which made them unnecessarily difficult to read at times.<br />The book comes with a 3 CD set of software, including trial versions of WebSphere Studio Application Developer, DB2 Personal Edition, WebSphere Application Server, and all of the book's source code. I had some trouble installing the software but that was most probably because I tried to customize the installations quite a bit<br />Over 800 pages of &quot;let's walk this through together&quot; type of tutorial is an admirable goal and the authors have done a good job making it a pleasant experience. The book has a lot of content and a lot of it is some of the finest text I've read about J2EE best practices. As one could expect, the trade-off is that none of the topics/technologies are really covered in complete detail. All things considered, I'd say this is a great first or second book about J2EE if you're going to use WebSphere Studio. I really can't say whether it should be the first or second, but I know it makes a great companion for a more in-depth technical reference.se WebSphere Studio. I really can't say whether it should be the first or second, but I know it makes a great companion for a more in-depth technical reference.	2004-02-22
US	39773668	RY9B3SCSZK2IA	0131424602	623031878	Agile Management for Software Engineering: Applying the Theory of Constraints for Business Results	Books	4	2	4	N	N	Solid message but lacking in examples	Agile Management for Software Engineering is targeted for managers and executives working in the software industry. Its focus is on introducing a technique called Throughput Accounting for measuring and tracking software projects. The author basically shows how traditional cost accounting based methods lead to suboptimal business results and how to correct that situation by applying principles of Lean Production and the Theory of Constraints.<br />The author covers different aspects of management in the software industry one by one--including project management, project planning, production metrics, staffing, resource planning, and product management--explaining how the concepts of Throughput Accounting fit into the picture.<br />The latter half of the book is dedicated to showing how the theory presented can be applied to a number of agile software processes, namely Feature Driven Development, Extreme Programming, and Scrum.<br />The first part of the book is a bit difficult to follow due to slightly repetitive text and never-ending acronyms. I wouldn't count this as a defect, however, as the subject of introducing financial measures inevitably requires a certain amount of equations in between beautiful words. Luckily, the latter part, where these measures are applied, flows much better. What I see missing in this book is more concrete examples beyond the arguably theoretical discussion about real-world application. I also noticed that I was constantly waiting for the author to connect the dots and bind the theories presented in a more or less waterfall context into modern, iterative and incremental processes.<br />All in all, I find Agile Management for Software Engineering to be a book with a solid message: how to better manage a software business. Considering the state of practice in the industry, I'd say this is a must buy for any manager or executive.	2004-02-13
US	39773668	R3I2TRQ54EQD18	032111230X	236071956	Enterprise Patterns and MDA: Building Better Software with Archetype Patterns and UML	Books	4	7	7	N	N	Nice resource on your bookshelf	&quot;Enterprise Patterns and MDA&quot; is not an MDA book. In fact, the most significant focus of the book is actually patterns, specifically business patterns and archetypes.<br />The authors start the journey by introducing concepts and techniques such as archetypes (universal, recurring &quot;things&quot;) and archetype patterns, and Model Driven Architecture. Furthermore, the authors have dedicated one chapter for describing a technique called Literate modeling (combining traditional visual modeling with an accessible business context provided via a narrative text, for example).<br />Up to this point (vicinity of page 116), the authors' writing style has been flawless, in my opinion, and easy to read. From chapter 4 onwards, the authors have provided a huge pattern catalog for archetype patterns. The catalog has been divided into chapters around archetypes such as Party, Order, Customer, and so on. Each archetype pattern introduces a business context, a high-level overview model, and descriptions of the related archetypes, their properties and related activities.<br />I didn't go through even nearly all patterns in the catalog. However, I feel confident that I will dive into the catalog looking for insight when moving to a new problem domain on a new project. Enterprise Patterns and MDA is a nice resource to have on your bookshelf.	2004-02-08
US	39773668	R1VMDFI236AZ93	0321199502	668436224	Software Development for Small Teams: A RUP-Centric Approach (The Addison-Wesley Object Technology Series)	Books	4	8	8	N	N	Good Buy	This is what I call a &quot;nightstand book&quot;. It's very readable and won't overload your gray brain cells while still stimulating you to analyze your conceptions of the real world you're faced with at work. It's a story about a voluntary software project implemented by the authors on their free time and provides a nice overview of how RUP can be applied to a small project, mixed in with certain ingredients from agile processes such as XP.<br />The focus of the book is to document what decisions and obstacles the four-member team encountered during the 6 months they spent on the project. The story is very entertaining and I read the book (almost) cover to cover in just 4 days. I found the tips and guidelines splattered around the book to be mostly common sense, but I did make some notes regarding what to do at work a.s.a.p. That's always a sign that the book you're reading was worth reading.<br />One thing that annoyed me though was the constant praise of the Rational product line knowing that all four authors worked for Rational Software during the project. Also, there were a couple of chapters dedicated for showing little islands of the implementation (code snippets etc.) of which value I frankly didn't see.<br />In summary, I'd classify this book as a good buy. Not great, but good. No big revelations, but a nice bunch of thought-provokers here and there.	2004-01-27
US	39773668	R2FM0ZHB28N6VP	0471202835	351080646	Agile Database Techniques: Effective Strategies for the Agile Software Developer	Books	4	37	37	N	N	Good material, but too fragmented for my taste	Agile Database Techniques is a brilliant book. Already after reading the first chapter I felt like I had been run over by a truck, wondering why I haven't paid more attention to these issues before. Yet, it also has its flaws which I will go into further down.<br />Ambler starts laying out the groundwork for the second part of the book by introducing his Agile Data method, UML and data modeling. He also gives a very useful jump-start tutorial on data and class normalization and discusses the infamous object-relational impedance mismatch. Worth noting is that in each chapter (throughout the book) Ambler makes sure that the reader understands how the subjects relate to the role of an agile DBA and what should he be looking out for. The subjects in part one were introduced so well that I more than once thought, &quot;I've never seen such a well-balanced and informative tutorial.&quot;<br />The second part of the book focuses a bit on how evolutionary software development is the reality and how techniques such as Agile Model-Driven Development and TDD can assist in surviving in this climate. The chapter on database refactoring is intriguing and the more comprehensive list of database refactorings, found in the appendices, is something I'll definitely Xerox and keep with me in my traveling tool bag. The second part also covers database encapsulation strategies and approaches to mapping objects to relational databases which, again, is a delightfully comprehensive tutorial, as well as touching on the topic of performance tuning.<br />The third part is a seemingly random collection of subjects such as finding objects in a relational database, referential integrity, concurrency, security, reports and XML with databases. The text is again of high quality and provides an entertaining walk through the woods, but I feel that these chapters had very little to contribute to the subject of the book. This disconnect is made even more clear when Ambler finishes with a 10-page guide on how to become agile and to introduce agility into the organization.<br />After reading the book, I feel confused. On the other hand, this book is full of little islands of useful insights that I wouldn't think twice recommending for others to read. On the other, the book as a whole is very fragmented and pretty far from what the book's title might suggest. If you pick up the book with an open mind like I did, you'll gain plenty. Otherwise, you'll probably be disappointed to find out that one half of the book probably talks about something you weren't expecting based on the title. After a long struggle, I'm giving this book &quot;only&quot; fours stars despite that it contains some very, very high quality material.n how to become agile and to introduce agility into the organization.<br />After reading the book, I feel confused. On the other hand, this book is full of little islands of useful insights that I wouldn't think twice recommending for others to read. On the other, the book as a whole is very fragmented and pretty far from what the book's title might suggest. If you pick up the book with an open mind like I did, you'll gain plenty. Otherwise, you'll probably be disappointed to find out that one half of the book probably talks about something you weren't expecting based on the title. After a long struggle, I'm giving this book &quot;only&quot; fours stars despite that it contains some very, very high quality material.	2004-01-23
US	39773668	R1XOT08HTREV4H	0321200683	978320311	Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions	Books	5	14	14	N	N	Good Stuff	Enterprise Integration Patterns is part of Addison-Wesley's new Martin Fowler Signature Series, which Fowler's Patterns of Enterprise Application Architecture (PoEAA) is also a part of. I was very satisfied with PoEAA and the same can be said about Enterprise Integration Patterns. It has the potential to become a classic.<br />The authors' writing style is a pleasure to read -- no ambiguous statements, no unnecessary babbling. The book is structured to suit both cover-to-cover reading and a &quot;dive-in&quot; approach for situations where you're looking for a solution to a particular problem. After an introduction to the field of enterprise integration, and a discussion of why the book concentrates on the messaging integration style in particular, the reader is given a hierarchical catalog of patterns revolving around a small set of &quot;core&quot; patterns. The book's coverage is in my opinion very well scoped.<br />I must also praise the look of the book; besides the layout being familiar from prior works and the proven pattern catalog structuring, the authors have used graphics very efficiently. Not only the authors define a vocabulary for integration patterns, but they have also come up with an expressive visual language for illustrating the patterns using simple notations that can be easily drawn without CASE tools.<br />I found only two downsides for this book. First, the title can be slightly misleading as the book focuses on messaging as an integration style and only briefly mentions alternatives such as RPC, file transfer, and shared databases. However, I don't know a single person who doesn't read the back cover before buying a book, so I wouldn't count this as a big issue. Furthermore, the reason for focusing on messaging is thoroughly argued in the book. The second downside is the code examples, which are presented using varying languages and products and seem somehow disconnected from the text.<br />In summary, Enterprise Integration Patterns is a great book. It's worth reading and re-reading if you're working with systems integration projects or writing integration software yourself. Yet another book that makes me think, &quot;I wish I had it back then...&quot;at book. It's worth reading and re-reading if you're working with systems integration projects or writing integration software yourself. Yet another book that makes me think, &quot;I wish I had it back then...&quot;	2003-12-21
US	39773668	R1HVRZND4FTOIP	0131403745	790476262	Definitive XSL-FO	Books	4	5	7	N	N	A safe bet	Definitive XSL-FO is definitely definitive. It's not a huge tome, but does a good job packing a huge specification into less than 500 pages still retaining readability. Rendering documents is something very few developers ever master, I believe. If you're one of those who are disciplined enough to actually learn XSL-FO, this book is a safe bet.<br />After giving a thorough introduction to the history and related specifications, as well as the fundamental concepts of the subject area, mister Holman switches from &quot;prose&quot; to &quot;reference&quot; mode. Most of the book is all about introducing individual subjects in a concise way along with the element descriptions. Lists, tables, floats, footnotes, and so on. I have to give credit to the author for managing to come up with a granularity for these chapters that doesn't feel too overwhelming to grasp.<br />For a technical reference, a good index is something not to haggle about. Obviously the true level of usefulness can only be conceived via practical use, and without an ongoing project actually using XSL-FO, I must resort to a gut feeling, which is a good one. Also, the layout and typesetting is visually very functional which is yet another key requirement for a reference type of book.<br />To me, Definitive XSL-FO strikes as being simply a valuable reference. Far more approachable than the W3C document itself, and manages to teach the subject in layman's terms. A complex subject made simple.	2003-12-16
US	39773668	R1C6USOEJS4OVI	1930110944	189248896	Ejb Cookbook	Books	4	2	2	N	N	An OK reference for recurring tasks	EJB Cookbook is a collection of recipes for the common EJB developer, wondering how a certain task can be accomplished with EJBs.<br />The authors state early on that the focus is not on teaching the EJB technology and basics. Despite of what the authors just said in the preface, the book starts with exactly the kind of basics that encourage quick browsing.<br />The 2nd chapter is a U-turn and points the book to the right direction for most of the journey. The overall level of the recipes is still a bit too simple for my liking -- the toughest questions have been left out. On the plus side, I am happy with the fact that the authors have included chapters on using XDoclet for EJB development and on unit testing EJBs with Cactus. The body of the book is, simply put, a compact reference for accomplishing recurring development tasks.<br />Excluding the chapters on XDoclet and unit testing, the EJB Cookbook is not an exceptional book. It is a reference, albeit a useful one.	2003-12-16
US	39773668	R1G2C3J95UZHM3	1558609342	255683766	Bluetooth Application Programming with the Java APIs (The Morgan Kaufmann Series in Networking)	Books	5	18	19	N	N	Perfect mix of Bluetooth and Java	My prior knowledge about Bluetooth can be described with one word-superficial. Therefore, I hail the authors for making a brave move. The book is not just an introduction to the Bluetooth Java APIs but also an introduction to the whole Bluetooth architecture and terminology. The fact that a lot of space is used to explain the underlying protocols specified in the Bluetooth specification can be both a godsend and a sleeping pill. For me, it was a godsend...<br />The book starts with a brief overview to what Bluetooth is as a technology. Then, JABWT (Java API for Bluetooth Wireless Technology) and how is it positioned in the field of various J2ME technologies is explained to set the architectural vision into the reader's mind. This section of the book is a very pleasant read, giving out just the right amount of information.<br />Next, the authors continue by tackling each main acronym one at a time using a recurring pattern: introduce technology, introduce API, illustrate with snippets of sample code. This section covers approximately half of the length of the book and can be labeled &quot;the meat&quot;. Some portions, such as the chapters about service records, are slightly too detailed for my liking (as someone new to the whole Bluetooth scene), but mostly, the content is straightforward and easy to grasp.<br />After having discussed all the big things in Bluetooth for Java, two sample applications are introduced. The full source code for examples throughout the middle chapters has been included as appendices for the reader's comfort. Also, the Bluetooth APIs have been included as appendices, which I personally would've left out but also don't mind having it there. Finally, the book contains one chapter that seems somewhat displaced, providing guidance for implementing/porting the JABWT on a device.<br />As a closing remark, I feel that this book is a wonderful piece of work and well worth reading for developers new to Bluetooth technology and the related Java APIs. Its approach suited me perfectly.. Its approach suited me perfectly.	2003-11-28
US	39773668	R3FGF2QN3WJMHO	0131405306	434184714	Enterprise J2ME: Developing Mobile Java Applications	Books	5	3	3	N	N	Toolbox for the mobile architect	&quot;Enterprise J2ME&quot; is a toolbox for mobile Java developers involved in developing enterprise-scale applications. A lot of focus is given on available alternatives (both general approaches and product offerings, open source and commercial) for handling the problem of spotty and low-bandwidth connectivity, and on technologies for communicating between the mobile client and enterprise systems. Furthermore, plenty of sample code is available illustrating these techniques in the form of several full-blown sample applications downloadable from the companion website.<br />The book has packed a lot of coverage into less than 500 pages. This inevitably means that many subjects are bypassed rather quickly, referring to sample code for details. Fortunately, Yuan has found a reasonable balance and managed to include sufficient detail in those subjects that interest me the most (networking, on-device databases, XML and web services, and security). I would say that this book is best used as a reference for a mobile application architect wondering what her choices are. On the other hand, the focus on particular products -- proprietary APIs may render some sections of the book outdated once standardization becomes reality in those areas (which Yuan explicitly and repeatedly predicts).<br />All in all, &quot;Enterprise J2ME&quot; is a comprehensive resource for enterprise Java developers having to deal with the new world of smart clients and packs a whole bunch of valuable information and tips for actual implementation.	2003-11-25
US	39773668	R3N76YOG98KQTU	0131111558	164242212	Agile and Iterative Development: A Manager's Guide	Books	5	17	17	N	N	Finally. Evidence.	I was expecting a lot from this book, having read and enjoyed Larman's prior work. On the other hand, I expected it to be somewhat simplistic as the title implied the target group being managers, which I am not. One of these expectations was correct.<br />Larman's latest presents a wonderful introduction into what iterative and evolutionary development is about. The word &quot;agile&quot; in the title seems a bit displaced as the text mostly discusses about &quot;iterative&quot; and &quot;evolutionary&quot; rather than &quot;agile&quot;, but that really is no big deal because what's inside the covers is pure gold for any one.<br />After a thorough introduction to the theory, Larman drops a bomb on the table; the chapter titled &quot;Evidence&quot; is worth the salt alone. Larman has collected an impressive list of references to early, large projects employing iterative and evolutionary development. He also reminds us how the creators of predictive planning based methods have themselves preferred an iterative approach from day one.<br />The book also packs nice descriptions of four iterative and evolutionary processes, namely XP, Scrum, UP, and Evo. The descriptions are clear but, to some degree, repetitive.<br />Although the chapter on evidence is definitely the gold chip, the last 70 pages proved to be a very pleasant surprise. Larman presents a list of practical tips and tricks for adopting and running iterative processes, as well as answers the toughest questions in a Q/A section.<br />Highly recommended. Have your boss read it as well.	2003-10-29
US	39773668	R21IMBEHA8DJU9	0321186125	854110354	Balancing Agility and Discipline: A Guide for the Perplexed	Books	4	30	30	N	N	Reality Check. Nothing new but worth of saying out loud.	Balancing Agility and Discipline focuses on saying out loud what people in the trenches have been thinking all along. There's still no silver bullet -- we need a well balanced tool bag instead of a multipurpose hi-tech hammer.<br />The authors start the journey by describing the fundamental differences between traditional, plan-driven approaches and the latest agile methods. This is a great introduction and paves the way for the discussion to follow. However, occasionally the text uses the term &quot;agile process&quot; too loosely when really talking about the extreme characteristics of XP.<br />Next, Boehm and Turner set out to describe a typical day in the life of two teams; one agile and the other not so. However, these stories didn't quite reach the level of detail I was expecting.<br />The authors continue by presenting two case studies of projects where a plan-driven method was streamlined using agile techniques and an agile method was scaled up with some plan-driven elements. The subject is of great interest and the authors' approach is definitely valid.<br />A decision tool for customizing an appropriate mix of agile and plan-driven ingredients is explained. The tool itself is largely based on Boehm's earlier work and focuses on risk management. The authors illustrate the mechanics of the tool by presenting a family of applications of varying levels of stability and complexity. The rationale behind the thought process for composing the optimal method is valid and built on well-known truths.<br />The last third of the book is populated by numerous appendices. The first appendix introduces some popular agile and plan-driven processes and maturity models in the form of two-page summaries and comparison tables. The summaries serve as useful reminders but nothing more. The rest of the appendices, however, provide a short but valuable collection of tools for balancing the software development process and some empirical data on the costs and benefits of agility.<br />In summary, I would classify Balancing Agility and Discipline as a suggested reading for both agilists and sceptics. It's not necessarily a classic but it certainly serves as a useful reminder of things the industry has learnt the hard way and shouldn't be taken too lightly. Agile methods promote retrospectives. Boehm and Turner suggest extending that retrospective a bit farther.r />In summary, I would classify Balancing Agility and Discipline as a suggested reading for both agilists and sceptics. It's not necessarily a classic but it certainly serves as a useful reminder of things the industry has learnt the hard way and shouldn't be taken too lightly. Agile methods promote retrospectives. Boehm and Turner suggest extending that retrospective a bit farther.	2003-10-14
US	39773668	R1A9TDZS85C8B7	0201719606	243581326	Beyond Chaos: The Expert Edge in Managing Software Development	Books	5	0	0	N	N	Great thought-invokers	This book, consisting of short essays, had been sitting on my bookshelf for a long time. Finally, I picked it up when my summer vacation started and I actually felt sorry I hadn't done it earlier. Constantine and others present their thoughts about common problems in software development organizations and some methods to tackle these issues with. I keep nodding and sighing while reading the problem descriptions and keep on nodding as the authors proceed to how they have successfully solved the problems before. Good stuff!	2003-07-04
US	39773668	R20LCLERHYTN2G	0596003870	831499118	Java Extreme Programming Cookbook	Books	5	2	3	N	N	A Treasure Box	The recipes presented by Burke &amp; Coyner are to the point. After reading through the first 8 chapters, I haven't met a recipe I couldn't immediately see use for in my recent projects.	2003-07-03
US	39773668	R3QFEBDWB1L7OW	0672321815	447988787	Building Web Services with Java: Making Sense of XML, SOAP, WSDL and UDDI	Books	5	3	4	N	N	Great book to start the journey with	I recently started my first Web Services project and had some ramp-up to do with my knowledge on the subject -- I consider myself being pretty well into J2EE, but the SOAP/WSDL/UDDI triad was something unknown. I picked three books, O'Reilly's &quot;Java Web Services&quot;, Wrox' &quot;Professional XML Web Services&quot;, and this book.<br />&quot;Building Web Services with Java&quot; beats all the others as an introduction to the mindset of Web Services. The straight-forward but not overwhelmingly hardcore approach suits me and my background. The authors present different angles, alternatives and give meaning to what they are describing. Especially the chapter describing UDDI was the best introduction I've bumped into.<br />Even though I gave it 5 stars, I won't say you'll suffice with this book and only this book. This is an introduction with a great coverage, not a programming reference; If you're looking for one, pick another bible to go with this one.	2003-02-03
