US	51945867	RDGDWGSSQ0PG7	0380817160	200542713	A Winter Haunting	Books	5	5	5	N	N	Still gives me goosebumps	I'm not a huge fan of horror, but I am a fan of Dan Simmons.  _Hyperion_ is one of my favorite sci-fi novels; _Hardcase_ and _Hard Freeze_ are wonderful, by-the-book \\"hard\\"-boiled detective novels.    I just happened to be in an airport needing a book to read, saw this, and thought it must be the same Dan Simmons, author of all genres.  I read it in one sitting, which is perhaps not saying much because the book's fairly short, at least for Simmons, and the flight was international.  As much as I like movies, I don't even think I glanced up to see what was playing.    When I read this book, I didn't realize it was the second part of a story of which _Summer of Night_ was the first.  It stands on its own.  In fact, I liked it better than the first book, which I went out and found as soon as I got home.  That may have been because I formed strong images of the characters as children from this book, whereas the more explicit rendering of them didn't quite match my expectations.    This is first and foremost a psychological horror story, not a gory monster story.  It's told from the perspective of a minor academic and pulp Western author trying to resolve his confusing past.  (Note to the author: If you write a Western, I'll read that, too.) In fact, it's even more psychological than Simmons's own _Carrion Comfort_, which I also quite enjoyed.  This book is scary because you wind up deep inside the mind of the main character, with all of his pre-occupations and uncertainty about what's real.      Simmons's novels are all about the characterization, much like many independent, off-beat, or \\"foreign\\" movies.  If you're looking for Hollywood-style special effects and big bad monsters, turn to the master of that genre, Steven King (not to knock King's characterizations, which are also superlative).  Some of the scariest bits are run-ins with ordinary characters from his childhood.    In the end, I can't give this a better review than to recapitulate my title: it still givesme goosebumps thinking about it.	2005-05-22
US	51945867	R1Z4CSCVJK1AW1	0139223037	438185561	An Introduction to Mathematical Statistics and Its Applications (3rd Edition)	Books	5	48	49	N	N	Excellent intro to the mathematics of traditional statistics	The first half of the book begins with basic discrete and continuous probability theory.  It continues with thorough overviews of the basic distributions (normal, Poisson, binomial, multinomial, chi-squared and student-T).  The focus is on basic probability and variance analysis, though it briefly covers higher-order moments.      The second half of this book is devoted to hypothesis testing and regression.  There is an excellent explanation of the mathematical presuppositions of the various classical experimental methodologies ranging from chi-square to t-tests to  generalized likelihood ratio testing.  It contains a very nicely organized chapter on general regression analysis, concentrating on the common least squares case under the usual transforms (e.g. exponential, logistic, etc.).    Like many books in mathematics, this introduction starts from first principles in the topic it's introducing, but assumes some \\"mathematical sophistication\\".  In this case, it assumes you're comfortable with basic definition-example-theorem style and that you understand the basics of multivariate differential equations.  I was a math and computer science undergrad who did much better in abstract algebra and set theory than analysis and diff eqs, but I found this book extremely readable.  I couldn't have derived the proofs, but I could follow them because they were written as clearly as anything I've ever read in mathematics.  I found the explanation of the central limit theorem and the numerous normal approximation theorems for sampling to be exceptionally clear.    The examples were both illuminating and entertaining.  One of the beauties of statistics is that the examples are almost always interesting real-world problems, in this case ranging from biological (e.g. significance testing for cancer clusters) to man-made (e.g. Poisson models of football scoring) to physical (e.g. loaded dice).  The examples tied directly to the techniques being explored.  The exercises were more exercise-like in this book than in some math books where they're a dumping ground for material that wouldn't fit into the body of the text.  This book has clearly been tuned over many years of classroom use with real students.    I read this book because I found I couldn't understand the applied statistics I was reading in machine learning and Bayesian data analysis research papers in my field (computational linguistics).  In paticular, I wanted the background to be able to tackle books such as Hastie et al.'s \\"Elements of Statistical Learning\\" or Gelman et al.'s \\"Bayesian Data Analysis\\", both of which pretty much assume a good grounding in the topics covered in this book by Larsen and make excellent follow-on reading.	2005-03-18
US	51945867	R5OKMUJWFRU9H	1590130324	917472034	A Game of Bones (The Privateersman Mysteries)	Books	5	2	2	N	Y	Intrigue and action, but little mystery and no brother	When privateersman Captain Harry Ludlow and his socialite brother James Ludlow return to Britain to find the fleets at Spithead and the Nore in mutiny, Harry assumes James will want to be in the middle of the action.  James puts Harry in his place by informing him that Portsmouth is hardly the center of things and heads for London.  I always found James a distraction, and probably enjoyed his time in London even more than he did. <br /> <br />Unlike some of the other books in this series, this one's less of a mystery and more of a spy novel.  It further develops the impetuous and manipulative character of Harry Ludlow, and sees him negotiating with everyone: local smugglers, able seaman, through half the admiralty and even William Pitt himself.  This installment also has more action, including a combined land/sea battle in a river with galleys and ships.  <br /> <br />Like most of the other sea heroes (Alan Lewrie, Horatio Hornblower and Jack Aubrey, in particular), Harry's luck on land is not what it is at sea.  Although in this book, it could be argued Harry makes his own \\"luck\\" at sea and on land.   <br /> <br />Read the first five of these books first.  They tell one long story in episodes, much like other nautical fiction series. After Aubrey, Kydd and Hornblower, Harry Ludlow's my favorite sea officer.  The novels move along with crisp dialogue and excellent nautical action.  The fourth Thomas Paine Kydd book, \\"Mutiny\\", by Julian Stockwin, covers the same events from a rather different perspective, and I think gives a better perspective on the mutiny itself.	2005-01-17
US	51945867	R2E8WKW72V942A	0974514004	372992703	Pragmatic Version Control Using CVS	Books	5	33	33	N	N	The idioms you need; not just doc you find elsewhere	Hunt and Thomas, &quot;The Pragmatic Programmers&quot;, provide a delightfully brief user's guide for the Concurrent Version System (CVS).  They focus on idiomatic usage patterns, leading the way from installing CVS and creating a first project to branching for releases and developer sandboxes.  They provide practical advice on when to branch, how to comment, what constitutes a project, and even what to check into CVS in the first place.  I've been using CVS for years, and learned a lot here; especially about the various kinds of diff reporting and configuration options.<br />Almost everyone is confused by CVS first.  Almost everyone who gets over the learning curve swears by it (or some variant). The main adoption hurdle is the unix-style documentation that provides telegraphic explanations of commands in insider jargon.  Hunt and Thomas explain what it all means, and more importantly, how to use it, and why to use it.  Complex relationships like merge conflicts are illustrated with clear diagrams and sensible easy-to-follow examples.  Even though I see myself using this book quite a bit, I could've used it even more when I was getting started, before CVS became second nature.	2004-03-17
US	51945867	R1QNKWYTVC64B9	0201310090	865512589	Concurrent Programming in JavaÂ™: Design Principles and Pattern, 2nd Edition	Books	5	28	30	N	Y	Everything you need to know about concurrency in Java	Concurrent programming is fraught with peril.  It's much more complex than sequential programming in every meaningful way from specification to unit testing.  But if you want to do it right, meaning balancing liveness with safety for efficient and robust multi-threaded applications, you need Doug Lea's &quot;Concurrent Programming in Java&quot;.  Especially if you need to design an extensible framework with concurrency; well-known examples of such frameworks incluce Swing, most of java.net, and just about every aspect of J2EE.<br />Lea provides an intense introduction at the level of an advanced undergraduate course.  It's fairly academic in tone, because he takes the time to provide thorough definitions and detailed examples.  As a former academic who now designs and programs for a living, this is just what I was looking for. But don't buy this book expecting a cookbook of code to cut and paste.  It's much more about providing you the fundamental tools to design your own concurrent classes, applications and frameworks.<br />Lea presupposes the user is fluent in Java, knows a bit about concurrent programming patterns involving mutexes, semaphores, etc, and is familiar with the basic object-oriented design patterns.  If you're not up to speed in these areas, the path I followed was reading the following:<br />* Lewis's &quot;Threads Primer&quot; (warning: it's C/unix-based),<br />* Gosling and Joy's &quot;Java Programming Language&quot;,<br />* Bloch's &quot;Effective Java&quot;, and<br />* Gamma et al.'s &quot;Design Patterns&quot;.<br />Even if you don't buy this book, consider using Lea's concurrent.util package available from his web site.  It provides solid implementations of everything from simple mutexes to concurrent read-single write wrappers for Java collections (Sun's own wrappers simply synchronize all methods, which suffers reduced liveness compared to CRSW designs).  And it's both elegantly designed and thoroughly javadoc-ed.<br />The first edition was great, and I've just finished reading the second edition cover to cover and it has taken my understanding of concurrent design to a new level.  Just be warned that this book's not for novices or hobbyists; it's for programmers who need to design the guts of concurrent systems the &quot;right&quot; way and then implement them in Java, especially for extensible frameworks.was great, and I've just finished reading the second edition cover to cover and it has taken my understanding of concurrent design to a new level.  Just be warned that this book's not for novices or hobbyists; it's for programmers who need to design the guts of concurrent systems the &quot;right&quot; way and then implement them in Java, especially for extensible frameworks.	2003-04-11
US	51945867	R1533Q2M0AZCW3	1579651267	635645220	The French Laundry Cookbook (The Thomas Keller Library)	Books	5	9	10	N	N	Precision modern food with deep foundations	Thomas Keller brings to food what the modernists such as van der Rohe and Le Corbusier brought to architecture: a disciplined geometry that distills classical elements to their pureset forms. Eggplant is reduced to its essence in a quenelle of Keller's \\"caviar\\".  The accompanying potato \\"blini\\" are as light as air yet provide an intense potato flavor.  Gazpacho is refined to a clear perfectly balanced nectar, peas to a verdant spring broth.  Keller, like the modernists, is focused on bending ingredients to his will rather than presenting them in their natural form.<br />Whether you prefer Keller's platonic food or more rustic bistro fare, his cookbook is worth studying for the clinic it provides on basic French technique.  As with most brilliant artists with a clearly articulated vision, Keller first mastered the basics.  Tom Collichio, who was Keller's sous chef at Rakel in New York, presents a more down-to-earth version of much of the same technique in his \\"Think Like a Chef\\". I now consult Keller and Collichio on everything from vegetable stock to bordelaise sauce.<br />Surprisingly, there are many recipes, such as the gazpacho or bordelaise sauce, which are not at all difficult to make, and many others that can be easily simplified. Others start with ingredients like whole lobes of foie gras.<br />Deborah Jones's photographs are wonderful, ranging from black and white photojournalism in the kitchen through architectural renderings of Keller's food to still lifes of the restaurant and grounds awash in warm California light.  The combination of huge format, high quality paper and fine printing make this book ideal for browsing, but difficult to fit in my tiny kitchen.<br />A worthwhile companion to this cookbook is the third of Michael Ruhlman's book \\"The Soul of a Chef\\" devoted to Ruhlman's experience of being introduced to Keller and the French Laundry prior to co-authoring the French Laundry Cookbook.	2003-03-15
US	51945867	R27YKM1J90VQYD	0596000480	910766772	JavaScript: The Definitive Guide	Books	5	4	5	N	N	A thorough introduction for experienced programmers	Usually putting a subtitle such as &quot;The Definitive Guide&quot; on a book is a setup for a joke, but Flanagan's &quot;JavaScript&quot; neatly avoids this trap by being truly definitive.  JavaScript should be familiar as the implementation of ECMAScript found on most web browsers.  I actually picked the book up when I needed to embed ECMAScript into a speech recognition grammar formalism for work, a rather daunting task for someone who'd never read a line of JavaScript. JavaScript is designed for embedding; unlike Perl, Python or Tcl, it's completely isolated from the operating system.<br />The ECMAScript specification is dense, but more readable than the specs from the W3C. &quot;ECMA&quot; used to be an acronym for the European Computer Manufacturers Association; now it's just a name for yet another standards body.  Flanagan's book is the perfect bridge for a programmer who knows nothing to the spec.  <br />Flanagan assumes a reader who is an experienced programmer; this is not JavaScript for novices.  Basically, this is the Kernighan and Ritchie of JavaScript.  As such, the book is classically organized, taking the reader from syntax and control through the object model.   Most usefully, Flanagan clearly describes how the JavaScript object model works, which is no mean feat given the double inheritance chain along with the overloading of members, methods and constructors.   <br />For those who prefer source code, Mozilla distributes their reference JavaScript implementations: the Rhino implementation in Java, and the SpiderMonkey implementation in C.  The code is quite well organized and the Mozilla message boards are closely monitored by the coders. You'll also find the latest information on known bugs through their Bugzilla trackers.<br />Note:  Because I was using JavaScript for an embedded application, I thoroughly studied the first half of the book, but never even cracked the DOM sections in the back, which describe JavaScript's integration with web browsers.	2003-02-06
US	51945867	RSEG7578ZB04N	0521585198	615208293	Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology	Books	5	40	40	N	Y	Definitive String Algorithms Text	If you like definition-theorem-proof-example and exercise books, Gusfield's book is the definitive text for string algorithms.  The algorithms are abstracted from their biological applications, and the book would make sense without reading a single page of the biological motivations. Gusfield aims his book at readers who are fluent in basic algorithms and data structures (at the level of Cormen, Leisersohn and Rivest's excellent text).  The exercises are wonderfully illustrative, being neither trivial nor impossible.<br />All of the major exact string algorithms are covered, including Knuth-Morris-Pratt, Boyer-Moore, Aho-Corasick and the focus of the book, suffix trees for the much harder probem of finding all repeated substrings of a given string in linear time. In addition to exact string matching, there are extensive discussions of inexact matching.  Even the discussions of widely known topics like dynamic programming for edit distance are insightful; for instance, we find how to easily cut space requirements from quadratic to linear.  There is also a short chapter on semi-numerical matching methods, which are also of use in information retrieval applications. Inexact matching is extended to the threshold all-against-all problem, which finds all substrings of a string that match up to a given edit distance threshold.  The theoretical development concludes with the much more difficult problem of aligning multiple sequences with ultrametric trees, with applications to phylogenetic alignment for evolutionary trees (an approach that has also been applied to the evolution of natural languages).<br />Note that there is no discussion of statistical string matching.  For that, Durbin, Eddy, Krogh and Mitchison's &quot;Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acides&quot; is a good choice, or for those more interested in language than biology, Manning and Schuetze's &quot;Statistical Natural Language Processing&quot;.  There is also no information on more structured string matching models such as context-free grammars, as are commonly used to analyze RNA folding or natural language syntax.  Luckily, Durbin et al. and Manning and Schuetze also provide excellent coverage of these higher-order models in their books.<br />This book is not about efficient implementation.  If you need to build these algorithms, you'll also need to know how to write efficient code and tune it for your needs.  This is an algorithms book, pure and simple.<br />As a computer scientist, I found the discussions of computational biology to be more enlightening than in other textbooks on similar topics such as Durbin et al., because Gusfield does not assume the reader has any background in cellular biology. Instead, he provides his own clear and gentle introductions illustrated with algorithms, applications, open problems and extensive references.  Like most Cambridge University Press books, this one is beautifully typeset and edited.	2003-01-04
US	51945867	R3PVWQLB9MFW02	0755103270	36209300	Trent's Last Case (Philip Trent)	Books	5	7	9	N	N	Of Manners and Manors	Trent makes a lasting impression in this, his first, last and only appearance.  Appearing in 1913, \\"Trent's Last Case\\" is among the first classic English country murder mysteries. It's all butlers, country houses, motor-cars and dressing for dinner, sprinkled with wry observations on the manners of the wealthy, country folk, inn keepers, servants upstairs and downstairs, police inspectors, husbands, widows, American secretaries and French maids. <br />We begin with our man Trent arriving in town to investigate a murder. The plot is brisk, without enough clues to make it a whodunit. Trent's an established painter with a national reputation as an amateur detective and newspaper correspondent. An amateur sleuth would be incomplete without a nemesis, so we have a long-time friendly rival, Inspector Murth. The presumption of a long history and the effortlessness of the characters' interactions was drawn beautifully. All is revealed through what the characters say and do, not by long narrative descriptions. I rather wish this was only the beginning for Trent and not the end.	2002-10-06
US	51945867	R1045MHXFCYTJ4	0894807544	279876166	China Moon Cookbook	Books	5	41	43	N	N	My favorite cookbook	The China Moon Cookbook introduced me to high end cooking ten years ago and I've never looked back.  Barbara Tropp manages to draw in complete novices with detailed step-by-step instructions of what to do and what not to do, dosed out with a good humored, you-can-do-it-too manner. This cookbook would be a worthwhile addition to anyone's set just for its instructions on how to buy and prepare fish or poultry, or for its instructions on making double chicken stock.  <br />Barbara Tropp's recipes are Chinese influenced in the way of ingredients, so make sure you have a supply of good sesame oil, rice vinegar, soy sauce, sichuan peppers, red chilis and ginger. In case you don't, the sidebars provide an introductory course in how to find, buy and store such ingredients, with brand recommendations. The main emphasis in each case is the notion of extracting a pure flavor in each dish.  Rather than producing the kind of heavy, integrated sauces more typically associated with the Chinese kitchen, China Moon cranked out light, spicy, and brightly acidic dishes like my all time favorites, clear-steamed salmon with corriander pesto and gold coin salmon cakes.  <br />The real strength of this book lies not in its excellent recipes, which can be adapted in numerous ways once you understand their principles.  It's in the preparation of a pantry full of such goodies as ma-la oil (&quot;ma&quot; for the numbing spiciness of sichuan peppercorns, and &quot;la&quot; for the traditional burn of red pepper), and pickled ginger that takes 10 minutes to make and leaves you forever wondering why you hadn't done this sooner.  There are recipes for stocks, sweet and sour dipping sauces, mustards, and other staples of the Chinese kitchen, that once created, allow the preparation of amazingly flavorful dishes in short order. Each dish has excellent instructions on what can be done in advance and held, and what needs to be done last minute. <br />Even if you just make the pickled ginger and hotchili oils on pages 8 and 10, you may share Barbara Tropp's sentiment, &quot;The day I made my own hot chili oil, I swear I grew a foot as a cook!&quot;.  Along with these recipes, you get the first two of her passionate sidebars, the first on selecting and peeling ginger, the last step of which she was shamed into by her Chinese-Vietnamese prep staff and grandmotherly Chinese-American pastry chef.   As a historian by original training, her text is salted with quotes backing up her obsessions about 1/16 vs. 1/4 inch dice for stir-frying timing, and quotes &quot;a character in an official history of first-century China: 'When my mother cuts the meat, the chunks are invariably in perfect squares, and when she chops the scallions, they are always in nuggests exactly 1 inch long.' What can I say? History centuries-old supports me in my obsessions!&quot;	2002-08-17
US	51945867	R1C453DWXTVIE	0201694972	845541393	Designing the User Interface	Books	2	52	60	N	Y	A Verbose Syllabus	This is more of a syllabus with references than an actual textbook.  It's even a sensible syllabus; if you want an outline of the important topics in contemporary and historical computer user interfaces, Shneiderman's book will tell you what you need to know. But the utility of this book is unclear; it's not intended to teach the reader how to design interfaces, nor does it teach experimental design and evaluation. <br />At 600+ pages, it's both terse and verbose.  Verbose, because of the \\"let me tell you what I'm going to tell you, tell you, tell you what I've told you\\" format favored in this kind of overview.  Terse because the \\"tell you\\" part is a kind of white-washed summary; as soon as a topic is brought up, several references are trotted out, summarized in one or two lines, and then dismissed.  I wanted more depth, more case studies, and a higher-level vantage point. <br />Despite a short tour of command lines, including natural language text commands, and a 10 page summary of speech recognition and synthesis-based interfaces, \\"Designing the User Interface\\" is almost exclusively about contemporary computer graphical user interface design. Better books on GUI design include Johnson's \\"GUI Bloopers\\" and Raskin's \\"The Humane Interface\\".	2002-07-28
US	51945867	RZD3EV88ZI3NB	0201657880	526837068	Programming Pearls (2nd Edition)	Books	5	29	36	N	Y	The how-to for profile-based tuning	Bentley's classic, &quot;Programming Pearls&quot;, makes an important point, namely that you won't get good performance without careful coding and profile-based tuning. And it's made clearly, concisely and with compelling examples. The choice of language (C), and the choice of problems (those from computer science 101 we all think we know cold) betrays the sophistication of Bentley's analyses.  <br />Suppose, for the sake of argument, that you have a binary search that's holding up your loop.  Or your Huffman coding just isn't snappy enough?  &quot;How is that possible?&quot;, you might say, fresh out of computer-science 201, &quot;Didn't we just prove these algorithms are optimal?&quot;  Well yes, asymptotically up to an arbitrary constant multiplier.  But this is the real world, and your code needs to go faster.  If this sounds like your predicament, pull up a chair and read &quot;Programming Pearls&quot;; if it's not, you might wonder what all the fuss is about.<br />Next, fire up your favorite hardware (Sparc or x86 or PowerPC), favorite language (Perl, Java, or even C), favorite release of that language, along with your favorite interpreter or compiler (Hotspot or standard? GCC or Visual C++).  And you'll need a profiler; might as well treat yourself to a good one if you're serious. Then fire up your code with a representative range realistic test data and observe what happens.  Function by function, byte by byte. Then try to be as clever as Bentley in (a) figuring out why, (b) trying a range of alternatives, and (c) making it all go faster with minor tuning.  Typically, you'll find a single bottleneck taking an order of magnitude more time than everything else, and work on that.  Repeat until fast enough.<br />As well as this simple, yet surprisingly effective and realistic methodology, Bentley provides a range of concrete tips on making things go faster, from tweaking data structures to unfolding loops (especially precomputing low-order cases) to using accumulators and caching, all with an eye to underlying memory, communication and CPU resources.<br />Real code that has to run fast, like the code that we write at my current company for signal processing, speech recognition and speech synthesis, typically looks like the end-product of Bentley's refactorings.  And it gets that way following exactly the path he lays out: analyze the problem, choose the right algorithm (or the right few to evaluate), and then tune it up using profiling.<br />&quot;Programming Pearls&quot; is the beginning of the road.  You will need to look elsewhere for topics such as compression for memory saving, numerical algorithms, effective concurrency and memory sharing, efficient buffered I/O, garbage collection, and the wide range of dynamic programming and heuristic techniques.	2002-07-27
US	51945867	R35K6EC1223WGI	0671019783	175785152	New Frontier (Star Trek New Frontier)	Books	5	9	9	N	N	Note-Perfect Pulp for new Star Trek crew	If you like Star Trek, and you like Peter David, you can't go wrong with the first four books of &quot;The New Frontier&quot;, his introduction to Captain Mackenzie Calhoun and the rest of the crew of the Excalibur. I was hooked on David's writing through his classic &quot;Grey Hulk&quot; series of Marvel Comics. I find his prose and wit stands out from the crowd (though they did bring in some good writers for the original Trek book series). <br />These first books in the ongoing &quot;New Frontier&quot; series are classically organized, developing the characters in their individual threads and then bringing them together on the Excalibur for a unifying adventure in their new territory. There's very nice balance between characters and a breezy pace. The Star Trek comics, er books, have a little more leeway with asides that you don't get in the TV shows or movies. With Peter David writing, the often serious tone is punctuated with comic relief. The time and place is set around the time of the Next Generation, with Jean-Luc Picard and even Spock putting in an appearance. <br />Just to be clear -- these books read like comic books, or like a Star Trek episode. It's pure pulp, but pulp of the highest order. One word of warning: these &quot;books&quot; are barely novella length; it takes about an hour to read each, and that's if you read the funny parts twice. All in all, just as Star Trek should be.	2002-07-11
US	51945867	RXSBAX2KP8BZC	0201745755	149603191	Atlas of Cyberspace	Books	4	7	8	N	Y	Some great photos, drawings and maps	In &quot;The Atlas of Cyberspace&quot;, I was anticipating a book patterned on Tufte's &quot;Visual Display of Quantitative Information&quot;. Indeed, much of the graphical content of Dodge and Kitchin's book is beautiful, thought-provoking and informative. Unfortunately, the printing is unforgivably bad; the images deserve high quality renderings. Several of the most intriguing hand-drawn and computer-generated images are simply illegible; all of them have lost their textural presence and contrast.  <br />The text, on the other hand, ranges from workmanlike commentary on the graphics to watered down post modern cultural analysis. Light editing could remove at least half of the illustrations, providing a tighter focus on the remainder.  In many cases, multiple instances of the same type of diagram are presented.  Although this may be a start toward serious design analyses, it's distracting in a coffee table book such as this one.<br />The organization is by content rather than by visualization type. The first quarter of the book traces the history of the development of the web, and attempts to map traffic patterns and growth. The next section concentrates on the informational organization of the web, as opposed to the physical or topological. The third quarter maps &quot;community&quot;, including more literal instances such as MUDs, as well as purely virtual ones such as discussion groups.  The weakest section of the book is the last, which traces &quot;cyberpunk&quot;, represented here with quotes from Gibson and Stephenson.  This final section includes gratuituous screen shots from &quot;The Matrix&quot; and even more gratuitous &quot;analysis&quot;.<br />Despite this book's many shortcomings, there's no alternative, and the fraction of the images that are truly inspiring make &quot;Atlas of Cyberspace&quot; not only worthwhile, but almost necessary.	2002-07-04
US	51945867	R3D40DT0LG7ANW	0596000405	873973445	Java Servlet Programming: Help for Server Side Java Developers (Java Series)	Books	5	17	17	N	Y	Definitive Servlet Tutorial	We have a half dozen books on servlets lying around the office, and I've also read the online tutorial from Sun.  Nothing compares in breadth, depth, or clarity to Hunter and Crawford's \\"Java Servlet Programming\\".  <br />Luckily, the second edition does not tinker with the tried and true formula of the first: brief overview, hello world servlet, a thorough overview of the HTTP protocol itself and the architecture of servlets, a discussion of thread and resource issues, and a standalone chapter on session management. Despite the 700+ pages of this book (are authors paid by the pound these days?), this core introduction remains only 200 pages and change. Each topic is presented with definitions and clear, yet realistic code examples. The authors not only provide advice on how to use servlets effectively, but also provide numerous suggestions on how to avoid common pitfalls and misconceptions.<br />The remaining 500 pages cover topics such as security, internationalization, database connectivity and communicating with applets.  Although these are not really servlet-specific issues, they are almost always present in some combination on web sites, and the authors indicate the peculiar way in which the standard Java approaches to these problems interact with the servlet architecture. Each is presented in its own clear chapter with several examples.  The beauty of these chapters is that like good code, they're modular and can be read in any order.<br />In what I think is a sensible organization, Java Server Pages (JSPs) and \\"application frameworks\\" are left for last.  Both are well defined and illustrated.  There's also 50 pages of reference, but frankly, I prefer the javadoc.	2002-07-04
US	51945867	RS6JN6OU79WMO	0596000154	94815440	Java Performance Tuning	Books	5	3	4	N	Y	Best Tuning Book I've Seen	Not only does Jack Shirazi provide an array of useful benchmarks in &quot;Java Performance Tuning&quot;, both at the micro and macro level, he provides excellent case studies on how to set up and run benchmarks. Results are given for JDK versions 1.1.6, 1.2, and 1.3 with and without HotSpot. Although it would be nice to get a more up to date test including 1.4 and other run times, the utility of this book goes far beyond what it reports about the compilers and run times available in late 2000.<br />The high level advice on a tuning methodology (profile and target, of course) is sound, as is the emphasis on perceived performance.  Topics everyone should be aware of from caching to threading to streaming are dealt with up front.  This might make this book rather hard to follow for readers unfamiliar with these concepts.  Further advice on how to measure (try to get close to reality) and to not tune what you don't need to tune are also sound pieces of advice that are often overlooked. <br />Admirable attention to garbage collection and command-line tuning of the run-times and compilers increased my confidence in the results, and should serve as a model to other benchmarkers. Details considered include everything from cache size and disk framentation to network bottlenecks.<br />There are too many useful sections to list here.  The writing is crisp and clear, the pace fast, and the examples well chosen. Shirazi provides depth on topics ranging from low level constructs such as switch statements, method calls, or upcasts, through intermediate constructs such as threading and object creation and reuse, to higher-level constructs such as the String and Collection classes. In chapter 8, the section &quot;From Raw I/O to Smokin' I/O&quot; alone justifies having this book on your shelf. <br />This book is about tuning.  It is not a book about algorithms or algorithm analysis.  You'll need to know that, too.  An elegant bridge between tuning and algorithms can be found in JonBentley's &quot;Programming Pearls&quot;.  <br />All told, &quot;Java Performance Tuning&quot; is the best book on tuning I've ever read.  Don't even bother with Wilson et al.'s &quot;Java Platform Performance&quot;.	2002-05-10
US	51945867	R229C8NMAMA2YD	0130950696	594471139	Speech and Language Processing: An Introduction to Natural Language Processing, Computational Linguistics and Speech Recognition	Books	5	7	10	N	N	Readable, Rigorous, Thorough and Scholarly	I recently had reason to return to Jurafsky and Martin's* &quot;Speech and Language Processing&quot; to do a little brush-up on pronunciation models.  Of course, I got diverted; this time by an insightful review of the &quot;internal structure&quot; of words. I came away reminded of why this is perhaps the single best textbook I've ever read.  &quot;Speech and Language Processing&quot; is always the first source I check, and it is quite often the last.<br />First of all, Jurafsky and Martin cover absolutely everything you need to know in order to understand the state of the art systems and to read primary sources such as journals or conference proceedings.  You could teach an advanced undergraduate or graduate course by simply tackling it a chapter at a time and discussing everyone's solutions to the exercises. The book is organized by interleaving theoretical topics, such as regular expressions and automata, with practical applications, such as pronunciation modeling or pattern matching.  This allows for a fast start on interesting and realistic applications while providing a solid foundation for understanding the field.<br />Second, the book is not only readable, it's enjoyable.  The examples are clever, not cute or forced.  The topics flow from one to the next in an almost seamless narrative.<br />Third, the book is scholarly to the point of lacing pages with references to original sources.  Somehow, Jurafsky and Martin have managed to track down fascinating threads such as the development of the currently accepted statistical models for speech recognition.<br />Fourth, and most amazingly, Jurafsky and Martin manage all of this while maintaining a rigorous standard of definition and example that should be a model to the rest of the field.  Terms are defined when they're used or cross-referenced.  Algorithms are given in well defined and carefully crafted pseudo-code (using pseudocode neatly leapfrogged two decades of computational linguistics books tied to obscure programming languages). For instance, their definition of CYK parsing is a minimal, elegant nesting of for-loops from which the complexity of the algorithm is self-evident.  Speaking of rigor, the book is very well copy edited, typeset, and indexed.<br />This book isn't the last book you'll need; it's the first.  Jurafsky and Martin open the door to the cognitive sciences, including linguistics, psychology and philosophy, and the computer sciences including logic, automata, formal languages, algorithms, and statistical estimation.  Not to mention artificial intelligence; all the good problems are AI-complete**, after all, and Jurafsky and Martin don't let you forget it.<br />--------------------<br />* There were actually several other chapter authors, including Keith Vander Linden on Natural Language Generation, Nigel Ward on Machine Translation, and Andy Kehler on Discourse; it's a tribute to all of them that the book hangs together so well.<br />** &quot;AI-complete&quot;, a term derived from &quot;NP-complete&quot; and &quot;Turing-complete&quot;, applies to a problem that is so hard that if you solved it, you could solve any other interesting artificial intelligence problem in terms of the solution to your problem.	2002-04-30
US	51945867	R3G8QVNTNA5ZGY	0521629713	810685756	Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids	Books	5	24	27	N	Y	Fantastic Descriptions of Probabilistic Sequence Algorithms	I picked up this book at the recommendation of a number of colleagues in computational linguistics and speech processing as a way to find out what's going on in biological sequence analysis. I was hoping to learn about applications of the kinds of algorithms I know for handling speech and language, such as HMM decoding and context-free grammar parsing, to biological sequences.  This book delivered, as recommended.<br />As the title implies, &quot;Biological Sequence Analysis&quot; focuses almost exlusively on sequence analysis.  After a brief overview of statistics (more a reminder than an introduction), the first half of the book is devoted to alignment algorithms.  These algorithms take pairs of sequences of bases making up DNA or sequences of amino acids making up proteins and provide optimal alignments of the sequences or of subsequences according to various statistical models of match likelihoods.  Methods analyzed include edit distances with various substitution and gapping penalties (penalties for sections that don't match), Hidden Markov Models (HMMs) for alignment and also for classification against families, and finally, multiple sequence alignment, where alignment is generalized from pairs to sets of sequences.  I found the section on building phylogenetic trees by means of hierarchical clustering to be the most fascinating section of the book (especially given its practical application to classifying wine varietals!).  The remainder of the book is devoted to higher-order grammars such as context-free grammars, and their stochastic generalization. Stochastic context-free grammars are applied to the analysis of RNA secondary structure (folding). There is a good discussion of the CYK dynamic programming algorithm for non-deterministic context-free grammar parsing; an algorithm that is easily applied to finding the best parse in a probabilistic grammar. The presentations of the dynamic programming algorithms for HMM decoding, edit distance minimization, hierarchical clustering and context-free grammar parsing are as good as I've seen anywhere. They are precise, insightful, and informative without being overly subscripted. The illustrations provided are extremely helpful, including their positioning on pages where they're relevant.<br />This book is aimed at biologists trying to learn about algorithms, which is clear from the terse descriptions of the underlying biological problems.  The technical details were so clear, though, that I was able to easily follow the algorithms even if I wasn't always sure about the genetic applications. After studying some introductions to genetics and coming back to this book, I was able to follow the application discussions much more easily.  This book assumes the reader is familiar with algorithms and is comfortable manipulating a lot of statistics;  a gentler introduction to exactly the same mathematics and algorithms can be found in Jurafsky and Martin's &quot;Speech and Language Processing&quot;.  For biologists who want to see how sequence statistics and algorithms applied to language, I would suggest Manning and Schuetze's &quot;Foundations of Statistical Natural Language Processing&quot;.  Although it is much more demanding computationally, more details on all of these algorithms, as well as some more background on the biology, along with some really nifty complexity analysis can be found in Dan Gusfield's &quot;Algorithms on Strings, Trees and Sequences&quot;.<br />In these days of fly-by-night copy-editing and typesetting, I really appreciate Cambridge University Press's elegant style and attention to detail.  Durbin, Eddy, Krogh and Mitchison's &quot;Biological Sequence Analysis&quot; is as beautiful and readable as it is useful.	2002-04-28
US	51945867	R1JG5O92228GK2	0140143459	488185202	Liar's Poker: Rising Through the Wreckage on Wall Street	Books	5	4	5	N	Y	Great characters; great trading; great story.	This book is to Wall Street as Anthony Bourdain's \\"Kitchen Confidential\\" is to the restaurant business.  It's an inside look from someone who not only was there, but lived to write the tale.  It's easy to identify with Lewis, who begins his story while he's interviewing for jobs in college.  One thing leads to another and he's soon making money and (mis?)-handling millions for his customers and earning the reputation of a \\"Big Swinging Dick\\" at Solomon.<br />Lewis provides great insight into the bond trader's mindset, ranging from the abuse of interns to the creativity required to create a mortgage bond after-market through internal politics and external sales. The traders are continuously glancing at the financial numbers and running \\"what if\\" scenarios, imagining the impact on the bond market.  The details of the instruments being traded are very well explained, even in financially complex configurations like tranched mortgage liabilities or stripped bonds.  Just as much attention to detail is provided in descriptions of the paranoid manic-depressive tendencies of the traders on both the buy and sell sides.  Lewis's first \\"exploding\\" customer provides a particularly poignant contrast to the equally risky goings on within Solomon.  <br />Lewis really moves the story along.  He has a sure hand with dialog and scene setting, and the first person point of view adds to the tension.  Thankfully, \\"Liar's Poker\\" doesn't get bogged down in psychological or social criticism;  there's not even any Monday morning quarter-backing by the author-protagonist.  The story is told and the interpretation is pretty much left up to the reader, which I find refreshing.<br />I also really enjoyed Lewis's tale of Silicon Valley VC through the eyes of Jim Clark, founder of SGI and Netscape, in \\"The New New Thing\\".  I'm afraid I just wasn't buying Lewis's more recent \\"Faster\\", which is much more analytical and much less (auto)biographical.	2002-04-28
US	51945867	R20P9UK0PCLI0I	3822863009	3472853	Little Nemo: 1905-1914 (Evergreen)	Books	5	40	41	N	N	Nice Reproductions of McCay's Seminal Strip	This Taschen book adequately reprints the first run of Winsor McCay's seminal comic strip, Little Nemo in Slumberland.  Little Nemo is a 9-year old who drifts off to sleep each night only to be transported to Slumberland, a hallucinogenic world of circus performers, royal court attendants, exotic personages of all stripe, and animals both tame and wild.  I loved looking at these strips as a child, but I didn't understand them until much later. <br />McCay worked on an epic scale. Each strip ran to dozens of dialog baloons and hundreds of clearly rendered people and things, and often involved a half dozen characters or more. The most notable denizen of Slumberland other than Nemo is Flip, Nemo's arch-nemesis, who is set on nothing more than casting Nemo out of Slumberland by tricking him into waking up. The stories are scary in the amorphous manner of dreams -- characters grow large and walk over cities, or so small they are dwarfed by raspberries, inducing a dreamlike sence of vertigo and plasticity.  Another recurring dream-like theme is flight, effected by baloons, stars, giant dragonflies or even Nemo's own out-of-control bed.  <br />The strips, originally filling a 15x23 inch newspaper page, are perhaps the most intricate and well rendered comics ever to be produced. At just over 12 inches tall, these reproductions are disappointingly small.  And although the text is clear, it is tiny.  Each panel is exquisitely composed and could stand on its own as a compelling work of graphic art, drawn with a beautiful art nouveau line and a rainbow pastel palette that makes one wonder what they knew about printing comics in 1905 that's been since forgotten.  Although numbered for readers at the time, McKay's control of flow leaves no doubt as to the order of panels in the mind of the modern comic entusiast; he would routinely stretch time and space, and think nothing of propelling action from one panel to the next -- tricks in the bag of every modern comic artist.  (As an aside, Scott McCloud's book \\"Understanding Comics\\" is a most excellent treatise on comic book art in general and page flow in particular.)	2002-04-27
US	51945867	R22YE7536C38W2	0716741067	225067813	The Lady Tasting Tea: How Statistics Revolutionized Science in the Twentieth Century	Books	3	12	15	N	Y	Nice shot at a difficult topic	Salsburg sets himself the rather difficult task of explaining how the ascension of statistics as a \\"valid\\" form of reasoning in the early 20th century has altered the course of science.  And while \\"The Lady Tasting Tea\\" is enjoyable, it doesn't make for compelling page-turning either as philosophy of science or as biography.  <br />I can excuse Salsburg for not going into more depth mathematically, but I still felt like many of the concepts were dangled just out of reach.  Although the role of statistics in science is the focus of the early part of the book, this historically fascinating and still relevant topic is never fully developed.  Salsburg never really gets down to the subtle job of teasing apart determinism and non-determinism; deterministic theories and statistical ones; absolute truth and pragmatism; and cognitive agents, theories and reality. A deeper inquiry would've inevitably led to the philosophical context of logical positivism and empiricsm, with philosophers such as Popper, Russell, and later Quine struggling with statistics and its relation to induction as the underpinning of scientific theory.<BR>  <BR>The biographical sketches, which form the bulk of the book, provide a straight-line historical organization to the subject matter.  Although the section on Pearson gets off to a good start, the later sketches are much weaker and read like encyclopedia briefs.  It almost feels as if the author gave up halfway through the book when he saw the enormity of the task he had set for himself. By way of contrast, James Gleick managed to convey a real sense of the the interplay of theory, personality, publication and conferences in the much larger book \\"Genius\\", though having Richard Feynman as a subject made Gleick's job substantially easier.  Paul Hoffman also painted a moving picture of Paul Erdos, the peripatetic mathematician in the shorter \\"The Man Who Loved Only Numbers\\".  Thus writing a compelling book about science and scientists clearly isn't impossible. In Salsburg's defense, perhaps there just weren't as many colorful personalities in statistics as in physics or mathematics; one gets the impression of a rather dour bunch on the whole.	2002-03-26
US	51945867	R2S0CZM9DNC3M8	0671013955	109347310	House of Cards (Star Trek: New Frontier)	Books	5	5	6	N	Y	Peter David delivers another fast ball down the middle	If you like Star Trek, and you like Peter David, you can't go wrong with this book or the rest of the series.  I was hooked on David's writing through his classic &quot;Grey Hulk&quot; series of Marvel Comics.  I find his writing stands out from the crowd (though they did bring in some good writers for the original Trek book series).  <br />The New Frontier, Book One, is classically organized, developing the characters in their individual threads and then bringing them together for the new ship through the first four books.  There's very nice balance, and the comics, er books, have a little more leeway with asides you don't get in the TV shows or movies.  The time and place is set around the time of the Next Generation, with Jean-Luc Picard and even Spock putting in an appearance.  <br />Just to be clear -- this book reads like a comic book, or like a Star Trek episode.  It's pure pulp, but pulp of the highest order.  One word of warning: this &quot;book&quot; is barely novella length; it takes about an hour to read, and that's if you read the funny parts twice.	2002-03-25
US	51945867	R2E6TINIS6JNGG	0130258784	558218111	Program Generators with  XML and Java	Books	2	4	5	N	Y	Beginners Only	The ideal reader for this book would know Java, but would know nothing about program generators (or compilers) and nothing about XML.  They'd want to take things slowly, and wouldn't mind if they didn't get very far. In return, they'd get a surprisingly long introduction to \\"domain analysis\\", a decent medium-length introduction to XML and XSL, a quick look at using the Java DOM parser for XML, and some examples.  <br />I was disappointed with the lack of discussion of program generator basics, most fundamentally when to write a program generator versus when to write an interpreter, a parametric program, or as is more typically required, some mix of these approaches.  And what about wizards, the most transparent modern incarnation of program generators? And how does this all interact with frequency of program generation and version control? There was no discussion of programming language basics like semantic versus syntactic well-formedness and error reporting, which have their peculiarities in XML and Java. <br />A primary concern with the whole XML (not to mention Java) enterprise is scalability. There was no discussion of writing efficient program generators; SAX is only mentioned in passing!  Even more surprisingly, there is no discussion of generating efficient code, the latter being a primary motivator for many program generation efforts. <br />Despite the daunting number of pages, this book can be read in one sitting due to the huge font and wide margins.	2002-03-25
US	51945867	RKHC0CRX2QKZD	0471285714	349761518	Becoming a Chef: With Recipes and Reflections from America's Leading Chefs	Books	2	8	12	N	N	A book of magazine sidebars	Dornenburg and Page's book reads like a collection of magazine sidebars of the kind familiar from Elle Decor or Gourmet.  Apparently, the authors interviewed dozens of chefs, and then cut the interviews apart and re-organized them loosely by topic. It would be an interesting game to see if a reader could place an interview snippet into the right chapter -- the whole book felt homogenous to me.  Most quotes are one or two paragraphs, which creates a choppy pace. I couldn't develop a feel for any of the individual chefs, because all of their quotes were out of context.   On top of that, the book contains additional sidebars, just to emphasize its bite-sized nature. These sidebars consist of more quotes and a lot of lists organized by topic such as chefs' favorite childhood foods, first food related job, and what they thought they'd be when they grew up.  On the other hand, for reading in one or two minute bursts, or for readers who prefer magazines to books, this book would be ideal.  <br />Although pitched as serious advice to potential professional chefs, the book does a poor job of providing information for potential students.  Yes, there's a list of cooking school addresses, but only about a dozen of the hundreds to choose from in the U.S., and no real discussion of how they vary or of possible alternatives.  There's very little discussion of the career paths a chef can take other than that of celebrity chef, because they only interviewed celebs.  <br />The book is chock full of interesting recipes, many of which are things chefs like to cook but aren't \\"appropriate\\" for their restaurants.  Others are like the six page recipe from Jean-Louis Palladin for a terrine of whole foie gras and black truffle, which runs a whopping 6 full pages plus 2 additional half pages, whose ingredients would cost a week's salary, and whose preparation would require a week of labor.  <br />I enjoyed the quotes from the chefs, and found some of the lists (like must-have cookbooks according to chefs) very useful.  Mostly, though, it was like thumbing through old magazines (the book's seven years old as of this reviewing). I also enjoyed the black and white journalistic photos, which are rare in cooking related books; although given the cost of this book, there should be beautiful color plates.<br />All in all, I found Ruhlman's \\"The Making of a Chef\\" provided much more insight into the educational side of cooking school (at least the CIA), whereas his \\"The Soul of a Chef\\" did a much better job of getting inside the head of a few \\"successful\\" chefs.  What every aspiring chef should really read, though, is Bourdain's over the top dose of reality, \\"Kitchen Confidential\\".  Dornenburg and Page's book is  more of a whitewashed cooking network version of professional cooking, where it's all about the purity of the ingredients, the clarity of the vision, and last but not least, the primary grist for this book's mill, the charismatic sound bite.	2002-03-25
US	51945867	R33YT3HETYTSNF	0060934913	24249899	Kitchen Confidential: Adventures in the Culinary Underbelly	Books	5	13	14	N	N	Great insider tale	Bourdain explains that he's trying to write a book like the stories he'd tell you late at night after a few drinks.  About what restaurants are really like and how chefs really talk and think. And that's exactly what he does.  The book's crude, rambling, ego-centric, drug-addled, downmarket, egotistical, depressing, downright scary, and obnoxious, but also insightful, upmarket, generous, upbeat, and ultimately uplifting.  Bourdain may be annoying, but he knows he's annoying, and not only doesn't care, but uses the tone to good effect. This feels like the straight story, at least in part because Bourdain isn't concerned with making himself the hero of every story.<br />I particularly appreciated the author's soul searching on how he got where he is rather than becoming a world class chef, which he claims not to be. He attributes it to taking head chef jobs rather than learning more from masters early in his career.  The education and apprenticeship theme is played up as the focus of both Ruhlman's \\"The Making of a Chef\\" and Dornenburg and Page's \\"Becoming a Chef\\".  Although this is not corner diner food, in a typical self-deprecating aside, Bourdain points out that it's really the shallots and monte au beurre that lend the professional taste.  <br />Bourdain's respect for food and cooking is evidenced most clearly in the reverential tones reserved for Scott Bryan of Veritas (in New York).  He begins the chapter by asking the reader to forget everything they've read up to this point and to look at Veritas, where you can tell how good they are from the spotless side towels, the shallot brunoise in the mise en place, and the fact that everything is prepared a la minute.  <br />Although just about every aspect of running a restaurant is covered, I really appreciated the running discussion of creating menus and specials;  you realize every chef-owner is first and foremost a Garde Manger. <br />This book's strong medicine.  If you love food and need an antidote, try Ruth Reichl's autobiographically inspired \\"Tender at the Bone\\" which is as sweet as Bourdain's book is sour.	2002-03-11
US	51945867	R1OY589WLG6YI8	0805061738	752533128	The Making of a Chef: Mastering Heat at the Culinary Institute	Books	5	4	4	N	N	Beginning the journey toward perfection	In this book and its sequel, &quot;The Soul of a Chef&quot;, Michael Ruhlman goes well beyond cooking and into a philosophical, sociological and psychological investigation of the drive to be world class.  I'm with Ruhlman in that I find just about any activity fascinating if it's being taken to the highest level.  I found myself drawing parallels between the chef/students in these books and the professor/students I hang out with in my academic career.  What all the characters in these books share with other world class scholars, artists or craftsmen is their relentless pursuit of knowledge, tied to experimentation.  What separates the best from the rest seems to be a liberal dose of creativity and the project management skills to refine it to reality, on top of the necessary analytical skills and hard work.  Oh, and don't forget the obsession.<br />The fact that the topic is food simply adds to the pleasure, because the charactes are studying sourdough starters, pale vs. dark roux for brown sauce, clarity in stocks, plating galantines, balancing menus, conserving waste, and other fascinating topics.  Along the way, Ruhlman brings you into these discussions with the masters and their students.<br />The book's organization simply follows the CIA's curriculum from introductory culinary math (sounds easy) through basic skills (taxing), bread and pastry (appears cerebral), culminating with service in real restaurants (seems to be back breaking).  It's a natural organization, and the build up to real cooking builds some tension.  What's even more fun is seeing how Ruhman gets swept away with the challenge of cooking, to the point where he develops his own tough-guy chef mentality. As a sociologist, his methodology might be questionable, but as an author and proponent of the craft of cooking, he's at the top of his game. <br />Although the sequel, &quot;The Soul of a Chef&quot;, is subtitled &quot;The Journey toward Perfection&quot;, the trip really starts here in this tighter, more focused book.  Ruhlman continues this study of the quest for perfection in his latest book, &quot;Wooden Boats&quot;.	2002-03-11
US	51945867	RQ7CBICRTAZ27	0201608421	253659555	Tog on Interface	Books	2	30	35	N	Y	Early Mac newsletter clippings	Diving into \\"Tog on Interface\\", a collection of Apple Macintosh developer newsletter column reprints, provides the same guilty pleasure as finding a stack of fifty year old technical magazines.  Clearly, there was an audience somewhere, and a dialogue going on, and interesting topics being discussed.  But, oh it seems so long ago and what are all those strange mechanical devices they're referring to?  On closer study, the second analogy that comes to mind is the Europe-in-7-days package; Tognazzini touches on almost every conceivable topic, if only to drop a reference here or tie in a point there.  The comments are usually on target, but left me seeking answers that were deeper and less flippant.  This book is riddled with the author's humor and point of view; if you find attempted cuteness or a stream of in-jokes annoying, steer clear. <br />I bought this book after devouring Tognazzini's well regarded web interface design site, which left me wanting more.  I didn't get it in this book, but did find what I was looking for in other books on the topic of interface design: Jeff Johnson's \\"GUI Bloopers\\", which is organized like Tog's web site, Alan Cooper's Windows-centric rant \\"About Face\\" and Jef Raskin's Mac and Canon Cat dominated \\"The Humane Interface\\".	2002-02-28
US	51945867	R2MJI41JXYFREN	1563894696	431283596	Batman: The Long Halloween	Books	5	135	151	N	N	Perfectly Balanced, Subtle Batman Noir	This ode to Frank Miller's \\"Year One\\", itself a noir take on Batman's early career, provides a note-perfect genre piece that should thrill anyone looking for a Batman whodunit. The story has Batman, early in his career, taking on the mob and a serial killer who strikes on holidays.  The story is drum tight through thirteen issues (350+ pages), set from Halloween to Halloween, with a poetic pacing and use of graphic tension found only in top-notch graphic novels.  Harvey Dent is heavily featured along with a young Jim Gordon.  For Batman scholars, Dent's presence alone provides a backdrop of foreboding.  <br />The usual rogue's gallery weaves through the book, including a jealous Joker, out to outdo the serial killer, a cornered, yet elegantly neurotic Riddler, and a wildly abstracted, sensual Poison Ivy, along with a little more mind-altering mayhem from the Scarecrow and Mad Hatter.  <br />What I appreciated most about Jeph [sic!] Loeb's telling is that the criminals are reduced to their elemental symbols, where a gesture or a glance conveys as much as a panel of narrated text.  The clues are perfect red herrings in the grand whodunit fashion.  Fans of Batman know bad things are going to happen when a stranger passes a rose to a character who then pricks their finger on its thorns.  Similarly, even a hardened Gotham detective shudders upon seeing a murder victim with a smile on his face. My only misgiving about this book is that if a reader wasn't acquainted with Batman and the usual Arkham cast, the subtletly of this telling will almost certainly be missed.  On the other hand, this'll be a great place to start an education. <br />Tim Sale's art is compelling.  Noir's a difficult effect to convey in comics, and it comes through beautifully in a shadowy, mostly gray and earth tone palette behind strong inking.  This cool, muted ground provides the perfect foil against which to contrast the costumed villains, ratcheting up the tension another notch.	2002-02-27
US	51945867	R148RX1GGNO0HF	0066620023	184490417	Crossing the Chasm: Marketing and Selling High-Tech Products to Mainstream Customers	Books	4	188	194	N	Y	two good points, but a longwinded book	Moore's primary point in this book is that the early adopters of a technology are not necessarily the same as the mainstream market. Moore points out that early adapters often buy things because they're cool, not for practical reasons. Early adapters deal with pain in the form of bad interfaces, minimal network effects. etc. Following this informal observation, Moore divides the population into innovators, early adopters, early majority, late majority, and laggards. This is his \\"Technology Adoption Life Cycle\\", of which the \\"underlying thesis is that technology is absorbed into any given community in stages corresponding to the psychological and social profiles of various segments within that market\\" (p. 15). He illustrates this with a bell curve with a horizontal axis corresponding to time of adoption. There's no explanation for why a Bell curve; I'm guessing it just looks pretty in PowerPoint. Moore continues with \\"this process can be thought of as a continuum with definite stages, each associated with a definable group\\" (p. 15), although actual definitions are notable by their absence. So Moore advises us that marketing to the two groups might have to be different. Complex? No. Obvious? Perhaps. In any case, this observation is followed with 185 pages of examples and pep talks which I found perfectly readable, but without much additional content.<br />The second point, which is really just as important, is that the way to \\"cross the chasm\\" is by targeting a single industry or group of users, a so-called \\"vertical market\\".  The only way customers who are beyond the early adopter phase are going to buy into a new product is if it is easy to adopt or if it truly fills a perceived desperate need. That is, it looks less \\"disruptive\\".   Usually this means a lot of custom integration with industry-specific infrastructure.  It's easier to build something well integrated with existing, for say, just the airline industry and their SABRE database backend, than it is to tryto target the entire Fortune 500, each sector of which has adopted different sorts of databases.  It worked just the way Moore described for my company, where Moore's book was required reading.      <br />You can get much more insight about sales and marekting (as well as finance and logistics) about disruptive technologies from Clayton Christensen's excellent \\"The Innovator's Dilemma\\". You can learn more about marketing segmentation and network effects from Shapiro and Varian's \\"Information Rules\\". I might be biased as both a techie and a recovering academic, but I liked the more heavily researched, serious case-study orientation as well as the precise, restrained, academic tone of these two books from business professors. On the other hand, Moore's book gives you an excellent feel for the seat of the pants consulting and hype side of the business world, which itself is a useful education.  <BR>Moore's book is breezy and highly readable.  This is great can't-sleep-on-the-airplane material.  And two good ideas are more than you get out of most pop business books.	2002-02-19
US	51945867	R166U1O7SIUAJA	1575860538	313291860	The Media Equation: How People Treat Computers, Television, and New Media Like Real People and Places (CSLI Lecture Notes S)	Books	5	20	22	N	Y	Must read popularization	The media equation, as introduced by Nass and Reeves, is that &quot;media equals real life&quot; and that our interactions with media are &quot;fundamentally social and natural&quot; (p. 5).  This book is a popularization of established, replicated research on how people interact with television advertising, tutoring systems, error messages, loud noises, sudden movement, etc.  For instance, one widely replicated result is that computer tutoring systems get better evaluations if the evaluation program is run on the same computer.  Moving the reviewer to a new computer (with the same program), significantly lowers the score.  The social science literature shows that teachers who collect their own evaluations score much more highly than those whose evaluations are collected by others.  This is the kind of evidence Nass and Reeves bring to bear in support of the media equation.  They don't claim that we are consciously thinking about the computer's feelings and don't want to hurt them.  Rather, to the contrary, subjects claim they were doing no such thing.  Yet the evidence of our behavior seems incontrovertible.<br />The media equation is a good enough predictor of user behavior, at least for telephone-based spoken dialog systems of the form my company builds, that it has informed our designs from top to bottom.  Our applications apologize if they make a mistake.  Callers respond well to this.  Sure, the callers know they're talking to a machine, but this doesn't stop them from saying &quot;thank you&quot; when it's done or &quot;please&quot; before a query or feeling bad (or angry) if the computer can't understand them.  Another strategy recommended by Nass and Reeves that we follow is trying to draw the caller in to work as a team with the computer; again, Nass and Reeves support this with several clever experiments.  There is also a useful section on flattery, looking at the result of the computer flattering itself and its users; it turns out that we rate computers that flatter themselves more highly than ones that are neutral.<br />Among other interesting explanations you get in this book are why we're more tolerant of bad pictures than bad sound, why we focus on moving objects, speaking rate equilibrium, what we can do to make someone remember an event in a video, and the role of gender.<br />This book is very quick and easy to read. I read it in two days while on vacation it was so fascinating. In contrast to the classical yet dry social science format of hypothesis, experimental methodology, results, and essentially a summary of the results as a conclusion, Nass and Reeves only vaguely summarize their experimental methodology and take a no-holds-barred approach to drawing conclusions.  This may annoy social scientists, most of whom expect their own kind to be far more circumspect.<br />This book is an absolute must-read for anyone designing mediated interfaces. For those who don't believe the results, I'd suggest running some experiments;  our company did, and it made us believers.that flatter themselves more highly than ones that are neutral.<br />Among other interesting explanations you get in this book are why we're more tolerant of bad pictures than bad sound, why we focus on moving objects, speaking rate equilibrium, what we can do to make someone remember an event in a video, and the role of gender.<br />This book is very quick and easy to read. I read it in two days while on vacation it was so fascinating. In contrast to the classical yet dry social science format of hypothesis, experimental methodology, results, and essentially a summary of the results as a conclusion, Nass and Reeves only vaguely summarize their experimental methodology and take a no-holds-barred approach to drawing conclusions.  This may annoy social scientists, most of whom expect their own kind to be far more circumspect.  <br />This book is an absolute must-read for anyone designing mediated interfaces. For those who don't believe the results, I'd suggest running some experiments;  our company did, and it made us believers.	2002-02-19
US	51945867	R1ZESD96B70GYT	0201379376	150887574	The Humane Interface: New Directions for Designing Interactive Systems	Books	4	20	21	N	N	Fundamentals and Futurist speculation	Raskins' \\"The Humane Interface\\" is cut from the same cloth as Alan Cooper's \\"About Face\\", Jeff Johnson's \\"GUI Bloopers\\", and Bruce Tognazzini's \\"Tog on Interface\\".  I prefer Johnson's books to the others due to its thoroughness, even-handedness and case-study orientation.  As in Cooper's and Tognazzini's books, many of Raskin's recommendations are tried and true, whereas others are much more speculative.  <br />Raskin thoroughly grounds his book in cognitive theory, which for a cognitive scientist like me, is highly refreshing.  Others might not appreciate the theory as much, but this is clearly the meat of the science of UI design.  But this is not a book on cognitive psychology, so it quickly moves on to discuss \\"cognetics\\", which he describes as the ergonomics of the mind.  Like most UI designers, Raskin has semantic qualms with the term \\"intuitive\\", but introduces \\"affordances\\" as a stand-in.  An affordance is simply something that's familiar from your earlier experiences.  Combined with \\"visibility\\", they form the backbone of easy-to-use-out-of-the-box UI design.  Raskin quite rightly denies the zero-sum nature of design for novice versus design for experts, claiming you can build well for both by following the domain.  There's an excellent discussion of Fitt's Law, which predicts how long it will take to land a mouse on a screen object based on size and distance.  I also appreciated the clear explanation of the GOMS keystroke model and his subsequent application of information theory to the design of a farenheit-celsius converter.  <br />Getting more concrete, Raskin delivers the obligatory rant against modes.  In a novel twist, he then introduces a nifty notation of the elementary actions of today's GUI's (mouse down, key clicks, selection, mouse movement, etc.), which brings him much closer to the engineering side of interface design than any of the competing books.  There is an excellent description of in-text search, using emacs (the text editor of choicefor the world's programmers) as an example.  The section on commands and transformers, the basis of the Unix operating system and software design within it, indicate that emacs wasn't the only thing Raskin picked up before he designed the Mac UI.<br />I was completely unconvinced by Raskin's radical suggestions for redesigning (really discarding) the notion of file.  I can't imagine making his concept of LEAP work in practice.  I'm not even sure I understood the description. I was equally unimpressed by his \\"Zoomworld\\" suggestions for navigation.<br />\\"The Humane Interface\\" doesn't break much new ground, but its solid foundations and smattering of sharp insights make it a worthwhile edition to any UI designer's bookshelf.	2002-02-15
US	51945867	R1L41J75RGSN7T	0141001895	134194364	The Soul of a Chef: The Journey Toward Perfection	Books	4	0	0	N	N	Solid fundamentals and a good read	This book delivers on the fundamentals, with exquisitely detailed analyses of cooking style, technique and taste.  You even get some recipes thrown in for good measure.<br />The first of three stories is on the Culinary Institute of America's Certified Master Chef Exam (the CIA's CMC exam).  Everything is so focused on the food that Lynn Kennedy-Tilyou's seafood terrine is a more exciting character than any of the chefs taking or administering the CMC exam.  I only wish I could've tasted it, too.  The author delivers an entire food curriculum in exam-form, packed into 100 pages.  The attentive reader even emerges with a specialty in forcemeat. The test itself is portrayed as a ten day, 12-hour a day Iron Chef marathon crossed with the Spanish Inquisition. We're left shaking our heads about the point of the whole exam along with the author.  <br />In the second piece, Lola's chef Michael Symon, from Cleveland, the author's home town, is portrayed as friendly, and with a booming laugh.  The food comes across only so-so in this piece, but the place sounds like fun.  This is all made clear for us by the Waiting-for-Guffman style buildup in anticipation of the arrival of the man-about-the-U.S. reviewer, John Mariani, who seems less than impressed. Unlike the CMC story, the Lola story has a happy ending.  The part I enjoyed most was following Symon's preparation of a new menu throughout the piece.  <br />The final piece, on the French Laundry, paints chef Thomas Keller as the polar opposite of Symon, coming across as both dour and compulsive, though not without a sense of humor with respect to the food.  I wish there'd been as much emphasis on the cooking as in the CMC piece -- that's where the author really shines.  Instead, we are treated to dreamy recollections of dinners; by all accounts, that's the effect the French Laundry has on foodies.  Ruhlman, the author of this book, was also on the writing team for the French Laundry Cookbook if you want to try some of this yourself.<br />Ruhlman sets out to examine what makes a chef, and more to the point, what makes a chef &quot;perfect&quot;.  In the end, both the author and the readers come away shaking their heads.  Chefs come in many flavors, as do the tastes of diners.  Maybe that was Ruhlman's point.	2002-02-15
US	51945867	RKHHAMPKP2M2B	186100382X	682271576	Professional Java Programming	Books	5	3	3	N	Y	Everything not in the standard Java books and then some	I love Arnold and Gosling's &quot;The Java Programing Language&quot; as a basis for learning Java.  There are other specialized books that add to a solid foundation in Java, like Lea's &quot;Concurrent Programming&quot; and Fowler's &quot;Refactoring&quot;. <br />What you get in Brent Spell's &quot;Professional Java Programming&quot; is a beyond-the-basics introduction to several Java tools that aren't covered in any of these other must-have books.  In fact, this is really several books glued together into a backbreaking 2 inch thick package weighing in at 3 3/4 pounds (1.7 kilos).  At least they had the sense not to add the usual throwaway CD to this unwieldy package. But don't be fooled by the size of the book.  With the number of topics, each is handled very compactly.  The definitions are tight and the examples are well directed, making it a great reference book.<br />The chapters on layout managers here are the best I've seen.  There's also excellent coverage of the twisty MVC GUI widgets: JTree and JTable, with excellent explanations and examples. There's adequate coverage of threading, especially useful for event-based GUI programming.  The discussion of performance tuning is a great start on the subject. You also get very good coverage of XML and the associated DOM and SAX parsers.  I like Spell's coverage of basic XML and DTDs better than others I've seen, though he doesn't discuss schemas or other more recent developments. I haven't used the sections on security, JDBC or distributed objects, but if I ever need info on these topics, this is where I'll look first.   <br />PS  The author cover photos (all with chin on hands!) on all of the Wrox &quot;programmer to programmer&quot; (TM) books are so cheesy that they detract from the solid writing.  Don't be fooled -- this is serious, hardcore stuff.	2002-02-01
US	51945867	RYN8HVWPC3HHC	019860114X	170151217	The Oxford Companion to the Wines of North America	Books	3	12	13	N	Y	an inferior supplement to the Oxford Companion to Wine	The &quot;Oxford Companion to Wine&quot;, edited by Jancis Robinson, is the definitive modern reference on wine.  Not intended to be read as a book, the entries nevertheless make compelling reading and following the cross-referenced entries can easily consume a pleasurable evening.  This &quot;supplement&quot; doesn't live up to the original in terms of quality, comprehensiveness or value.  If you were expecting a version of the companion tuned to American wines, you'll be sorely disappointed.  On the other hand, if you can't get enough of the original and long for more information on California growers, this isn't a bad start.  We can always hope for a revised, expanded, second edition.<br />For the North American supplement, Jancis Robinson served only as a &quot;consulting editor&quot;.  She apparently corrected the editor's English usage (see the preface), but she didn't write any of the entries.  She did write two throwaway pieces in the beginning of the book on &quot;How Good are North American Wines?&quot; and &quot;Commentators and the Wine Media&quot;.  There are roughly 60 pages worth of introduction to North American Wine, most of which I did not find deep enough to be particularly informative.<br />Almost all of the cross-references on vinification, wine-making, cellaring, tasting, defects, grapes, etc. are in the &quot;Oxford Companion&quot;, making it essentially impossible to use the North American guide alone.  <br />Compared to the &quot;Oxford Companion&quot;, the entries are relatively breezy.  The font is larger, the margins are wider, and the book is much shorter.  Like the &quot;Oxford Companion&quot;, the maps are truly horrendous; you'll remember them from coloring assignments in grade school.  Invest in Hugh Johnson's and Jancis Robinson's wonderful new &quot;World Atlas of Wine&quot; for maps.  The Atlas's coverage of North American wine styles, grapes and regions isn't half bad, either.	2002-02-01
US	51945867	R1B3XK6PL5O2F7	0671728938	149001508	Simon & Schuster's Beginner's Guide to Understanding Wine	Books	5	8	8	N	N	Instant ticket from neophyte to knowledgeable	This is the best introduction to wine appreciation that I've seen.  Schuster begins with tasting (well, actually with glassware and looking), which defines the terms you see in most wine reviews (such as concentration, acidity, body, tannin, balance, finish, nose, etc.) and shows you how to apply them by suggesting a series of relatively inexpensive comparative tastings (including of non-wine items like lemon or sugar or coffee).  There follows a grape-by-grape breakdown of white and red wine varieties, including a description of typical instances of the varietal for different geographical regions in terms you just learned.  Included along with the wine profiles is a description of the wine-making process and variations, including champagne, fortified wines such as port, and even brandy. <br />This book is written for absolute beginners, but it's not an &quot;easy read&quot;.  The information is packed densely, and there are many invaluable practical &quot;exercises&quot;.  It reads more like an undergraduate intro textbook than like a breezy magazine article.  Think of it as a wine equivalent of Julia Child's Mastering the Art of French Cooking, and you'll be in the right ballpark. <br />More than any other book, this one changed my perspecitve and took me from a struggling beginner level to where I can engage in wine discussions with experts.  I found this book far more thorough than Hugh Johnson's pocket book, How to Enjoy Your Wine.  If I was shopping for such a book now, I'd have to consider Jancis Robinson's &quot;How to Taste&quot;, because she's one of my favorite wine writers; but I haven't read it.<br />After this book, I'd suggest getting Hugh Johnson and Jancis Robinson's World Atlas of Wine, and the Jancis Robinson edited Oxford Companion to Wine.	2002-01-10
US	51945867	R944LYZ8OKI2K	1840003324	72199968	The World Atlas of Wine	Books	5	50	52	N	Y	Essential.	The &quot;World Atlas of Wine&quot; lives up to its title as a definitive guide to the world's wine growing regions. The maps range in scale from all of Bordeaux down to individual communes such as St-Estephe and Pauillac, with major co-ops and estates clearly indicated. The maps are so detailed they could be used in lieu of Michelin to drive from La Chapelle in Hermitage to Vieux Telegraphe in Chateauneuf du Pape. With the text, I could probably lead a guided tour. Although France is given pride of place, California, Spain, Italy, South America and Australia are also well covered. <br />But the book's far more than just a set of geo-political maps of wine regions.  It's also full of geological information about soil, consumption, production, etc.  It really is an atlas.  And the writing is quite a bit less dry and &quot;objective&quot; than your usual &quot;atlas&quot;; Johnson and Robinson are both fantastic wine writers.  I also found the reproduced labels most instructive.<br />Every other book on wines has left me wishing for better maps, including the Oxford Companion to Wine edited by Jancis Robinson. Now I read them with the &quot;World Atlas of Wine&quot; at my side. I only wish I could order the maps as posters.	2001-12-22
US	51945867	RNKK0L255YDWQ	0201709694	894812286	JavaÂ¿ Platform Performance: Strategies and Tactics	Books	2	28	32	N	Y	Shallow coverage with some redeeming utility	The table of contents is deceptive, because all of the important optimization topics are covered, including the Java-specific ones.  The problem is, most of these topics are not covered in any depth beyond a simple introduction. I like terse books and believe most books about computers these days are way too fat;  my hats are off to Addison Wesley for controlling that tendency with well edited books in this series.  This book is thin at 230 pages, but unfortunately, a lot of that is filler of the &quot;let me tell you what I'm going to tell you, tell you, and then tell you what I told you variety. <br />The advice is generally sound, such as &quot;use a profiler to decide what to optimize&quot;, but all too often the advice stops there.  One learns that linked lists are fast for deletes and array lists are fast for random access.  But what if neither has the performance characteristics you need?<br />I would recommend Jon Bentley's &quot;Programming Pearls&quot; for someone who really wants to get a feel for optimization through a number of tight case studies.  The examples may be C, but they're insightful and more applicable to the problems you're likely to face than the ones encountered when writing the Swing or Collections classes themselves.  Then go out and use a serious optimizer like Quantify, which is essentially what the authors of this book suggest.  At that point, you'll wonder why the authors stopped their review of Collections with Sun's built-in implementations.<br />The code for running mulitple programs and controlling class loading in Chapter 6, though I have not tried it, is interesting and something I'd not seen elsewhere.  Other diversions, such as timers and threading in Swing are covered elsewhere.  What would have been helpful is a detailed look at debugging threading performance, say through object, resource or thread pooling (an idea dismissed earlier for &quot;small objects&quot;).<br />One glaring omission is a serious micro-benchmarking of basic operations.  I found the comparison of speed when using final vs. non-final classes or methods to be startling in practice, and numbers here would help.  Similarly, access times for hash tables vs. arrays, simple object construction times, floating point vs. integer arithmetic times, object variable vs. local variable access, etc.  There are some wonderful micro-benchmark applets on the web with this functionality.  What you'll learn is that up-casting takes forever, so any use of built-in collections/iterators for performance-critical operations will do you in.  <br />I found the constant sales pitch for the Sun HotSpot (TM) Virtual Machine a bit tiring.  It concludes with a recapitulation of the marketing materials in Appendix B.  It is alternately described as &quot;highly optimized&quot;, &quot;state-of-the-art&quot;, having a &quot;superior memory allocator&quot;, &quot;ultra-fast&quot;, having &quot;excellent multiprocessor performance characteristics&quot;, having &quot;agressive inlining&quot;, having &quot;excellent paging&quot;, etc. etc.  The appendix devoted to HotSpot (TM) is particularly noteworty for its omission of any profiling information!	2001-12-21
US	51945867	R3BGXN21PHPJHO	0385482108	738131440	Alfred Portale's Gotham Bar and Grill Cookbook	Books	5	17	18	N	N	A keeper with crucial techniques and insight	Portale is not trying to train you to step up to the saucepan at Gotham and will not have you spending your Saturdays peeling grapes a la Thomas Keller's &quot;French Laundry&quot; cookbook. He's also not trying to give you a complete course in basic techniques a la Julia Child's &quot;The Way to Cook&quot;. Instead, what you get is more of a philosophy and a sketchbook. The introductory essay, titled &quot;Cooking Like a Chef at Home&quot;, is both insightful and inspiring. The recipes, which are presented in their basic form and presentation are sometimes followed with &quot;flavor building&quot; tips (usually additions, like roast shallots for lamb), &quot;variations&quot; (usually substitutions, say of sea bass for red snapper), and sometimes &quot;Gotham Presentation&quot;. Given Portale's trademark towering presentations, it's disappointing that there's not more detail in the book (though he does let you in on how the seared tuna with papardelle and red wine sauce is put together in the restaurant, which is one of my all time favorite dishes). Judging from the end of the introductory essay, Portale's just tired of people focusing on presentation more than flavor. <br />The terse writing and lack of meticulously detailed instructions is a huge contrast with my three other favorite cookbooks named after restaurants: Deborah Madison's &quot;Greens&quot;, Alice Waters' &quot;Chez Panisse&quot;, and Barbara Tropp's &quot;China Moon&quot;. I typically consult all of these books and a few more when I cook something to triangulate both technique and proportions. For instance, consider Portale's recipe for mashed potatos (half of page 206). There are two fundamental clues in this recipe that have transformed my spuds. First, after boiling the potatos, Portale has you return them to the pan to evaporate extra moisture. The critical idea is that the potatos should be dry before you mash them. (Also important for making light gnocchi.) It's the idea and goal that are important -- other chefs get dry potatos differently, say by not peeling or quartering the potatos first. Second, use a potato ricer. The difference between that and blending or using a masher is amazing. You'll have to read other cookbooks to learn that you shouldn't overmash your potatos or they'll become sticky. Ironically, the potatos at the restaurant are not riced, at least with the lamb chops, although I imagine they might be with other dishes; the point is that once you know what's going to happen, you have control. Sadly, Portale doesn't provide photos or instructions on the Gotham presentation, which is in a large scoop set atop a carved-out baked potato with the trademark flying herbs. <br />In the interest of full disclosure, I must admit that I live a block and a half from Gotham Bar and Grill and it's one of my favorite restaurants in the world. If you go there, you can get a copy of this book signed along with a nice little ink illustration of a simmering dish by the chef.	2001-12-14
US	51945867	R2WSYQGFCV113B	0812567757	455052680	The Silk Code	Books	1	19	22	N	N	Nice premise, painful writing	The premise of Paul Levinson's &quot;The Silk Code&quot;, subcultures exploiting low tech but high science genetics through the ages, provides more than enough interesting material around which to tell just about any kind of story.  But, like so many other first-time science fiction novelists, Levinson writes in first person and never shows you something when the main character can think it instead.  Sometimes even that's too much: &quot;A soft, pervasive light engaged us as we walked inside---keener than flourescent, more diffuse than incandescent, a cross between sepiatone and starlight maybe, but impossible to describe with any real precision if you hadn't actually seen it, felt its photons slide through your pupils like pieces of a breeze.&quot; (p. 35, paperback).  Levinson seems to take the &quot;science&quot; part of &quot;science-fiction&quot; a little too literally. The dialog isn't any better, and is often indistinguishable from a character thinking to himself: &quot; 'Ah, we come full circle--this is where I came in. Alas, we unfortunately are not the only people on this earth who understand more of the power of nature than is admitted by your technological world.  You have plastics used for good.  You also have plastics used for evil---you have semtex, which blew up your airplane over Scotland.' &quot; (p. 38) <br />Levinson spends far too many paragraphs with the main characters simply wondering what'll happen next, summarizing what's already happened, and stating the obvious. Read the sample from Amazon, it might be all you can stand.	2001-12-14
US	51945867	R26IJ4NAKCLVD9	0446674362	282618499	The Black Dahlia	Books	5	208	218	N	N	Simply the Best	James Ellroy's &quot;The Black Dahlia&quot; is almost too dark, too gripping and too believable.  It stands out among a crowd of mysteries (sub-genre police procedural) as simply a great novel.  Most mysteries I put down and forget that I've read them.  The characters from Ellroy's noir vision of L.A. in the late 1940s and early 1950s are indelibly etched in my mind, as is Ellroy's characterization of the period and location itself. This is the most visceral book I've ever read.  <br />I picked up this book myself from Partners and Crime's Top 100 shelf (P&amp;C is an awesome mystery bookstore in Manhattan's Greenwich Village). I loaned my copy to a friend, who gave it back to me a week later and said he didn't want to read the rest of the series or any other mystery novel again in his life -- this one was perfect and anything else would just ruin his ability to savor &quot;The Black Dahlia&quot;.  I loaned it to a second friend who finished it in a week, and then went out and bought the complete Ellroy ouevre.  This is not a one-night read unless you have strong eyes, strong coffee, heroic concentration and an iron will.  <br />If you get a chance, hear Ellroy read from these books in person.  <br />Sequencing Ellroy's books is tough, because they're all similar in terms of time frame, setting, and characters.  The L.A. trilogy plus one is: <br />* 1947: The Black Dahlia<BR>* 1950: The Big Nowhere<BR>* 1951: L. A. Confidential <BR>* 1958: White Jazz<br />Dudley Smith also appears in Ellroy's second novel, &quot;Clandestine&quot;, set in 1951.	2001-12-14
US	51945867	RKRYCNFIOJ62G	0312944535	577869779	The Witling	Books	3	20	25	N	Y	Vinge was just getting warmed up	Vernor Vinge was just getting warmed up with this short, but amusing 1976 offering. With &quot;The Witling&quot;, Vinge violates the fundamental rule of fiction -- show, don't tell. There are long rambling internal monologues where all the super-cool technical ideas are introduced and explained. The characters all act and talk like graduate students in a research lab.<br />&quot;The Witling&quot; is well worth it for the ideas, but nowhere near as complete an offering in terms of either technology or characterization as his as his captivating Marooned in Realtime series or his already classic &quot;A Deepness in the Sky&quot;. Like me, you might also enjoy witnessing the evolution of Vinge's craft. And while I don't want to give too much away, there is a notion of discontinuity of time and place in this work that should be familiar to fans of Vinge's later work.	2001-12-12
US	51945867	R2KX3IEMV5PVRD	0262100665	273997157	Statistical Methods for Speech Recognition (Language, Speech, and Communication)	Books	5	29	30	N	N	Thorough Overview of Stats and Algorithms for Speech Rec	This book provides a comprehensive introduction to the statistical models and algorithms used for speech recognition.  Jelinek sets up the speech recognition problem in the traditional way as the decoding half of Shannon's noisy channel model. While Jelinek glosses over signal processing, he provides an excellent overview of the symbolic stages of processing involved in speech recognition.  <br />After a quick introduction, Jelinek digs into the statistics behind Hidden Markov Models (HMMs), the foundation of almost all of today's speech recognizers.  This is followed by chapters devoted to acoustic modeling (probability of acoustics given words) and language modeling (probability of a given sequence of words), and the algorithmic search induced by this model.  There are also advanced chapters on fast match (widely used heuristics for pruning search), the Expectation-Maximization (EM) algorithm for training, and the use of decision trees, maximum entropy and backoff for language models.  He covers several auxiliary topics including information theory and perplexity, the spelling to phoneme mapping, and the use of triphones for cross-phoneme modeling.  Each chapter is a worthy introduction to an important topic.<br />This book does not presuppose much in the way of mathematical, computational, or linguistic background.  A simple intro to probability and some experience with search problems would be of help, but isn't necessary -- you'll learn a lot about these topics reading the book.  <br />All in all, this is the best thorough introduction to speech recognition that you can find.  Read it along with Manning and Schuetze's &quot;Foundations of Statistical Natural Language Processing&quot; from the same series; there's a little overlap in language modeling, but not much.  You might want to start with the gentler book by Jurafsky and Martin, &quot;Speech and Language Processing&quot;, before tackling either Jelinek or Manning and Schuetze.	2001-12-12
US	51945867	RWPGC5Y19MX12	0262611228	310207741	The Balancing Act: Combining Symbolic and Statistical Approaches to Language (Language, Speech, and Communication)	Books	5	16	16	N	N	get it for Abney's classic paper	This volume is worth it for the opening paper, Steve Abney's brilliant &quot;Statistical methods and linguistics&quot;.  Reading this paper in Chris Manning's statistical NLP class at CMU changed the way I think about the field.  I believe it should be required reading for *linguists*.  In my experience, most computational linguists either don't care about mainstream theoretical linguistics, have evaluated it and dismissed it as useless, or have taken on Abney's arguments; the remainder use logic and formal language theory without statistics.  I considered myself in that remainder before reading this paper.  <br />Abney argues that Chomsky's original motive for setting up the paradigm of generative grammar though intuited grammaticality judgements was a simple expedient that allowed him to apply the mathematics of his day (automata and formal language theory). Abney dispatches &quot;classical&quot; generative grammar with the finesse that Chomsky showed in dismissing behaviorism.  Today, information theory (read Cover and Thomas's excellent book) as applied to natural language (read Manning and Schuetze's excellent book) is the paradigm of choice for the mathematically and computationally savvy linguist.  <br />All in all, anyone who is interested in a scientific approach to linguistics should read Abney's paper.	2001-12-12
US	51945867	RA7JQYOJELIOR	0134638379	271213711	Information Retrieval: Data Structures and Algorithms	Books	3	21	23	N	N	Covers Basics with Varying Depth and Quality	Rather than a coherent textbook about information retrieval, this book contains 18 papers by individual authors which vary wildly in depth, quality and relevance today.  The basic issues are covered each with their own chapters: inverted files, vector comparison techniques, stoplists, stemming, tehsauri, string searching, relevance feedback, boolean operations, ranking, clustering and hashing.  <br />The introduction covers hashing and automata for string matching in detail, but doesn't mention vector-based techniques other than Hamming distance (!) and in one paragraph provides the only mention of edit distance (aka Levenstein distance) in the book.  The chapter on PAT trees and the one on optical disks seem out of place due to their depth and obscurity.  On the other hand, there's no mention of caching anywhere.  The chapter on lexical analysis and stoplists by Fox has a nice introduction, but then devolves into page after page of C code.  Ditto for Frakes' chapter on stemming -- good introduction, but we didn't need ten pages of code.  Same for the thesaurus chapter -- a few pages of introduction, and then 40+ pages of code for some kind of hierarchical clustering.  Baeza-Yates' chapter on string searching covers Knuth-Morris-Pratt and Boyer-Moore briefly and even contains some interesting empirical data, but again, we didn't really need the C code.  Harman's chapter on relevance feedback (query modification) stands out as being entirely sensible, high level and informative, but is a decade behind the times.  The chapter on boolean operations provides a few pages of info and then mysteriously spends 10 pages on bit vector code and then another handful on hashing.  Then the following chapter on hashing has 40 pages of C code for perfect hashing!  Harman's later chapter on ranking algorithms is a useful overview of scoring (though very high level).  Rasmussen's chapter on clustering is also thoughtful, but rather non-standard -- you don't even get k-means, everyone's favorite clustering algorithm, and it also recaps the definitions of many of the other chapters.  <br />Unfortunately, you don't get any higher-order graph analysis techniques that power web search engines like Google.  You won't get any kind of help for load balancing servers or databases, which is critical. You also don't get any dimensionality reducing and smoothing techniques like latent semantic analysis or principal components analysis.  There's also no analysis from a users' perspective on usability and the different kinds of tasks that peopel might be using information retrieval for.  And of course, there's no discussion of natural language understanding techniques or crosslingual or multilingual retrieval techniques.  Finally, it's all text based and you won't get any information on retrieving audio or images.  <br />If you're serious about information retrieval, this book lacks the depth and recency to leave you feeling like an expert.  The statistical language processing book by Manning and Schuetze contains an excellent introduction to information retrieval algorithms, as well as reams of background on statistical language processing you'll want to understand before getting into information retrieval.  For more details on information retrieval itself, check out the collection of primary source papers edited by Karen Sparck-Jones: Readings in Information Retrieval.	2001-12-07
US	51945867	R2T72DVZN7FKHB	0735605661	910669231	Microsoft Windows User Experience (Microsoft Professional Editions)	Books	5	27	28	N	N	Comprehensive Style Guide	This book is a frame by frame, widget by widget, menu item by menu item prescription for &quot;proper&quot; Windows application etiquette.  By following this book's advice, your applications will look and feel just like a member of Microsoft Office. You'll learn everything from how many units to space a button from the border of a box to how to select multiple discontinuous pieces of text and then copy and paste them across applications.  There's even instructions on editing the registry so that your documents can be printed from the explorer.<br />It's essentially a style guide for Windows GUIs the way the Chicago Manual of Style is a style guide for writing English.  It won't make you a good writer, but no one will correct your punctuation.<br />I actually found this book useful from a Windows user perspective.  It tells you how all the controls are supposed to work.  If you use MS apps a lot, you've probably intuited a lot of this, but it's interesting to see it all laid out.<br />This book does not explain how to use the Windows APIs to create GUIs.  Get a book on Visual C++ or VB for that. This book does not explain how to design a usable application. Read Jeff Johnson's GUI Bloopers or Alan Cooper's About Face.  This book does not teach you to be a visual designer.<br />This book is about as interesting to read as a typical user's manual.  It's one unforgiving piece of advice and description after the next without a single case study in the entire 500+ pages.<br />Even so, if you want to understand how Windows apps are &quot;supposed&quot; to behave or you have to write such applications yourself, this book is a must-have.	2001-11-18
US	51945867	R1NETODRJYZP6F	1568843224	28636822	About Face: The Essentials of User Interface Design	Books	3	23	23	N	N	thought-provoking, but irritating	Alan Cooper needs an editor as badly as the builders of GUIs need a UI designer.  This book reads like a hastily-assembled series of email flames.  <br />In between the flaming rants, there are a few positive contributions.  Unfortunately, they're typically presented in an oddly half baked way, with the metaphors being drawn much more sharply than the UI recommendations.  Here are some examples from page 23, which I flipped to at random: &quot;assembling bicycles on Christmas Eve was a cakewalk compared to getting _The Lion King_ CD ROM to work&quot;.  Yes, we all know installation is hard.  But what do we do about it?   &quot;Either the software industry will regulate itself like doctors and architects do, or the government will regulate it like hairdressers and taxi-drivers&quot;.  Hmm.  Still don't see how this relates to GUI design? &quot;If carpenters designed houses, they would certainly be easier or more interesting to build, but not necessarily better to live in&quot;.  Typical of his focus on getting design out of the programmer's hands. &quot;It's as though the scaffolding is so labor-intensive that the urge to incorporate it into the finished house is irresistible&quot;. He goes on to discourage designers from using anything other than pencil and paper and to discourage prototyping because it'll stick.  (You'll find much more insight on software engineering in toto in Hunt and Thomas's &quot;The Pragmatic Programmer&quot; or Beck's &quot;Extreme Programming&quot;.    <br />Just because Cooper's unfocused and condescending doesn't mean he's always wrong. Three topics, in particular, stuck with me: no dialog boxes, save is the default, and soverign apps.  Reading this book caused me to completely rethink the current app I was designing.<br />It's clear that Cooper spends most of his time at the computer doing word processing.  Almost all of the negative examples (I don't recall any positive ones) are drawn from Microsoft products, primarily Win95 itself andWord.<br />I found Johnson's book &quot;GUI Bloopers&quot; to be far more insightful on actually designing, laying out and testing GUIs.  Johnson's book is refreshingly polite, case-study oriented and thoughtful.	2001-11-13
US	51945867	R166UAPC1P3UKZ	0380815931	307888158	In the Beginning...was the Command Line	Books	2	28	34	N	Y	Two stars for the first four pages	Let me preface this review by saying that Neal Stephenson is one of my all-time favorite authors -- I've read all of his books, even under the pseudonym Stephen Bury, all of his Wired articles, and everything I see that he's written online, and I loved every word of them.  This book is about the length of one of his shorter Wired articles or a chapter from Cryptonomicon -- more on the order of a pamphlet or a &quot;young adult&quot; book.  <br />The automobile sales metaphor in the first four pages that compares Windows, Linux, Be-OS and the Mac is worth reading.  Stephenson's comments about the command line are not.  If you really want to know why to use a command line, check out Hunt and Thomas's &quot;The Pragmatic Programmer&quot;.  As they point out, it's all about the automation, and this is essentially a professional's tool.  If you really want to understand the marketing side of things and the network effect in order to understand why Microsoft has market share, read &quot;Information Rules&quot; by Shapiro and Varian; to understand how hard it is to port geek solutions to the masses, check out &quot;Crossing the Chasm&quot; by Moore.  Otherwise, read some of Stephenson's fiction, which is far more enjoyable.	2001-10-30
US	51945867	R2BDV6D0RK38WE	1566091594	89907476	The Non-Designer's Design Book: Design and Typographic Principles for the Visual Novice	Books	5	87	92	N	N	Sensible and Practical Advice for Layout and Typography	Robin Williams provides a practical introduction to the classical principles of design in this pamphlet-sized book. Her discussion of layout is organized around four basic design principles: Contrast, Repetition, Alignment and Proximity. Each is presented in its own chapter with plenty of you-can-do-it-at-home examples. The typography section explains the principles of Concord, Conflict and Contrast, based on Williams'classification of type faces by style (Oldstyle, Modern, Slab Serif, Sans Serif, Script and Decorative), weight (Light, Bold), Shape (Narrow, Wide), and spacing. A discussion of color is notably absent; the roots of this book in early grayscale Macintosh computing show through.<br />Williams's book should hit the mark for amateurs creating one-page designs such as simple web sites, brochures or business cards. Set aside an hour or two to read it and do the exercises, and your designs should improve immensely. Mine have.	2001-10-28
US	51945867	R3174GAG7HFNIX	0201310058	321346029	Effective Java: Programming Language Guide (Java Series)	Books	5	1	3	N	Y	Theoretically Grounded Practical Advice	Having read Chapter 3: Methods Common to All Objects, which is available along with Chapter 5 on developer.java.sun.com, I'm going to buy the book. Like other chapters, the third is loosely organized into a series of essays vaguely labeled as &quot;Items&quot;, the generic naming of which is a direct insult to the genre that brought you rules, propositions, theorems, corollaries, conjectures, desiderata, axioms, patterns, and even tips. Chapter three's contributions include Item 7: Obey the general contract when overriding equals, Item 8: Always override hashCode when you override equals, Item 9: Always override toString, Item 10: override clone judiciously, and Item 11: Consider implementing Comparable. Not exactly forceful advice. Luckily, Bloch's content rises above the item-oriented organization. <br />Taken together, the suggestions in the third chapter provide a clear and well-reasoned articulation of the citizenship requirements for a good Object as imposed by the Java class libraries.	2001-10-16
US	51945867	R3ABGQ2ZGIH22L	0195135431	122796718	The Philosophy of Language	Books	5	49	50	N	N	Just the Classics	Anyone serious about meaning in language should read these articles.  They provide a baseline on which all other work builds. Whether you are interdisciplinary or only care about linguistics, philosophy, artificial intelligence or cognition, this book is one must-read paper after another.<br />I used it for both my graduate semantics and undergraduate philosophy of language classes at Carnegie Mellon.  You can read these papers on your own -- they're actually very accessible for papers on philosophy and do not require any prior logical background (though an intro to logic would surely help). Taken together, this book is the perfect basis for a quarter, semester or whole year of philosophy of language. <br />The book's organized into sections on Truth and Meaning (Quine's classic paper on empiricism, Church on intensionality, Davidson and Strawson on truth and Tarski on semantics), Speech Acts (Austin on Performatives, Searle on Speech Acts, Grice on cooperation), Reference and Descriptions (Frege on sense and reference, Russell on denoting and descriptions with Strawson's reply on referring), Names and Demonstratives (Kripke on Naming and necessity and Putnam on meaning and reference), Propositional attitudes (Quine and Kaplan on quantifiers, Davidson and Kripke on propositional content, and Barwise and Perry on situation semantics), Metaphor (Davidson's classic paper, though I believe the second edition contained Searle's excllent paper on metaphor), Interpretation (Quine on meaning and Searle on indeterminancy), and the Nature of Language with what's left (Wittgenstein and Kripke on privacy, and Chomsky on semantic innateness).	2001-10-11
US	51945867	R2RUYBJ5A0COMN	0821225758	667399031	The Ansel Adams Guide: Basic Techniques of Photography - Book 1 (Ansel Adams's Guide to the Basic Techniques of Photography)	Books	5	104	105	N	N	Great book ON Adams, not BY Adams.	Although I loved this book, and knew what I was buying, Amazon's attribution of this book to Ansel Adams is misleading. This is a book about Ansel Adams' technique, and his zone system in particular. It's not a book by Adams. If you want Adams' own take on the basic techniques of photography, check out his three books: The Camera, The Negative, The Print, as well as his book of case studies, The Making of 40 Photographs. It takes a lot of nerve to write a book like this when Adams has already done a bang up job of it himself. Surprisingly, Schaefer's effort doesn't pale in comparison to the master's own. Plus you have the advantage of a single book rather than Adams' three. Schaefer provides an excellent guide to Ansel Adams' zone technique, with great illustrations. And despite a bit more attention paid to color photography than in Adams' own books, it still seems like an afterthought.	2001-08-30
US	51945867	R1XCLTPJDJ8V98	082121750X	344499691	Examples: The Making of 40 Photographs	Books	5	46	48	N	N	Superb Case Studies	If you want to learn photography and you would prefer to learn (or supplement your learning) by intensive case study, this is the book for you. Ansel Adams is a master at controlling composition, light and perspective, and he conveys his unique methodology admirably in this book. This book covers much more than his epic landscapes -- there are a lot of still life, portrait and architectural case studies. And he's not just discussing the zone system, but also everything else involved, including packing the right equipment, leaving at the right time, and hunting down the right subject. And above all, patience and persistence. The photos themselves are reproduced with admirable tone, sharpness, and contrast, as they are in all the books in this series. And although there are only forty of them, each case study runs two or three pages in addition to a full page photo. And if you like this, check out Ansel Adams' classic three part intensive introduction to photography, in the same series as this book: The Camera, The Print, and The Negative.	2001-08-29
US	51945867	R30BK1YWTDWF4Q	0887407676	453284510	Baseball Games: Home Versions of the National Pastime, 1860S-1960s (A Schiffer Book for Collectors)	Books	5	11	11	N	Y	Great Coffee Table book	This is simply a picture book of a bunch of baseball games with some organization and text fill. The games are organized by century (18th &amp; 19th), and by type (player-endorsed, non-endorsed, card, action and coin-operated). There's a bit of baseball history, but what you'll want this for is the attention to historical detail in the games themselves. There are hundreds of games photographed in a reasonable (if not exceptional) amount of detail; most of the text is just a description of what's in the pictures. Many versions of popular games are compared, with information on how to tell the versions apart, which will be invaluable if you're a collector. For some reason there's four pages on Cadaco, but neither APBA nor Strat-O-Matic get a look in, nor do more contemporary games from 3M or Sports Illustrated or Avalon Hill. Don't expect a forty-dollar art book with prose that'll entertain you into the night. The printing quality, photo quality, and text-quality are only so so. I'm still waiting for the book that compares how the different games are designed strategically and how they play. This one's aimed more at collectors.	2001-08-29
US	51945867	R1VW3FVJ6SYC89	0821221876	492904224	The Print (Ansel Adams Photography)	Books	5	44	50	N	N	Cropping and Contrast Control: The Key Ingredients	Despite the heavy emphasis on chemical and paper, this book's essentially about cropping, contrast control, and presentation.  These are the core topics you'll need to master even if you only do digital photos.  All the better if you use PhotoShop, because it recreates the controls (like burning and dodging) of a darkroom.<br />One thing that may be disappointing is the focus on black and white.  Color control is crucial in making color prints and intimately tied with contrast.<br />The three books in this series can be read independently, but together provide a complete clinic from positioning the camera to displaying a final print.	2001-08-22
US	51945867	RZ4IDDSLREX8	0201441241	102051023	Introduction to Automata Theory, Languages, and Computation (2nd Edition)	Books	5	15	18	N	N	This is the book.	This is the one book that I refer to time and time again for all of my automata-theory needs.  It covers all the fundamental theorems of finite-state automata such as determinization and the pumping lemma in a clear, concise manner.  Excellent coverage of context-free grammars, with excursions into generative power, normalization and parsing.  The book is rigorously mathematical, yet easy to understand.<br />I came to this book fifteen years ago as a grad student after reading Lewis and Papadimitriou (which is good, but overly detailed on notation where context would suffice), used it as a professor teaching automata theory at Carnegie Mellon, and now use it as a software engineer for a speech recognition company that builds grammars.	2001-08-22
US	51945867	R2W374QHSKC16I	0821221868	618746374	The Negative (Ansel Adams Photography, Book 2)	Books	5	19	22	N	N	Zone System still relevant in digital age	Despite the heavy emphasis on chemical negatives, this book's essentially a clinic on Adams' Zone System for contrast control.  As such, it's still totally relevant for the digital age. If you're using chemical negatives, this book's an absolute must have. <br />Adams' attention to detail in testing contrast and resolution in various lighting situations forms the core of the Zone System and of this book.  <br />Issues such as filtration remain the same today as they did with negatives.  Although pushing and pulling film is carried out differently in the digital age, it's not impossible if you have even a modicum of exposure control (for instance, overexposing and lowering brightness will still yield lower contrast).  And if you are into digital, you'll gloat at your full control of exposure tweaks beyond the one-dimensional control you get with timing chemicals in solution. <br />One thing that may be disappointing is the emphasis on black and white. There's a brief description of color, but it really deserves a book of its own.  This is especially true for filtration and contrast control.<br />The three books in this series can be read independently, but together provide a complete clinic from positioning the camera to displaying a final print.	2001-08-22
US	51945867	R352HM1JL7S2IN	1556154844	915418648	Code Complete (Microsoft Programming)	Books	3	8	14	N	N	On the dry side.	This book gets the basic picture right, which must be why so many people like it.  Maybe they even like the rather dry style.  Personally, I prefer Hunt and Thomas's _Pragmatic Programmer_ or Beck's _Extreme Programming Explained_, which cover more or less the same topics in a lighter, case-based style.  And let's face it, we're not proving theorems here, just pointing out some commonsense and some hard learned rules of the road.	2001-08-22
US	51945867	R18KDLTA1JM4E	020161622X	158694092	The Pragmatic Programmer: From Journeyman to Master	Books	5	10	11	N	Y	Ready, fire, aim, aim, aim ...	Tip 15: Use Tracer Bullets to Find the Target. That's among 70 &quot;tips&quot; you'll get from Hunt and Thomas, and one of the most important. I used to think you had to plan everything ahead of time down to APIs and data structures and then go program it like an automaton. Both this book and _Extreme Programming_ by Beck explain why this is a flawed idea in the face of the plastic medium of software. You often don't know what you want, you'll often learn a lot by implementing the first module, or the customer may change their mind about what they want (especially after seeing early versions). I went from academia to a start-up, and this book was a very good outline of how to program in a real world setting. My boss, another former academic, also read it and loved it. You might not learn anything from this book if you're already an old hand at professional programming on a great team. Or maybe it'll just ring the I-knew-that-but-now-I-have-a-name-for-it bell. The discussion of rubber ducking is a good example (just nodding your head behind someone while they explain their code to you and debug it themselves). The discussion of the stone soup phenomenon is another case (read the book to see how it applies). My other favorites among the tips include: don't live with broken windows; make quality a requirements issue; don't repeat yourself; there are no final decisions (strongly related to tracer bullets); keep knowledge in plain text; use the power of command shells (but don't bother reading Neal Stephenson's book on the subject even if you love his other books as much as I do); use a single editor well; &quot;select&quot; isn't broken (think horses not zebras); design with contracts; test your estimates; design to test; test your software or your users will; test early. test often. test automatically; find bugs once; and finally, sign your work. (I wish software designers could do this a little more literally; I love how hardware designers get to etch cool logos on circuit boards.)	2001-08-21
US	51945867	R3SEGNK7MVOKVY	1558605827	551887959	GUI Bloopers: Don'ts and Do's for Software Developers and Web Designers (Interactive Technologies)	Books	5	23	23	N	Y	A complete how-to for GUI designers.	Despite the title, the &quot;Do's&quot; section of this book is where the meat lies.  The &quot;bloopers&quot; are used as lead-ins on how to design interfaces with a focus on usability.  If you're even contemplating designing anything from a web page to an installation shield, you should read this book.  Customers should read this book, and managers should read this book. The book's really not aimed at programmers or graphic designers, but they'll find it plenty interesting, especially since programmers and graphic designers often design GUIs.<br />Johnson gives us a widget-by-widget tour of labels, text fields, buttons, radio buttons, check boxes, and overall layout management.  But he doesn't stop there.  The notion of usability also extends into issues like consistency.  Even more important is responsiveness, the chapter on which is worth the price of the book alone.<br />What makes this book so enjoyable is the multitude of case studies.  These aren't meant to make you laugh out loud like Lucille-Ball-botching-her-line bloopers, but rather to get you to concentrate on the bigger picture of usability.  The longer case studies of Johnson's experience as a consultant on a set-top-box design project and a game interface project are interesting if you're thinking about working with or becoming an interface design consultant yourself.  <br />Another benefit of the book is that it takes you through common and common sensical design strategies starting from needs analysis to paper prototyping to early focus group testing and refinement. The references to deeper studies in many of these areas are plentiful.<br />This book is more focused on GUIs than books like Ben Schneiderman's _Designing the User Interface_, which is a useful, thoughtful survey, but reads like a Ph.D. thesis compared to _GUI Bloopers_.  Johnson is also focused on usability, in contrast to something like the _Java Look and Feel Design Guidelines_, which focuses exclusively on graphical layout issues,such as how many pixels to leave around 9 point sans serif font in a button and what color scheme to use for highlighted icons.<br />One final note:  Johnson ate his own dog food and usability tested his book!	2001-08-19
US	51945867	R2PURABO79FLC2	0060987049	70030622	Microserfs	Books	2	9	16	N	N	Readable, but Overdone.	This book's amusing, especially at first.  After about fifty pages, I found the sophomoric metaphysics and self-important view of programming to be more than a bit self-indulgent.  It's totally Gen-X centered, but I guess that figures, given that Coupland introduced the term in another book.<br />Written as a diary, it follows a programmer for Microsoft who uproots with his group house gang and moves to the Bay Area.  You'll get a lot of musing about cars favored in Seattle vs. the Bay Area as well as the Gap.  Costco is prominent, as are legos, the Mac, etc.  The book should be loads of fun.  Even lots of Star Trek references. But it just doesn't ring true, either technically or in terms of the VC-driven world of startups.<br />If you want a good book of fiction on programmers, check out Neal Stephenson's Cryptonomicon.  If you want pop references, read anything by Stephen King.  If you want silicon valley hype and stories about venture capitalists, read Michael Lewis's non-fiction New New Thing.  If you want to read about marketing high tech, read Gordon Moore's non-fiction Crossing the Chasm.  <br />Spoiler Warning:  This book has the worst ending of any book I've read in recent memory.	2001-08-13
US	51945867	R3CHX4VVH1EY8	055329461X	537633620	The Difference Engine (Spectra special editions)	Books	4	4	6	N	N	Worth it for imagery alone	The vividness with which the authors bring the Victorian computational machinery to life has stuck with me since the book first came out.  I can still feel the clackers computing in their warehouses and feel the whoosh of pneumatic data.  Tie-ins to such wonderful gizmos as the Jacquard loom provide an appropriate scientific backdrop. It's also short and easy to read, definite assets in my opinion; in this way, it contrasts with books by authors such as Vernor Vinge or even Greg Bear (the latters Blood Music excepted), who also introduce wonderful new societies situated among thought-inspiring technical gizmos.  The pitting of London against Paris is more in the style of Agatha Christie than John Le Carre; surely an intentional move which gives the book a nice uncomplicated feel.	2001-08-07
US	51945867	R1SUJEL0ZQ3V5A	0679755713	967090013	Chez Panisse Desserts	Books	5	80	80	N	Y	Spectacular Sherbet and Ice Cream: Technique and Recipes	With the taste of the wild plum sherbet (p. 174) still on my palate, I have to tell you that this is the only book you'll ever need to make the most spectacular sherbets and ice creams you've ever had.  Lindsey Shere organizes her book around types of fruit, and the comparative analyses are alone worth the price.  You quickly learn how apples, pears and quinces differ from berries and how they both differ from summer fruits such as nectarines and plums.  This book has a lot of classic tart, cobbler and related recipes. I don't bake and use this book solely for fruit sherbets and ice creams!  I can attest to the results of several fruit cobblers that my wife made from this book (she's used it for years), but I can't vouch for the recipes firsthand.<br />For the past two years, I've been following Shere's inspiring book religously in making sherbets and ice creams from whatever's fresh at the Union Square Greenmarket on a given Saturday.  I've made wild plum sherbet, nectarine sherbet, apricot sherbet, apricot ice cream, peach ice cream, blueberry ice cream, raspberry sherbet, strawberry sherbet, strawberry ice cream and even coconut (though those weren't grown locally). Each one has been great, and I'm only using a fifty dollar Krups ice cream maker. The differing recipes and strong attention to technique provide a clinic on balancing acidity through lemon peel, sweetness through sugar, and texture through blending and straining.	2001-08-06
US	51945867	R3L3PK3CT74XSF	0201725886	717099151	Java&#8482; Look and Feel Design Guidelines (2nd Edition)	Books	5	3	3	N	N	get it online!	One excellent feature of the book is that it and its code samples are available free online from Sun at java.sun.com/products/jlf/<br />This book is very specifically aimed at designers who want to lay out components that mesh visually with Java's Metal, a Swing-based (javax.swing) cross-platform look and feel. As another reviewer pointed out, it's not primarily about designing an interface for usability, but for look and feel.  It doesn't completely ignore usability issues, but only covers the basics that are built into the platform.  For instance, the book details how many pixels of space to use between buttons and how the text and image on the button should be placed and what it should look like in active/inactive/selected states.  Another example is a detailed description of designing icon bitmaps for different color depths, platforms and internationalization.  <br />This book's invaluable for the detailed description of the behavior of the Swing. A simple example is the description of selecting items in a JComboBox by (a) clicking the primary mouse button to activate the list and clicking on a selection, or by (b) depressing the primary mouse button, scrolling to the selection, and releasing. <br />This is not a book about Java programming per se, but contains many links to illustrative code examples for the look and feel.  But you won't get a detailed description of event dispatching.  (To the book's credit, it does examine which events are available per component.)  Despite its wordiness, I like Kim Topley's book on JFC for the description of the event model and the components, but I haven't compared Topley's book to anything more recent.	2001-05-29
